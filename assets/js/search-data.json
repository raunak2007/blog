{
  
    
        "post0": {
            "title": "Homework/Hacks for Sections 17-18",
            "content": "HACK 1 . Please write a short 1-2 sentence explanation describing the difference between decidable and undecidable problems. Make sure to provide at least one example of each. . &lt;font color=#FF0000&gt;Undecidable problems are problems that algorithms simply cannot solve. One of the first problems discovered is the halting problem. Most of these problems are paradoxical and theoretical situations where answers are most likely are subjective. However, some of these problems can have situations where some inputs have values. But not all values are going to have outputs.&lt;/p&gt; Decidable problems are problems that algorithms can return an output for all inputs. Mostly, these are algebraical problems that are simply solvable. . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; HACK 2 . Which of the following is a 3 step algorithm? . A. 2 x 6 x 8 . B. 4^5 . C. (3 x 8)^2 . D. None of the above . E. All of the above . &lt;font color=#FF0000&gt;ANSWER: C&lt;/p&gt; STEP 1: 3 x 8 . STEP 2 &amp; 3: (24)^2 . The first step is simply multiplying two numbers. The second and third is squaring the result of step one. . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; HACK 3: Rewrite this JavaScript Code in a More Efficient Way (Hint: Use Binary Search) . function peak_finder(array){ let counter = 0 let peak = 0 let peak_index =0 while (counter &lt;= array.length){ console.log(counter) if (counter === 0){ if (a[0]&gt;=a[1]){ peak = a[0] peak_index = counter counter = array.length return `The ${counter-1} indexed number, ${peak} is a peak` }else{ counter+=1 } }else if(counter === array.length-1){ if (a[array.length-1] &gt;= a[array.length-2]){ peak = a[array.length-1] peak_index = counter counter = array.length return `The ${counter-1} indexed number, ${peak} is a peak` } }else{ if (a[counter]&gt; a[counter+1] &amp;&amp; a[counter]&gt; a[counter-1]){ peak = a[counter] peak_index = counter counter = array.length return `The ${counter-1} indexed number, ${peak} is a peak` }else{ counter += 1 } } } } . new one below . function sum(n) { if (n &lt;= 1) { return n; } return n + sum(n - 1); } . HACK 4: Rewrite this Python Code in a More Efficient Way . def merge_sort(data): if len(data) &lt;= 1: return #splits data in half, defines left and right mid = len(data) // 2 left_data = data[:mid] right_data = data[mid:] merge_sort(left_data) merge_sort(right_data) left_index = 0 right_index = 0 data_index = 0 while left_index &lt; len(left_data) and right_index &lt; len(right_data): if left_data[left_index] &lt; right_data[right_index]: data[data_index] = left_data[left_index] left_index += 1 else: data[data_index] = right_data[right_index] right_index += 1 data_index += 1 if left_index &lt; len(left_data): del data[data_index:] data += left_data[left_index:] elif right_index &lt; len(right_data): del data[data_index:] data += right_data[right_index:] if __name__ == &#39;__main__&#39;: data = [9, 1, 7, 6, 2, 8, 5, 3, 4, 0] merge_sort(data) print(data) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . data = [9, 1, 7, 6, 2, 8, 5, 3, 4, 0] print(&quot;original list&quot;) print(data) data.sort() print(&quot;--&quot;) print(&quot;sorted list&quot;) print(data) . original list [9, 1, 7, 6, 2, 8, 5, 3, 4, 0] -- sorted list [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . HACK 5: Rewrite this Python Code in a More Efficient Way . def heap_permutation(data, n): if n == 1: print(data) return for i in range(n): heap_permutation(data, n - 1) if n % 2 == 0: data[i], data[n-1] = data[n-1], data[i] else: data[0], data[n-1] = data[n-1], data[0] if __name__ == &#39;__main__&#39;: data = [1, 2, 3] heap_permutation(data, len(data)) . [1, 2, 3] [2, 1, 3] [3, 1, 2] [1, 3, 2] [2, 3, 1] [3, 2, 1] . from itertools import permutations perm = permutations([1, 2, 3]) for i in list(perm): print(i) . (1, 2, 3) (1, 3, 2) (2, 1, 3) (2, 3, 1) (3, 1, 2) (3, 2, 1) . &lt;/div&gt; .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2023/01/08/_12_12_Sections_17_&_18.html",
            "relUrl": "/2023/01/08/_12_12_Sections_17_&_18.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Sections 12-13",
            "content": "Vocab section 12 . Method/Function/Procedure - A set of code that can be run as a package, that takes in parameters and returns a return value Example: add(1, 2), which adds two numbers | Catch all terms for a set of code | . | Parameter - Input values for procedures # Vocab Section 13 | Procedure: is a named group of programming instructions that serves a purpose | Parameter: are input values of a procedure ^ There are two types of procedures, one that returns a value or some type of data and on that just executes a block of statements (void) | Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | . Notes: . Make your names descriptive! | Make your program into smaller independent modules that can be used multiple times | Utilize update functions and recursive | . Activity 1 . PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD) } } goForwardX(6) ROTATE_RIGHT goForwardX(5) . Activity 2 . PROCEDURE rotateDecide(){ if not CAN_MOVE(right){ ROTATE_LEFT() } if not CAN_MOVE(left){ ROTATE_RIGHT() } } PROCEDURE goForwardThenTurn(X){ for i in range x { MOVE_FORWARD) } ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } goForwardThenTurn(2) goForwardThenTurn(3) moveForwardX(3) ROTATE_LEFT() moveForwardX(2) . Activity 3 . INITIAL_SCORE = 25 RETAKE_SCORE = 56 PROCEDURE updateQuiz(init, new, total){ if new/total &gt; init/total { init &lt;-- new } } . Hacks . Section 12 . Problem 1 . This code would display . &quot;The minimum number is&quot; . This is because minimum is defined, but minimum is never displayed, and as a result the minimum number is not shown . Problem 2 . The correct choice would be PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) }. As it matches the formula (total T/ total D). . Problem 3 . False. This would not print anything out, as it does not display anything in the body of the procedure, and when the function is called it does not display the return value. . Problem 4 . Answer 1. This is because we calculate the total footprint individually, per flight, then complete the total by adding the two. Also answer 3 as answer 3 first finds each individually, then adds the two up. . hacks section 12-13 . Problems 1/2/3 . The first procedure would display the value 81*9 = 729, because c is 9, and b = 9*9 (9*2 or 81), and 81 9 | The second procedure would display 190, as temp becomes 110, then divided by 100 to be 1.1. Then the cost (173) is multiplied by 1.1 to give 190. | The third procedure equals 39.44, as first we subtract 32 then multiply by five-ninths. | . 3.13 Homework/Hacks for Part 1 and Part 2 of the lesson . def replaceRByards(toprbyardspg, currentrbyards, totalGames): if ((toprbyardspg/totalGames) &lt; (currentrbyards/totalGames)): toprbyardspg = currentrbyards print(toprbyardspg) replaceRByards(100, 1260, 12) . 1260 . Robot Puzzle: . PROCEDURE goForwardThenTurn(X, dir){ for i in range x { MOVE_FORWARD) } if dir = &quot;right&quot;{ ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } else{ ROTATE_LEFT() MOVE_FORWARD() ROTATE_RIGHT() } } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } goForwardX(1) ROTATE_LEFT() goForwardThenTurn(2, right) goForwardThenTurn(2, left) goForwardThenTurn(1, left) goForwardThenTurn(2, right) goForwardX(1) ROTATE_RIGHT() goForwardX(2) . This will move the robot up, rotate it left. Then it moves up, rotates and moves right one extra, then the same, but to the left. Finally, it will move up one then move to the left one. Then it will move up 2 and move it right one. then it will go forwards, rotate right, then go forwards 2 through goForwardX . What is the correct name of the procedure? . A: PROCEDURE MYLIST. Technically, you can use the name MyList for a procedure, it is just that it still needs caps. using procedure in lowercase is not how collegeboard wants people to define procedures, and so PROCEDURE MYLIST (using full caps) is the best pick. . Second Robot Problem . PROCEDURE MoveForwardsUntil(direction, number){ while number != 0{ MOVE_FORWARD() if direction = right{ if not CAN_MOVE(right){ number -= 1 } } else if direction = left { if not CAN_MOVE(left){ number -= 1 } } } MOVE_FORWARD() } ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MoveForwardsUntil(right, 3) ROTATE_LEFT() MOVE_FORWARD . The procedure here decrements number by one every single time it passes a black block by checking whether it can move that way. That way, we can count to see how many black blocks we pass. Then the procedure makes the robot move one forward to ensure it is lined up. . New Robot Problem (I forgot to pull) &#128128; . PROCEDURE FinishCourse(){ while not Goal_Completed{ if not CAN_MOVE(forward){ if CAN_MOVE(left){ ROTATE_LEFT() MOVE_FORWARD() ROTATE_RIGHT() } else if CAN_MOVE(right) { ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() } else{ ROTATE_RIGHT() ROTATE_RIGHT() MOVE_FORWARD() } } MOVE_FORWARD() } } FinishCourse() . This procedure works because it just asks the robot to move forward until it reaches an obstacle. If it does, then it check first to turn left (because in this case it is more optimal), then to turn right, at which it turns, moves up one (to dodge the obstacle) and then turns back to realign itself. This repeats until it reaches the top, at which point it turns left infinitely until it reaches the goal. . Extra: Creating and finishing my own course . Code to Complete Course . PROCEDURE TurnXDeg(times_To_turn){ for i in range(times_To_turn){ ROTATE_RIGHT() } } PROCEDURE goForwardX(X){ for i in range x { MOVE_FORWARD()) } } TurnXDeg(2) goForwardX(2) TurnXDeg(1) goForwardX(4) TurnXDeg(1) goForwardX(3) TurnXDeg(1) goForwardX(2) TurnXDeg(3) MOVE_FORWARD() TurnXDeg(1) goForward(2) . This just uses some simple compound function to repeat certain actions a certain amount of times to complete tasks. . from PIL import Image im = Image.open(&quot;../images/sugma.png&quot;) print(&quot;Course to Finish:&quot;) display(im) . Course to Finish: .",
            "url": "https://raunak2007.github.io/csp-fast-pages/Hacks/procabs",
            "relUrl": "/Hacks/procabs",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "3.9-3.11 Homework and Hacks",
            "content": "Important Vocab/Notes . Indexes: the number that represents an element in a list | Element a integer or string in a list. | Algorithms can be written in different ways and still accomplish the same tasks | Algorithms that appear similar can yield different side effects or results | Some conditional statements can be written as equivalent Boolean expressions | Some Boolean expressions can be written as equivalent conditional statements | Different algorithms can be developed or used to solve the same problem | Algorithms can be created from an idea, by combining existing algorithms, or by modifying existing algorithms. | . 1. Write this Boolean statement in the form of a conditional (if/else) statement: . stayInside⟵((isCold) OR (isRaining)) . { if(isRaining){ stayInside &lt;- true } if(isCold){ stayInside &lt;- true } else { stayInside &lt;- false } } . 2. Create an algorithm that uses selection and/or iteration that will represent one player&#39;s complete turn. . During a turn, each player gets 4 attempts/chances to get the greatest number possible. . | During each attempt, the player will use a random number generator to select a random number from 1 to 10. . | After they have had 4 chances, their score is the greatest number they received from the random number generator, and their turn is over. . | . import random attempts = [] i = 1 while i &lt;= 4: attempts.append(random.randint(1,10)) i = i + 1 print(attempts) print(&quot;Maximum:&quot;, max(attempts)) . [10, 4, 5, 6] Maximum: 10 . 3. Create an algorithm that will allow the arrow to reach the gray square: . { if canmoveFoward{ moveFoward } else{ canturnRight{ turnRight } canturnLeft{ turnLeft } } } . 4. Make a binary search tree of different the list [1,2,3,4,6,9,11,69] . 5. Explain thorughly how to find the number 69 in the list above (use key words) . Using sequential search you would go through the list comparing 69 to every value in the list until the number (69) matches 69. In the order this list is it will take 7 iterations to find 69 | Using binary search you would start in the middle, you can find this by adding the first and last last ((1+8)/2=4.5). You have to round up to 5 for the index, so you start at number 6 in the list. You do this on either side until you get your desired value. (You would want to get 8 because the index of 8 = 69) | . 6. Make a diagram explaining how you found the list (not tree, include equation) . 7. Put this list of strings in a order that can be used for binary search . [&quot;store&quot;,&quot;Market&quot;,&quot;Walmart&quot;,Target&quot;,&quot;Ralphs&quot;] | [&quot;Market&quot;,&quot;Ralphs&quot;,&quot;store&quot;,&quot;Target&quot;,&quot;Walmart&quot;] | Alphabetical order would be the best way to put it | . 8. Explain why Binary Search is more efficient than Sequential Search . Binary search is more efficient than sequential search because sequential search goes one by one in the list comparing each value to the value you are looking for. Binary search on the other hand basically divides the amount of answers it could be after each step, making it a lot faster to find a certian number in a large list. | . 9. [64,36,16,11,9] Explain which number you are finding, how many check it would take, and make a binary search tree . If I am searching for 36 it would take 2 checks. You would start at 16 because it is the middle index. Then you would do 1 + 3 = 4 and then divide by 2 to get 2 for the index. Index 2 is the number 36, so we would stop there. | . Blog/Final Thoughts . I learned about conditional statements vs boolean | Furthed my knowledge on algorithms | Experienced more with different types of algorithms | I learned about binary search and sequential search | I learned that binary search is more effiecient than sequential search | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2023/01/08/_12_08_blog_Unit_3_Sections_9_11-(2).html",
            "relUrl": "/markdown/2023/01/08/_12_08_blog_Unit_3_Sections_9_11-(2).html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Hacks for Section 8 and 10",
            "content": "Notes . Iteration - Repetition of a Process . For Loop - FOR LOOP repeats a function for a set number of times; I is the number of times repeated . While Loop - The while loop is used to repeat a section of code an unknown number of times until a specific condition is met . Initialization - What sets the counter variable to a starting value. For example (var i = 0) represents an initial value of 0. . Condition - Allows the computer to know whether or not to keep repeating the loop. . increment/decrement - Modifies the counter variable after each repetition. . Indexing / List Index - The position of an element in a list, starting from 0 . append, remove, pop - Various methods, append adds an element to the end, remove removes at an index, and pop removes the last item. . Elements [in a list] - An item in a list. . Nesting - Having one data type or function inside another data type or function, such as lists or loops. . Array - Another name for a list, depends on the language . Lists are a collection of data in a sequence that is an iterable | Each sequence is demarcated with an index, starting from 0. This is known as base 0 indexing | In memory, it is stored as a variable name with multiple pointers to each variable stored in a certain order | Lists can also be called arrays | Lists have methods that act upon the list and change them. This moves the pointers within RAM to change the parts of the list. | . Lists methods Mutate, meaning they actively change the list, but they don&#39;t return anything. This means that return a None-type, which you cannot manipulate . Exercise 1 . Task: Reverse a list utilizing features of lists and iteration Hint: Use two parameters with the range function . list = [1, 2, 3, 4, 5] print(&quot;original list:&quot;,list) reverse = [] for i in list: reverse = [i] + reverse print(&quot;reversed list:&quot;, reverse) #shown below is the one using the range function other=[] for i in range(1,len(list)+1): other.append(list[len(list)-i]) print(&quot;other reversed list:&quot;, other) . original list: [1, 2, 3, 4, 5] reversed list: [5, 4, 3, 2, 1] other reversed list: [5, 4, 3, 2, 1] . Exercise 2 . Task: Similar to insertion sort, this algorithm takes an unsorted array and returns a sorted array Unlike insertion sort where you iterate through the each element and move the smaller elements to the front, this algorithm starts at the beginning and swaps the position of every element in the array Expected Output The sorted array from 1-10 . list = [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] print(f&quot;array before sort {list}&quot;) def insertion_sort(list): for index in range(1,len(list)): # repeats through length of the array value = list[index] i = index - 1 while i &gt;= 0: if value &lt; list[i]: list[i+1] = list[i] # shift number in slot i to the right list[i] = value # shift value left into slot i i = i - 1 else: break IS = insertion_sort(list) print(f&quot;array after sort {list}&quot;) . array before sort [9, 8, 4, 3, 5, 2, 6, 7, 1, 0] array after sort [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . MC Quiz . The only question I got wrong on the quiz is the 9th question, show below: . . The correct answer to this question is &quot;FOR loops&quot;. This is because a for loop keeps running for a set number of times, which would be the most appropriate in this situation when the user is iterating over a list UNTIL the user inputs ‘quit’. I said that it would be a while loop, since I thought that it was a conditional statement if the user was inputting ‘quit’. . Reflection . Throughout these sections, I gained a better understanding of many different concepts. I learned more in depth about the main types of loops (for, while, recursive), and I was also able to learn more about the importance of iterations and lists. Learning more about certain features of lists such as the append and pop option allows me to automate certain code snippets in a more efficient manner, rather than nesting identical code to complete the same task, but in a more tedious manner. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2023/01/08/_12_06_hacks.html",
            "relUrl": "/2023/01/08/_12_06_hacks.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 2-3 Vocab",
            "content": "Vocab . Binary: Bits Bits are single pieces of information which can either have a 0 or a 1. They are the building block of all code. | . | Bytes A single byte is 8 bits. Megabytes, Gigabytes, etc are all multiples of bytes and they represent memory or storage | . | Hexedecimal base 16 counting. Binary is a base 2 system | . | Unsigned Integer An unsigned integer is a basic number value in bits. It does not include a negative or positive and therefore is non-negative | . | Signed Integer An integer with a negative or positive | . | Floating Point A way of approximately representing decimal values | . | Boolean Data type with a true/false value, can be represented with 1s and 0s | . | ASCII A Character encoding standard, transfers binary to chars | . | Unicode Another character encoding standard, builds on ASCII | . | RGB Color codes are represented in Hexidecimal which describe the red green and blue values to build a color EX: #FF0000, rgb(255, 0, 0) | . | . | Algorithm Terms: . Variables: An abstraction inside a program that holds a specific value or meaning defined by the programmer. | Data Types: . Integer- highScore (involves math, save as integer or numbers) | String- firstName (name is text, so it is a string) | Boolean- isSunny (2 options, true or false) | String- phoneNumber (no math, just numbers) | . | Arithmetic Operators: . Plus indicated addition (a + b) | Minus indicates subtractions (a - b) | Asterisk indicated multiplication (a * b) | Slash indicated division (a / b) | . | Managing Complexity: Lists: Allows you to complete a process for each value in the list, or store multiple values to one variable. | 2D Lists: Array within an array. You can pull single arrays through using index and variable commands. | Dictionaries: Allows the storage or data keys and values (assigning a certain piece of data to fit the category it is assigned) | Class: A particular data structure. | Algorithms: An algorithm is a finite set of instructions that accomplish a specific task, us as humans, do algorithms on a daily basis. | Sequence: A specific order a process is completed, which impacts the output. | Selection: Programmer decides between 2 different functions | Iteration: Repetition of a process | For loop: repeats a section of code a set number of times | While loop: repearts a section of code an unknown number of times, until the code is told to break | Expressions: A piece of syntax in coding | . | Characters: Strings : A variable data type which consists of a combination of letters, numbers, and other special characters (ex: @#$%^&amp;*). They are seen inside quotation marks, and operators cannot affect any numbers in the string. Ex: stringVar = “Hello World!” | “Hello World!” is a string. | . | Length: The number of elements in a list. Here’s an example in Python: numList = [1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1] | . | Concatenation: the act of joining two strings into a single string. Often, these strings are printed to an output terminal/console. Here’s an example in pseudocode: concat(“tri”, “llion”) | This concatenates the strings “tri” and “llion”, making a new string “trillion”. | . | Upper, Lower, Traversing Strings The first two (upper and lower) seem to be referring to Python methods. They are quite simple. I think it would be easiest to explain with a demonstration: | String = “WhYaReWeDoInGtHiS” | print(string) | print(string.upper()) | print(string.lower()) | Output: | WhYaReWeDoInGtHiS | WHYAREWEDOINGTHIS | whyarewedoingthis | . | . | . | . Variables, Assignments, Data Abstraction . Variables . Abstraction insde a program that can hold a value | Organizes data with a name | Consist of name, value, type | Understanding of code is through name of variables | Types of data: Interger, String, Boolean | List can also be stored in variables Print/retreive specific values | easily able to add and remove values | . | . | . Assignments . Assignment operator allows program to change value represented by variable =, +=, -=, *=, /=, **= | . | . Data Abstraction . Method used in coding to usefully represent data | Variables and list are primary tools | Provides seperation btw abstract properties of a data type and concrete details of its representation | . Algorithms . Sequencing Algorithms do tasks in the order of specification. | . | Selection Helps choose two different outcomes based off a decision. | . | Iteration If a condition is true, then the code can repeat. | . | Flowcharts Use shapes and arrows to represent the steps of an algorithm. | . | Pseudocode A blend of human language and coding format. | . | . Arithmetic Operation . Arithmetic operations exist in most programming languages. | subtraction (-) | addition (+) | multiplication (*) | division (/) | Getting the remainder (%) | ORDER OF OPERATIONS is crucial reassigning variables using operations on other variables can get confusing | . | PAY ATTENTION TO SEQUENCING SO OPERATIONS OF VARIABLES DONT GET MESSED UP | Track varaibles (common question in AP Exam) | . String . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. | len () : to find the length of a string | lower () : to convert to lowercase | concat (): in pseudocode and varys from language to language can be used to combine to strings | . Lists and Iteration . Lists . Sequence of variables Used to store multiple items in a variable | ordered and flexibe | . | Tuple: collection thats ordered, unchangeable, allows duplicates | Set: Unordered, unchangeable, doesn&#39;t allow duplicates | Dictionary: ordered, changeable, doesn&#39;t allow duplicates | Index: refrences an element in a list that is in order | Elements: values in the list that are assigned to an index | Methods: append() adds elements | index() returns the index of the first element with specificed value | inset() adds element at given position | remove() removes the first item with the specified value | reverse() reverse list order | sort() sorts the list | count() returns amount of elements with specified value | copy() returns a copy of the list | clear() removes elements from list | . | . Iteration . repetition of a process applied to the result or taken frmo previous statement for loops | while loops | . | 2 types of iteration: indefinite and definite definite: clarifies how many times the loop is going to run | indefinite: how many times its going be ran based on conditions | . | When object is iterable it can be used in an interation | Iter() returns an interator | Strings, list, dictionaries, sets, and tuples are iterable objects | Break: stops the loop | . 2D Iteration . Lists of lists | Read in 2 dimensions (list on top of list | . Algorithms and Conditionals vs Booleans and Binary Search/Flowcharts . Algorithms . Process or set of rules to be followed through code Set limitations | . | Algorithms can be written in different ways and still accomplish the same tasks | Algorithms that appear similar can yield different side effects or results. | Some conditional statements can be written as the same as Boolean expressions (VICE VERSA) | Different algorithms can be developed or use to solve the same problem. ## Conditional vs Booleans | Boolean expression when an expression outputs true or false | Booleans can only hold true or false ## Flowcharts | Help you visualize functonality of an algorithm | Good way to double check whether an algorithm is acheiving its purpose ## Binary Search | Search algorithm that finds position of target value within a sorted array Algorithm for iteratin gto find a value inside a data set | . | Starts in middle of data set and eliminates half the data | COLLEGE BOARD INDEX STARTS AT 1 NOT 0 ## Libraries | A library is a collection of precompiled codes that can be used later on in a program for some specific well-defined operations. | These precompiled codes can be referred to as modules. Each module contains bundles of code that can be used repeatedly in different programs. | A library may also contain documentation, configuration data, message templates, classes, and values, etc. | Importance: Using Libraries makes Python Programming simpler and convenient for the programmer. | One example would be through looping and iteration, as we don’t need to write the same code again and again for different programs. | Python libraries play a very vital role in fields of Machine Learning, Data Science, Data Visualization, etc. ## APIS | . | An Application Program Interface, or API, contains specific direction for how the procedures in a library behave and can be used. | An API acts as a gateway for the imported procedures from a library to interact with the rest of your code. | . Examples . List Example: . colorsList=[&quot;pink&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;orange&quot;] print(colorsList) . [&#39;pink&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;orange&#39;] . Variable type examples (string,integer,boolean): . name = &quot;table1&quot; #string print(name, type(name)) number = 4 #integer print(number, type(number)) isAbsent = False print(isAbsent, type(isAbsent)) . table1 &lt;class &#39;str&#39;&gt; 4 &lt;class &#39;int&#39;&gt; False &lt;class &#39;bool&#39;&gt; . Operators Examples: . num1 = 2 - 1 num2 = 2 + 1 num3 = 2 * 1 num4 = 2 / 1 num5 = 5%2 print(num1) print(num2) print(num3) print(num4) print(num5) . 1 3 2 2.0 1 . Algorithm Examples . Algorithms with same code but differnt results . temp = int(input(&quot;Select a temperature from 0 to 99 degrees F&quot;)) if (temp &gt;= 90): print(&quot;It&#39;s too hot outside!&quot;) else: if (temp &gt;= 65): print(&quot;Sure I will play outside!&quot;) else: print(&quot;It is too cold outside!&quot;) # Input 54 and then 95, what do you notice? . It&#39;s too hot outside! . temp = int(input(&quot;Select a temperature from 0 to 99 degrees F&quot;)) if (temp &gt;= 90): print(&quot;It&#39;s too hot outside!&quot;) if (temp &gt;= 65): print(&quot;Sure I will play outside!&quot;) if (temp &lt; 65): print(&quot;It is too cold outside!&quot;) # Input 54 and then Input 95, what do you notice? . It&#39;s too hot outside! Sure I will play outside! . Algorithms that accomplish the same task but differnet code . sum = 1 counter = 3 #iteration var = 0 while (var &lt; 4): #while the var is &lt;= 4, it executes those commands, once it exceeds it hits the else command sum = sum + counter counter = counter + 2 var = var + 1 # now go through the whole thing 4 times, this is an iteration, a vital part of algorithms. else: print(sum) . sum = 0 counter = 9 #iteration while (counter &gt;= 1): sum = sum + counter counter = counter - 2 print(sum) . Building an Algorithm Steps: . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) if (varx %2 == 0): varx == varx/2 # Change print to the function else: varx == varx * 3 + 1 # Change print to the function print(varx) . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) while varx != 1: if (varx %2 == 0): varx = varx/2 # Change print to the function else: varx = varx * 3 + 1 # Change print to the function print(varx) . print(&quot;choose value for x&quot;) varx=int(input(&quot;Enter any positive Integer&quot;)) print(varx) while varx != 1: if (varx %2 == 0): varx = varx/2 print(varx) # add Display else: varx = varx * 3 + 1 print(varx) # add Display print(varx) # Final # Should be 1 every time . Binary Search Example: . def BinarySearch(array, x, low, high): # Repeat until the pointers low and high meet each other while low &lt;= high: mid = low + (high - low)//2 # find the middle (taking the higest index number plus the lowest and divided by two) if array[mid] == x: # if desired number is the middle is found return desired number (middle number) return mid elif array[mid] &lt; x: low = mid + 1 else: high = mid - 1 return -1 array = [3, 4, 5, 6, 7, 8, 9] x = 4 result = BinarySearch(array, x, 0, len(array)-1) if result != -1: print(&quot;Element is present at index &quot; + str(result)) else: print(&quot;Not found&quot;) . Element is present at index 1 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2023/01/08/_12_02_notes.html",
            "relUrl": "/2023/01/08/_12_02_notes.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Week 14 Student Teaching Notes Group 1",
            "content": "Unit 3.1 . Unit 3.1 Variables and Assignment 1 Hacks . You want to store the number of apples in a shop. What is the best variable name and data type? numApples, integer (correct!) | | . | You are storing true or false in a variable that asks if the classroom is cold. What is the best variable name and data type? isCold, boolean (correct!) | | . | Is itisRainingtodayinsandiego a better option than isRaining? No (correct!) | | . | Which of the following types of data is best for a true or false question? boolean (correct!) | | . | What is the difference between an integer and string of numbers? . An integer can be changed with addition and subtraction and a string is a set number or string of letters. (correct!) My Own 3 Questions: 1.Mr. Yeung and Mr. Mortensen want to keep track of all their students grade levels: sophomore, junior, senior. What is the best variable name and data type? | a. GradeLevel, integer . b. gradeLevel, string . c. gradelevelofmortandyeungsstudents, string . d. gradeLevel, float . | . | . answer: b. gradeLevel, string . 2.I want to create code that displays whether the answer is correct or not correct for a math test, what is the best variable name and data type for this? . a. isRight, integer b. correctAnswer, string c. isCorrect, float d. isCorrect, boolean . answer: d. isCorrect, boolean . 3.I want to find out the number of books in the library, what is the best variable name and data type for this? . a. numBooks, integer b. numbBooks, string c. numberofbooksinlibrary, integer d. numBooks, boolean . answer: a. numBooks, integer . Unit 3.1 Variables and Assignment 2 Hacks . 7 | 10 | 6 6 | 30 30 25 | 20 | The value of first is true, and the value of second is true. | I think this problem had a typo because I got, 21 40 30 2.75, I looked at the answer key and it says &quot;Since c is 30 and d / 2 is 20, d is assigned the value 50.&quot; but the original problem is written as &quot;d ⟵ c / d + 2&quot; | My Own Problems: 1.given the following code segment . key ⟵ true . board ⟵ false . board ⟵ key . key ⟵ board . what is the value of key? . A: true . 2.given the following code segment . a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . b ⟵ c . d ⟵ a + b + c . find the value of d . A: 13 . 3.given the code segment: . a ⟵ 7 . b ⟵ 1 . a ⟵ b . find the value of a and b: . A. a = 1, b = 1 . 4.given the code segment: . num1 ⟵ 5 . num2 ⟵ 8 . num3 ⟵ 10 . nums ⟵ num1 + num2 + num3 . find nums value: . A: 23 . 5.given the code segment: . a ⟵ 2 . b ⟵ 3 . c ⟵ 6 . b ⟵ c . a ⟵ c . c ⟵ a . find the value of a, b, and c: . A. a = 6, b = 6, c = 6 . 6.given the code segment: . first ⟵ yes . second ⟵ no . first ⟵ second . second ⟵ first . what is the value of first and second? . A: first = no, second = no . Unit 3.2 Variables and Assignment 2 Hacks . 7 | 11 | 107 | 1100 | 101100 | 11111110 Extra Hacks: | 1110000000000001 | 111111111111111111111111 | 101010101010101010101010 | 2794 | 1248 | 53800 | Homework/Hacks: . [92, 79, 97, 63] | [&quot;Jamal&quot;, &quot;Tamara&quot;] incorrect! [&quot;Sam&quot;, &quot;Ann&quot;] is the right answer because listB&#39;s new value is now [&quot;Sam&quot;, &quot;Ann&quot;], so list A is [&quot;Sam&quot;, &quot;Ann&quot;]. | . | 6 | 5 | all of the above | -106.2 | 16 | false | 1 and 4 | 3.2 Video 2 classwork follow along . languages_list = [] languages_list = [&quot;Python&quot;, &quot;C++&quot;, &quot;JavaScript&quot;] print(languages_list[0]) . Python . listA = [] listA = [1, 55, 8, 2, 76] listB = [] listB = [22, 7, 13] listA.extend(listB) print(listA) # listA = listB # print(listA) . [1, 55, 8, 2, 76, 22, 7, 13] . colorsYay = [&quot;purple&quot;, &quot;yellow&quot;, &quot;red&quot;, &quot;blue&quot;] numbersYay = [39, 3, 5, 8] print(colorsYay) print(numbersYay) . [&#39;purple&#39;, &#39;yellow&#39;, &#39;red&#39;, &#39;blue&#39;] [39, 3, 5, 8] . colorsYay = [&quot;purple&quot;, &quot;yellow&quot;, &quot;red&quot;, &quot;blue&quot;] numbersYay = [39, 3, 5, 8] combineYay = [numbersYay, str(colorsYay)] print(combineYay) . [[39, 3, 5, 8], &#34;[&#39;purple&#39;, &#39;yellow&#39;, &#39;red&#39;, &#39;blue&#39;]&#34;] .",
            "url": "https://raunak2007.github.io/csp-fast-pages/student%20teaching/2023/01/08/_11_29_Week14hacks.html",
            "relUrl": "/student%20teaching/2023/01/08/_11_29_Week14hacks.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Homework Assignment for 3.3-4",
            "content": "This Group: Theo, Haeryn, Ellie, and Kaylee . 3.3 Video 1 Hacks . Show two examples and label which one is sequence, selection, iteration . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] odds = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(numbers[2]) print(evens) print(odds) . 2 [0, 2, 4, 6, 8, 10] [1, 3, 5, 7, 9] . Explanation . What is happening in this code is that print(numbers[2]) is printing the numbers list but only the item with the value of 2, so it will output 2. Printing evens is making a math function and then if the remainder is 0 it will make a new list. Printing odds is making a math function and them if the remainder of that when divided by 2 is 1, then it makes a new list with odd numbers from the original list . Answers 1 . All the steps combined are sequencing . The step &quot;for i in numbers:&quot; is iteration because they go through all the numbers. . &quot;if (numbers[i] % 2 == 0)&quot; is selection because they sort each number to find the even ones. . i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 . * ** *** **** ***** . Explanation . i is set to 1 and then another variable is set to a star. Then another variable is j which is also set to 1. The function keeps repeating itself over and over until i is not equal to or less than 5. . Answers 2 . All the steps are a sequence . &quot;While i &lt;= 5:&quot; is iteration because they repeat until i reaches 5 . &quot;While j &lt;= i:&quot; is selection because this is where they decide what j is . 3.3 Video 2 Hacks . Practice Problems . given the following code segment below: | a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d: 7 . My Answer: a: 1 b: 7 c: 3 d: 7 . Explanation . First a is set equal to b so a is 1. then b becomes the sum of c and d so b becomes 7. Then d is set equal to b so then d becomes 7 since b was redefined in the last line of code. c is never redefined so it stays the same. . Click for the answer! a = 1, b = 7, c = 3, d = 7 consider the following code segment: | hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | My Answer: 1 . Explanation . This is because cold becomes set equal to hot, so we know both variables are equal to true. Since the variable cold has been redefined, when hot is set equal to cold, so both variables are equal to hot, so it is option 1. . Click for the answer! 1. the value of hot is true, the value of cold is true Make TWO of your own code segments that contain at least 5 defined variables, then provide the answer and EXPLAIN why your answer is correct. | Given the following code segment below: . w ⟵ boat . a ⟵ walk . t ⟵ sea . e ⟵ separate . r ⟵ cane . w ⟵ t r ⟵ e t ⟵ r . What is the value of w? . Click for the answer! sea This is the answer because the value of w is only changing once, and that it is becoming equal to the value of t, which is sea. a = &quot;apple&quot; b = &quot;ball&quot; c = &quot;cake&quot; d = &quot;dessert&quot; e = &quot;elephant&quot; a=c c=a b=d d=a e=b print(a) . cake . Click for the answer! cake because a is only being changed once and it is being set to c which is cake. The output would be cake because a is only redefined once when it is set equal to c. That means that a is set to cake and when a is printed it will output cake. Sequencing | num1 = 3 num2 = 1 num3 = 5 num1 = num2 + num3 num2 = num1 + num3 # num2 is now the new num1 + num3 . What is the value of num1 and num2? . My Answers: num1 = 6 num2 = 11 . Click for the answer! num1 = 6, num2 = 11. This is because num1 is redefined as the sum of num2 and num3, so then it becomes 5+1 so num1 is equal to 6. num2 is defined as the sum of num1 and num3, but since num1 was redefined we have to use the new value. Then it will be 6+5, which is 11. Score: 1/1 . 3.4 Video 1 Hacks . String Homework . Test 1 . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) --&gt; B name &lt;- concat(lastName, var) --&gt; SmithB email &lt;- concat(name, &quot;@gmail.com&quot;) --&gt; SmithB@gmail.com DISPLAY(email) . | What would the result be? . | . Explanation . You can see the output of each one after the line of code. When var is assigned the output will be just B because it is taking the substring of &quot;Bob&quot;. name is assigned lastName and var so it is combining them to make SmithB. Then email is combining name and @gmail.com so the final output SmithB@gmail.com . My Answer: SmithB@gmail.com . Hint: var = &quot;B&quot; name = &quot;SmithB&quot; . . Test 2 . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 --&gt; 4 length2 &lt;- len(word2)/3 --&gt; 3 first &lt;- substring(word1, 2, length1) --&gt; ompu second &lt;- substring(word2, length2+3, length2) --&gt; ook newWord &lt;- concat(first, second) --&gt; ompuook DISPLAY(newWord) . | . . My Answer: ompuook . Explanation . You can see the outputs after each line of code. Length 1 is taking the length of word 1 which is 8 and dividing it by 2 to get 4. Length 2 is taking the length of word 2 and dividing it by 3 to get 3. The variable first is taking the 2nd letter to the 4th letter of word1 so the output will be ompu. The variable second substring too word2 and then found the length and added 3 to it to get 6 and get the other character of 3. We have to reverse it to get [3,6] so the output will be ook. All this is assigned to another variable called newWord and then printed to get ompuook. . Answers . Test 1 . Result: &quot;SmithB@gmail.com&quot; . Test 2 . | Result: &quot;ompuook&quot; | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week14/tri2/2023/01/08/_11_29_Section3&4.html",
            "relUrl": "/week14/tri2/2023/01/08/_11_29_Section3&4.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 3 and 4 Lesson Notes and Hacks",
            "content": "Unit 3.3 Notes . Video 1 . Learning Objective . Express an algorithm that uses sequencing without using a programming language . Algorithms . Algorithms can be expressed in a variety of ways and can be executed by programs which are implemented using programming languages. | An algorithm is a finite set of instructions that accomplish a specific task, us as humans, do algorithms on a daily basis. | . 3 Steps of Algorithms . 1. Sequencing . Sequencing is doing steps in order. | . 3. Selection . Selection is when the programmer decides between two different outcomes. | . 3. Iteration . Iteration is when you have to repeat a step until that condition is fulfilled. | . Video 2 . Vocabulary . algorithm- finite set of instructions that accomplish a specific task, composed of sequencing, selection, and iteration. | selection- a section of code is run only if a condition is met. | iteration- repeating steps or instructions over and over again | sequencing- outline or set of steps that we do and follow in order that they are given | variable- you can store an actual value, the value of a variable in another variable, the result of an operation, or result of a procedural call | . Video 3 . Arithmetic Operators . plus signs are addition | subraction signs are subtraction | asterisk/star is multiplication | slash indicates division | . Unit 3.4 . Video 1 . Vocabulary . String: a sequence of characters | Len: finds the number of characters in a string (length) | String concatenation: combines two or more strings into one (combines words/letters) | Substring: a part of a existing string | . Hacks . 3.3 Video 1 Hacks . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . Sequencing: when the code runs through the all steps. | Iteration: when the code goes through the numbers &quot;for i in numbers&quot; | Selection: when the code picks even numbers by using the code &quot;if (numbers[i] % 2 == 0);&quot; | . i = 1 starString = &quot;*&quot; while i &lt;= 5: j = 1 while j &lt;= i: print (&quot;*&quot;, end= &quot;&quot;) j += 1 print () i += 1 . * ** *** **** ***** . Sequencing: when the code runs through the all steps. | Iteration: when the code line &quot;while i &lt;= 5&quot; runs because it repeats until the asteriks reach 5. | Selection: when the code line &quot;while j &lt;= i&quot; runs because it chosses j. | . 3.3 Video 2 Hacks . Code segment . a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d . My answer: . a = 1 | b = 7 | c = 3 | d = | . . Code Segment . hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . What are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true | the value of hot is false, the value of cold is true | the value of hot is true, the value of cold is false | the value of hot is false, the value of cold is false | My Answer: . | . Creating my own two code segments . Consider the following code segment: . num1 ⟵ 25 | num2 ⟵ 15 | num3 ⟵ 30 | num2 ⟵ num3 | num3 ⟵ num1 | num1 ⟵ num2 | . DISPLAY(num1) . DISPLAY(num2) . DISPLAY(num3) . What is displayed after running this code segment? . 25 15 30 | 30 30 25 | 30 15 30 | 15 30 25 | Click for the answer! 2. because for num 1 the value is replaced by num 3&#39;s value which is 30. For num 2 the value is 30 because its replaced by num 1&#39;s value which was originally 25 but then was replaced by num 3&#39;s value 30. For num 3, the value is 25 because it&#39;s value is replaced by num 2 which num 2&#39;s value was replaced by num 1&#39;s. . Consider the following code segment: . p ⟵ 10 | q ⟵ 20 | r ⟵ 30 | s ⟵ 40 | p ⟵ q | q ⟵ r | s ⟵ q | r ⟵ p | . What is the value of r as a result of running this code segment . 10 | 20 | 30 | 40 | Click for the answer! 2. because q is the variable assigned to p and q&#39;s value is 20. . Sequencing . Problem 4 Answer . num1 = 6 | num2 = 11 | . 3.4 Video 1 Hacks . Test 1 . My Answer: . SmithB@gmail.com | . Test 2 . My Answer: . word1 &lt;- &quot;computer&quot; | word2 &lt;- &quot;textbooks&quot; | length1 &lt;- len(word1)/2 = 4 | length2 &lt;- len(word2)/3 = 3 | first &lt;- substring(word1, 2, len1) = ompu | second &lt;- substring(word2, len2+3, len2) = ook | newWord &lt;- concat(first, second) | . DISPLAY(newWord) . Answer: ompuook .",
            "url": "https://raunak2007.github.io/csp-fast-pages/fastpages/jupyter/2023/01/08/_11_29_3_3_3_4Notes.html",
            "relUrl": "/fastpages/jupyter/2023/01/08/_11_29_3_3_3_4Notes.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Week 13 Python Kernel Test",
            "content": "print(&quot;Hello World&quot;) print(&quot;If you see this, my Python Kernel is working&quot;) . Hello World If you see this, my Python Kernel is working .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/pythonkerneltest",
            "relUrl": "/week13/pythonkerneltest",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Week 13 Javascript Kernel Test",
            "content": "const message = &quot;If you see this, my Javascript Kernel is working!&quot;; console.log(message); . If you see this, my Javascript Kernel is working! . undefined .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/jsKernelTestwk13",
            "relUrl": "/week13/jsKernelTestwk13",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Week 13 Bash Kernel Test",
            "content": "echo If you see this, my Bash Kernel is working! . If you see this, my Bash Kernel is working! .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/bashKernelTestwk13",
            "relUrl": "/week13/bashKernelTestwk13",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "JavaScript Application",
            "content": "The first trick is the tunary operator. . const age = 13 age &lt; 15 ? console.log(&quot;You&#39;re too young to be taking CSP&quot;) : console.log(&quot;You&#39;re the right age to be taking CSP&quot;) . const age = 55 age &gt; 50 ? age &gt; 70 ? console.log(&quot;You are really old&quot;) : console.log(&quot;You are between 30 and 50&quot;) : console.log(&quot;You are below 30&quot;); . The second trick is number to string. . const age = 20; console.log(age); console.log(typeof age); . The third trick is fill arrays. . const users = Array(5).fill(&quot;&quot;); console.log(users); . The fourth trick is unique arrays. . const users = [ &quot;Yuri&quot;, &quot;Harsha&quot;, &quot;Raunak&quot; ] const unique = Array.from(new Set(users)); console.log(unique); . The 5th trick is Dynamic Objects. . const dynamic = &quot;rest&quot;; const users = { name: &quot;Raunak&quot;, email: &quot;raunakmondal07@gmail.com&quot;, [dynamic]: &quot;music&quot; }; console.log(users); . The sixth trick is slicing arrays. . const users = [1,2,3,4,5,6,7]; users.length = 3; console.log(users); . The seventh trick is slicing arrays end. . const users = [1,2,3,4,5,6,7]; console.log(users.slice(-3)); .",
            "url": "https://raunak2007.github.io/csp-fast-pages/apcsp/2023/01/08/_09_25_JavaScriptTricks-(1).html",
            "relUrl": "/apcsp/2023/01/08/_09_25_JavaScriptTricks-(1).html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "App Ideas",
            "content": "Brainstorm . Exercise Counter | Game | Calculator | . Calculator Idea . Use Buttons For numbers | and having a counter at the top | Have a UI that looks like a calculator | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/notebook/2023/01/08/_09_08_Ideas.html",
            "relUrl": "/notebook/2023/01/08/_09_08_Ideas.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "CPT Scoring Part 1",
            "content": "Submission 1: . Reporting Category Student Grading Score Collegeboard’s Score Comments . Program Purpose and Function | 1 | 0 | The video was demonstrated clearly and the explanation following the criteria. | . Data Abstraction | 1 | 1 | The data stored in the list is shown and the second code segment shows it being used. The name of the variable of the list is shown and shows what the data represents. | . Managing Complexity | 0 | 0 | No program code is shown in this category. | . Procedural Abstraction | 1 | 1 | The procedure and its application is shown, and its contribution to the functionality of the program is fully described. | . Algorithm Implementation | 1 | 1 | The code segment shows sequencing, selection, and iteration with the for loop. It is very detailed and I would likely be able to recreate it. | . Testing | 1 | 1 | The written response answers all of the criteria clearly. | . Submission 2: . Reporting Category Student Grading Score Collegeboard’s Score Comments . Program Purpose and Function | 1 | 1 | The video demonstrates input, program functionality, and output. The written response describes the overall purpose clearly, describes the functionality of the program related to the video, and also describes the input and output in the video. | . Data Abstraction | 0 | 1 | The first segment of code does not show a list, it only shows a function. | . Managing Complexity | 1 | 1 | The written response explains how the list manages complexity, and the code segment demonstrates it managing complexity. | . Procedural Abstraction | 1 | 1 | The two code segments both show the procedure and it being called. The description of the procedure is also very detailed, and shows how it contributes to the overall functionality. | . Algorithm Implementation | 1 | 1 | Sequencing, selection, and iteration are all in the program code segment. The steps on how the algorithm works is explained with great detail. | . Testing | 1 | 1 | Fully describes two calls to the procedure in 3c. the conditions and results of each call are clearly stated. | . Reflection: . For Submission 1, Collegeboard did not give the point for Program Pupose and Function because the purpose was not valid. However, I did award a point thinking that the purpose was good enough. This means that when I submit my project to Collegeboard, I should go deeper in the purpose and not just specify the overall function of the program(While also keeping it concise to about 1 sentence). For Submission 2, I did not give a point for Data Abstraction because I thought that you needed to take a screenshot of the variable of the list for the code segment. However, Collegeboard did give the point for Data Abstraction because the code segments did show the use of the lists. While the list wasn’t directly stated in the code segment, the code segment still shows the utilization of the lists which makes this category valid for a point. Also, the names of the lists were specified in 3.b.iii so the grader knows which variables are lists in the code. Therefore, a point for Data Abstraction was awarded. This tells to me that I should show the utilization of a list in the code segments rather than just showing the creation of the variable of the list. Overall, through grading these submissions, I realized that for much of 3a I do not have to write up a whole paragraph for each subsection. I am now aware that I should be more detailed in the code segments and on explaining the code when I will be making my project. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/CPTScore1",
            "relUrl": "/CPTScore1",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 3 Sections 14-15 Hacks",
            "content": "Unit 3 Sections 14-15 Homework . Reflection . Documentation is important for others or for yourself to understand your code later on. This lesson emphasized ways that which code can be efficiently and effectively written through use of libraries, documentation, and APIs. Libraries consist of pre-written code that can be utilizing in other programs. They help to simplify code by storing code segments and features in a separate place, this way, the code being run only has code that the user has written. A library’s documentation describes the different features of a library. Libraries are collections of code and scripts that can provide faster solvents to problems. . Problem 2: Multiple Choice . (1) What does the random(a,b) function generate? . A. A random integer from a to be exclusive | B. A random integer from a to b inclusive. | C. A random word from variable a to variable b exclusive. | D. A random word from variable a to variable b inclusive. | . (2) What is x, y, and z in random.randrange(x, y, z)? . A. x = start, y = stop, z = step | B. x = start, y = step, z = stop | C. x = stop, y = start, z = step | D. x = step, y = start, z = stop | . (3) Which of the following is NOT part of the random library? . A. random.item | B. random.random | C. random.shuffle | D. random.randint | . Problem 3: Short Answer Questions . (1) What is the advantage of using libraries? . Libraries have a distinct advantage of having pre-written code that can provide efficiency at a linear level. Libraries help to simplify complex programs by allowing the code to reference pre-written code. This reduces the workload for the user writing the code and improves reliability. This cuts out time that the user has to write repetitive code. The user can spend more time on the creative and work process then repetitive code writing. . (2) Write a thorough documentation of the following code. . import random # Saves user input in the in the comma seperated format names_string = input(&quot;Give me everybody&#39;s names, seperated by a comma.&quot;) # splits the stored user input by the character, comma, and stores each element in the list names names = names_string.split(&quot;,&quot;) # get the length of names num_items = len(names) # get random number within &lt; num_items random_choice = random.randint(0, num_items - 1) # figuring out randomly who to play person_who_will_pay = names[random_choice] # Prints the name random person name with message print(f&quot;{person_who_will_pay} is going to buy the meal today!&quot;) . Output . Brady is going to buy the meal today! . Problem 4: Coding Challenges! . (1) Create a program to pick five random names from a list of at least 15 names . import random # list of random names random_names = [&quot;Aaron Rodgers&quot;,&quot;Rob Gronkowski&quot;, &quot;Patrick Mahomes&quot;, &quot;Odell Beckham &quot;, &quot;Ben Roethlisberger&quot;, &quot;Russell Wilson&quot;, &quot;Cam Newton&quot;, &quot;Lamar Jackson&quot;, &quot;Antonio Brown&quot;, &quot;JJ Watt&quot;, &quot;Adrian Peterson&quot;, &quot;Keira&quot;, &quot;Deshaun Watson&quot;, &quot; Lionel Messi&quot;, &quot;Jerry Rice&quot;] i = 0 # printing 5 random names print(&quot;The five random names are:&quot;) while i &lt; 5: print(random.choice(random_names)) i += 1 . Output . Lamar Jackson Ben Roethlisberger Russell Wilson Adrian Peterson Deshaun Watson . (2) Create a program to simulate a dice game where each player rolls two fair dice (6 sides); the player with the greater sum wins . import random def playerA(): firstRoll = 0 firstRoll = random.randrange(1,6) secondRoll = 0 secondRoll = random.randrange(1,6) score = firstRoll + secondRoll return score def playerB(): firstRoll = 0 firstRoll = random.randrange(1,6) secondRoll = 0 secondRoll = random.randrange(1,6) score = firstRoll + secondRoll return score first = playerA() print(&quot;First Player rolled&quot;,first) second = playerB() print(&quot;Second Player rolled&quot;,second) if (first &gt; second): print(&quot;First Player won!&quot;) else: print(&quot;Second Player won!&quot;) . Output . First Player rolled 3 Second Player rolled 8 Second Player won! . EXTRA-CREDIT OPPORTUNITY: Create a program to randomly generate one of those 5x5 square CollegeBoard robot courses frequently seen in these lessons . EXTRA X 2: Put safeguards in your program to make sure the robot course is actually possible to complete. . import random # This &gt; is Start # This O is End # These # are obstacles print(&quot;Generating 3 randomized 5x5 squares:&quot;) count = 0 directions = [&quot;up&quot;, &quot;down&quot;, &quot;left&quot;, &quot;right&quot;] while count &lt; 3: grid = [[&#39;_&#39; for _ in range(5)] for _ in range(5)] direction = random.choice(directions) obstacles = 12 for i in range(obstacles): row = random.randint(0, 4) col = random.randint(0, 4) grid[row][col] = &#39;#&#39; finish_row = random.randint(0, 4) finish_column = random.randint(0, 4) grid[finish_row][finish_column] = &#39;O&#39; start_row = random.randint(0, 4) start_column = random.randint(0, 4) grid[start_row][start_column] = &#39;&gt;&#39; print(&quot;Initial Direction: &quot; + direction) for row in grid: print(&#39; &#39;.join(row)) print(&quot;==========&quot;) count = count + 1 . Output . Initial Direction: right _ # _ _ # _ # &gt; _ _ _ # _ _ # _ # # # # # O # # _ ========== Initial Direction: right O _ _ _ _ # _ _ # _ # # # _ # # # _ # _ &gt; _ # # # ========== Initial Direction: up # _ _ # _ _ # # # _ # _ _ # O _ &gt; # _ _ # # _ # # ========== .",
            "url": "https://raunak2007.github.io/csp-fast-pages/unit%203%20sections%2014-15%20hacks/2022/12/14/Unit3Sec14And15Hacks.html",
            "relUrl": "/unit%203%20sections%2014-15%20hacks/2022/12/14/Unit3Sec14And15Hacks.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Binary Calculator",
            "content": "| . | | | | . | | | | . | | | | . | | | | . .",
            "url": "https://raunak2007.github.io/csp-fast-pages/BinaryCalculator/",
            "relUrl": "/BinaryCalculator/",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Week 13 Python Kernel Test",
            "content": "print(&quot;Hello World&quot;) print(&quot;If you see this, my Python Kernel is working&quot;) . Hello World If you see this, my Python Kernel is working .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/pythonkerneltest",
            "relUrl": "/week13/pythonkerneltest",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Week 13 Javascript Kernel Test",
            "content": "const message = &quot;If you see this, my Javascript Kernel is working!&quot;; console.log(message); . If you see this, my Javascript Kernel is working! . undefined .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/jsKernelTestwk13",
            "relUrl": "/week13/jsKernelTestwk13",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Week 13 Bash Kernel Test",
            "content": "echo If you see this, my Bash Kernel is working! . If you see this, my Bash Kernel is working! .",
            "url": "https://raunak2007.github.io/csp-fast-pages/week13/bashKernelTestwk13",
            "relUrl": "/week13/bashKernelTestwk13",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Bits Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 8 0 | 0 | -1 | . Plus Binary Octal Bits Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 8 0 | 0 | -1 | . Plus Binary Octal Bits Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 8 0 | 0 | -1 | . Plus Binary Octal Bits Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 8 0 | 0 | -1 | . Since there is only 8 bits in this binary, the highest we can go is 255, if we go to 266 it will not be able to print . &lt;/div&gt; Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | . &lt;/div&gt; &lt;/div&gt;",
            "url": "https://raunak2007.github.io/csp-fast-pages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 15, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "JavaScript Application",
            "content": "The first trick is the tunary operator. . const age = 13 age &lt; 15 ? console.log(&quot;You&#39;re too young to be taking CSP&quot;) : console.log(&quot;You&#39;re the right age to be taking CSP&quot;) . const age = 55 age &gt; 50 ? age &gt; 70 ? console.log(&quot;You are really old&quot;) : console.log(&quot;You are between 30 and 50&quot;) : console.log(&quot;You are below 30&quot;); . The second trick is number to string. . const age = 20; console.log(age); console.log(typeof age); . The third trick is fill arrays. . const users = Array(5).fill(&quot;&quot;); console.log(users); . The fourth trick is unique arrays. . const users = [ &quot;Yuri&quot;, &quot;Harsha&quot;, &quot;Raunak&quot; ] const unique = Array.from(new Set(users)); console.log(unique); . The 5th trick is Dynamic Objects. . const dynamic = &quot;rest&quot;; const users = { name: &quot;Raunak&quot;, email: &quot;raunakmondal07@gmail.com&quot;, [dynamic]: &quot;music&quot; }; console.log(users); . The sixth trick is slicing arrays. . const users = [1,2,3,4,5,6,7]; users.length = 3; console.log(users); . The seventh trick is slicing arrays end. . const users = [1,2,3,4,5,6,7]; console.log(users.slice(-3)); .",
            "url": "https://raunak2007.github.io/csp-fast-pages/apcsp/2022/11/14/_09_25_JavaScriptTricks-(1).html",
            "relUrl": "/apcsp/2022/11/14/_09_25_JavaScriptTricks-(1).html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "App Ideas",
            "content": "Brainstorm . Exercise Counter | Game | Calculator | . Calculator Idea . Use Buttons For numbers | and having a counter at the top | Have a UI that looks like a calculator | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/notebook/2022/11/14/_09_08_Ideas.html",
            "relUrl": "/notebook/2022/11/14/_09_08_Ideas.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "App Lab Notes",
            "content": "Notes . Our test is on a Calculus Kahoot | Use on event for every function | Have the questions about calculus | Use Variable to keep Score | Use the getTime() function to simulate it like a Kahoot, with faster responses indicating higher scores | . Finished Project . https://studio.code.org/projects/applab/7RkP8F731P_pVyhyzeXEwJyUi3vt6N08ADSlKgFKHjY .",
            "url": "https://raunak2007.github.io/csp-fast-pages/blog/2022/11/14/_09_06_AppLab1.html",
            "relUrl": "/blog/2022/11/14/_09_06_AppLab1.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Lists, Dictionaries, Loops",
            "content": "A Caesar cipher is a simple method of encoding messages. Caesar ciphers use a substitution method where letters in the alphabet are shifted by some fixed number of spaces to yield an encoding alphabet. A Caesar cipher with a shift of 1 would encode an A as a B, an M as an N, and a Z as an A, and so on. The method is named after Roman leader Julius Caesar, who used it in his private correspondence! . alphabet = [&#39;a&#39;,&#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;,&#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] text = input(&quot;Type your message: n&quot;).lower() #asks for user&#39;s message print(&quot;Your message is: &quot; + text) shift = int(input(&quot;Type the shift number: n&quot;)) #asks for shift number print(f&quot;Your shift number is: {shift}&quot;) def encrypt(text, shift): #define function cipher_text = &quot;&quot; #set cipher_text to empty for letter in text: #looping through each letter in the user&#39;s message position = alphabet.index(letter) #set letter&#39;s alphabet index to variable position new_position = position + shift #set the letter&#39;s new position with shift number new_letter = alphabet[new_position] #new letter with new position cipher_text += new_letter #add letters one by one to empty cipher_text print(f&quot;Your encoded text is: {cipher_text}&quot;) #print the encoded text encrypt(text, shift) . Type your message: coding Your message is: coding Type the shift number: 4 Your shift number is: 4 Your encoded text is: gshmrk . Types of Variables: String, Integer, Float, List, and Dictionary In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. . # variable of type string name = &quot;Raunak Mondal&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;age&quot;, age, type(age)) # variable of type float score = 100.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;Html&quot;, &quot;CSS&quot;, &quot;C&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) ###REVERSED ORDER##### fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Banana&quot;, &quot;Pear&quot;, &quot;Blueberry&quot;, &quot;Grape&quot;] fruits.reverse() print(&#39; nReversed List:&#39;, fruits) ###PRINT IN RANDOM ORDER#### import random print(&quot; nAre you bored? Would you like us to give you a random, fun activity to do right now?&quot;) activities = [&quot;biking&quot;, &quot;baking&quot;, &quot;playing basketball&quot;, &quot;going to the beach&quot;, &quot;sleeping&quot;] randomWord = random.choice(activities) print(&quot;An activity you could do is&quot;, randomWord + &quot;!&quot;) . name Raunak Mondal &lt;class &#39;str&#39;&gt; age 15 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;Html&#39;, &#39;CSS&#39;, &#39;C&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; - langs[3] C &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Raunak Mondal&#39;, &#39;age&#39;: 15, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;Html&#39;, &#39;CSS&#39;, &#39;C&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Raunak Mondal &lt;class &#39;str&#39;&gt; Reversed List: [&#39;Grape&#39;, &#39;Blueberry&#39;, &#39;Pear&#39;, &#39;Banana&#39;, &#39;Orange&#39;, &#39;Apple&#39;] Are you bored? Would you like us to give you a random, fun activity to do right now? An activity you could do is playing basketball! . Lists and Dictionaries Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many Dictionary is used to define data patterns. Iteration is often used to process through lists. To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). . InfoDb = [] # Append to List a 2nd Dictionary of key/values #added records for my gender, phone number, and age InfoDb.append({ &quot;FirstName&quot;: &quot;Raunak&quot;, &quot;LastName&quot;: &quot;Mondal&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;September 1&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;raunakmondal07@gmail.com&quot;, &quot;PhoneNumber&quot;: &quot;858-923-6909&quot;, &quot;Age&quot;: &quot;15&quot;, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Programming&quot;, &quot;Programming&quot;,] }) #my partner info in dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Harsha&quot;, &quot;LastName&quot;: &quot;Jai&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;May 16&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;harshadevice@gmail.com&quot;, &quot;PhoneNumber&quot;: &quot;858-832-0156&quot;, &quot;Age&quot;: &quot;15&quot;, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Programming&quot;, &quot;Programming&quot;,] }) import getpass, sys ####User&#39;s input added to list### FirstName = input(&quot;Enter your first name: &quot;) LastName = input(&quot;Enter your last name: &quot;) Gender = input(&quot;Enter your gender: &quot;) DOB = input(&quot;Enter your birthday: &quot;) Residence = input(&quot;Enter your city: &quot;) Email = input(&quot;Enter your email: &quot;) PhoneNumber = input(&quot;Enter your phone number (with dashes in between): &quot; ) Age = input(&quot;Enter your age: &quot;) #for loop for hobbies, since want multiple outputs Hobbies=[] max_length = 3 while len(Hobbies) &lt; max_length: userHobby = input(&quot;Enter a hobby you enjoy: &quot;) Hobbies.append(userHobby) print(Hobbies) InfoDb.append({ &quot;FirstName&quot;: FirstName, &quot;LastName&quot;: LastName, &quot;Gender&quot;: Gender, &quot;DOB&quot;: DOB, &quot;Residence&quot;: Residence, &quot;Email&quot;: Email, &quot;PhoneNumber&quot;: PhoneNumber, &quot;Age&quot;: Age, &quot;Hobbies&quot;: Hobbies, }) # Print the data structure print(InfoDb) . Enter your first name: Raunak Enter your last name: Mondal Enter your gender: Male Enter your birthday: sep 1 Enter your city: San Diego Enter your email: raunakmondal07@gmail.com Enter your phone number (with dashes in between): 858-923-6909 Enter your age: 15 Enter a hobby you enjoy: coding Enter a hobby you enjoy: coding Enter a hobby you enjoy: coding [&#39;coding&#39;, &#39;coding&#39;, &#39;coding&#39;] [{&#39;FirstName&#39;: &#39;Raunak&#39;, &#39;LastName&#39;: &#39;Mondal&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;September 1&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;raunakmondal07@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-923-6909&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Programming&#39;, &#39;Programming&#39;]}, {&#39;FirstName&#39;: &#39;Harsha&#39;, &#39;LastName&#39;: &#39;Jai&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;May 16&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;harshadevice@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-832-0156&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Programming&#39;, &#39;Programming&#39;]}, {&#39;FirstName&#39;: &#39;Raunak&#39;, &#39;LastName&#39;: &#39;Mondal&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;sep 1&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;raunakmondal07@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-923-6909&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;coding&#39;, &#39;coding&#39;, &#39;coding&#39;]}] . Formatted output of Dictionary Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. . InfoDb = [] def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Gender:&quot;, d_rec[&quot;Gender&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Phone Number:&quot;, d_rec[&quot;PhoneNumber&quot;]) print(&quot; t&quot;, &quot;Age:&quot;, d_rec[&quot;Age&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;Formatted for loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . Formatted for loop output . While loop In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output . Recursion (calling a loop repeatedly) This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output . Quiz that stores in a List of Dictionaries . questions = 5 #number of quiz questions correct = 0 #initialize number of correct answers as 0 print(&quot;This is a 5 question trivia quiz, good luck!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) #asks user a question user_input = input() #takes user&#39;s input as variable msg print(&quot;Answer: &quot; + user_input) #print user&#39;s input as Answer if answer == user_input.lower(): #convert user&#39;s input to lowercase print(&quot;Correct Answer&quot;) global correct #allows to modify variable outside of current scope correct += 1 #add 1 to correct count else: print (&quot;Incorrect Answer&quot;) return user_input question_1 = question_and_answer(&quot;Which is the largest planet in the solar system?&quot;, &quot;jupiter&quot;) question_2 = question_and_answer(&quot;Are worker bees male or female?&quot;, &quot;female&quot;) question_3 = question_and_answer(&quot;What type of fish is Nemo?&quot;, &quot;clownfish&quot;) question_4 = question_and_answer(&quot;How much is the diameter of a basketball hoop? (answer in inches and written out as a word)&quot;, &quot;eighteen&quot;) question_5 = question_and_answer(&quot;Name the largest state in America&quot;, &quot;alaska&quot;) if correct &lt; 3: print(f&#39;You scored {correct} correct answers out of 5, better luck next time!&#39;) elif correct &lt; 5: print(f&#39;You scored {correct} correct answers out of 5, nice try!&#39;) else: print(f&#39;You scored {correct} correct answers out of 5, nice going you trivia star!&#39;) Quiz = { &quot;Q_1&quot;: question_1, &quot;Q_2&quot;: question_2, &quot;Q_3&quot;: question_3, &quot;Q_4&quot;: question_4, &quot;Q_5&quot;: question_5 } print(&quot;A record of your quiz:&quot;, Quiz) . This is a 5 question trivia quiz, good luck! Question: Which is the largest planet in the solar system? n Answer: n Incorrect Answer Question: Are worker bees male or female? n Answer: n Incorrect Answer Question: What type of fish is Nemo? n Answer: n Incorrect Answer Question: How much is the diameter of a basketball hoop? (answer in inches and written out as a word) n Answer: n Incorrect Answer Question: Name the largest state in America n Answer: n Incorrect Answer You scored 0 correct answers out of 5, better luck next time! A record of your quiz: {&#39;Q_1&#39;: &#39;n&#39;, &#39;Q_2&#39;: &#39;n&#39;, &#39;Q_3&#39;: &#39;n&#39;, &#39;Q_4&#39;: &#39;n&#39;, &#39;Q_5&#39;: &#39;n&#39;} .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/week2/2022/11/14/_08_31_loops.html",
            "relUrl": "/jupyter/week2/2022/11/14/_08_31_loops.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Bash Installation Checks",
            "content": "python --version python2 --version . Python 3.9.12 Python 2.7.18 . conda list . # packages in environment at /root/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: python3 /root/anaconda3/share/jupyter/kernels/python3 bash /usr/local/share/jupyter/kernels/bash . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /root/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/fastpages/jupyter/2022/11/14/_08_26_bash.html",
            "relUrl": "/fastpages/jupyter/2022/11/14/_08_26_bash.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "First Jupyter Notebook",
            "content": "Method . I started by using a for loop that goes through the numbers 1 to 100. After that, I used a nested for loop to go through the numbers from 2 to n to see if n is divisible by any numbers less than it (except for 1, which will always be a factor of n). If n is divisible by any of these numbers, then the nested for loop stops and goes to the next number (n+1); otherwise, the value of n is printed in the sequence. The output of this code is shown in the next line. . print(&quot;Prime numbers:&quot;,end=&#39; &#39;) for n in range(1,100): for i in range(2,n): if(n%i==0): break else: print(n,end=&#39; &#39;) . . Prime numbers: 1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/2022/11/14/_08_21_1st_Notebook.html",
            "relUrl": "/jupyter/2022/11/14/_08_21_1st_Notebook.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "N@tM Blog & Final Review",
            "content": "Final Test Review . I completed the Final Test for AP Computer Science Principles at Friday night from 10:30 to 11:30 right before I slept. My performance was definitely skewed by the conditions of my test, as I got a 48/50 and incorrectly answered easier questions related to actions that DevOps (a role that I had) would have experience in. This is my entire performance summary as provided by AP Classroom: As shown above, the only questions I missed was #16 and #17. This is the overview of my performance for each question: For question 16, I chose A because I read the the first 6 words (“The message is broken into packets”) and chose that answer. However, I didn’t realize that there was another answer that also had those first 6 words but had a different second part. I understand why that answer would make sense because if computers had to receive messages as shown in choice A, they would become way more inefficient and the development of large-scale social media networks (such as Discord). For question 17, I chose A because I used the literal definition of a protocol to select my answer. However, I didn’t realize that open protocols also involved the first part of word (“open”) and would provide a way to standardize data transmission between different devices. In addition, protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way. . Summary of the Event (Presenting Our Project) . Night at the Museum (N@TM) was on November 3, 2022. There were four time slots for the different classes, and we (period 5 Yeung) had to be at the event to present our work from 7:00pm-7:30pm. Me and another teammate decided to bring our laptops to the event so that we could show curious people and the teacher our final project. Mr. Mortensen said that we needed to bring someone with us to the event, so I decided to bring my older brother with me so that he too could see our work. All of us had the opportunity to present to guests who attended the event, and the room was very crowded with teams from both classes having their laptops out. After the teacher saw our project functioning the way it was supposed to and showing our work to everybody, we all left the room to go and look at work from other electives. . Projects from Other Classes . After our time to present ended, we all went around to other electives to check out their work, such as 3D Animation, Ceramics, AP Studio Art, and many more. I was fascinated by what I was seeing and was amazed at how talented students around my age can be with their art work. I could very much see a lot of effort and dedication was put into the pieces that I saw, and it overall made me feel inspired to start approaching any art-related activites with a positive mindset. . Here are pictures of some of the artwork that I took at N@TM! I hope you like them as much as I did! :) . .",
            "url": "https://raunak2007.github.io/csp-fast-pages/extra/2022/11/04/n@tm.html",
            "relUrl": "/extra/2022/11/04/n@tm.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Project Week 2 Summary of Points",
            "content": "Issues: Progress: Commits: .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/10/26/week10.html",
            "relUrl": "/markdown/2022/10/26/week10.html",
            "date": " • Oct 26, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Extra Credit Operations at Qualcomm Notes",
            "content": "Important Notes/Lessons . When it comes to engineering, there is an extensive use of science, math, logic, and algorithms to solve problems | Engineering can change the world (and has a good salary!), which inspired Suma to pursue a career in that field (specifically electronics and communication) | There are a variety of streams you can take with engineering, such as biomedical, aerospace, software, electronics and communication, and many more | Suma’s very first job made her nervous at first, but over time, it became easier to mingle with the other students and share exepriences with one another | Qualcomm is a corporation that creates services related to networking and wireless technology Designs wireless telecommunications products | Integrated GPUs | Artifical intelligence products | Inventors of CDM technology | Wants to bring benefits of mobiles to other domains of engineering | It is more than just sitting in front of a laptop! | Volunteering + fun team activities | . | Nisha - director of engineering at Qualcomm | As a kid, Nisha was fascinated by how engineers made useful, innovative products | Fell in love with computer-related engineering because of how well she was doing in math in high school | Initially did not know what she was doing going into engineering | Excited to move to San Diego because that was a city where Qualcomm existed and where the headquarters of her team company were | . Questions . How do you know what side of engineering you want to pursue (software, hardware, etc.) . Keep a growth mindest! | It is important to know what you love | It can be hard to know what your interests are, so it is a good idea to do some research and see what fields resonate the most with you | More exposure may allow you to narrow down some of the things that you like the most | . What is the difference between software and hardware engineering? . Hardware - designs the electronics, develop chips using languages | Software - write the software for the electronics | . What universities specialize in software engineering? . Most universities with engineering will have a software engineering field (i.e. cpmputer science) | In Calfiornia, we have many universities with great university programs | . What are majors that would help me learn the necessary skills and concepts to get a software developer job in tech app companies? . Any tech company (Google, Amazon, Apple, etc.) looks for software engineers | . What should I do in high school to increase my chances to get admitted into these universities? . Challenge yourself when you are in school | Go above and beyond, take honors classes | Take some community college classes in your junior and senior years of high school | Colleges look very closely at acadmeic rigor | . What is one thing you wish you had done earlier that would have greatly helped you with engineering? . Take advantage of any programs that your school may have | This way, you will be better prepared for engineering | . What were some of your biggest challenges and how did you handle them? . When Suma gave birth to her first kid, she had to focus on her kid | Difficult for her to balance between motherhood and work, but with time, she got better at it | Back then, one could not Google resources to help them with engineering | . What are some competitions that I can participate in where I can apply what I have learned? . See if you can join the first Robotics program | Try to find a team in the community that you live in | Gaming companies in San Diego (i.e. Rocket League) | . Personal Takeaways from the Event . After attending the event, I was really fascinated to listen to each of the engineers’ stories, as hearing them made me realize that the journey to become an engineer is a lot of work. I also liked hearing the speakers talk about Qualcomm, as personally, my dad has worked there as a software engineer for many years. Overall, this event has inspired me to possibly pursue a career in some type of engineering, as I know that there are many of opportunities for aspiring engineers like me. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/extra/2022/10/23/intro-to-engineering-notes.html",
            "relUrl": "/extra/2022/10/23/intro-to-engineering-notes.html",
            "date": " • Oct 23, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "4.1 Collegeboard Notes",
            "content": "4.1: Daily Video 1 . Computers are capable of sending and receiving data through packets A packet is a small amount of data sent over a network. Each packet also includes the source and the destination information | . | . How do we get computers to connect and communicate? . A computer system is a group of computing devices and programs working together for a joint purpose | A computer network is a group of interconnected computing devices capable of sending or receiving data | . Packet Switching . Packet Switching: the message(file) is broken up into packets and sent in any order. The packets are reassembled by the recipient’s device | . Path and Routing . Routing is the process of finding a path from sender to receiver | A path between two computing devices on a computer network (a sender or receiver) is a sequence of directly connecting computing devices that begins at the sender and ends at the receiver | . Bandwidth . The bandwidth is the maximum amount of data that can be sent in a fixed amount of time on a computer network | Typically measured in bits per second | . 4.1 Daily Video 1 Vocabulary Practice/Takeaways . 1) Path - a sequence of directly connected computing devices that begins at the sender and ends at the receiver 2) Route - The process of finding a path from sender to receiver 3) Computer System - A group of computing devices and programs working together for a common purpose 4) Computer Device - A physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors 5) Bandwidth - The maximum amount of data that can be sent in a fixed amount of time 6) Computer Network - A group of interconnecting computing devices capable of sending or receiving data . 4.1: Daily Video 2 . Recap . A packet is a small amount of data sent over a network. Each packet also includes the source and the destination information | A protocol is an agreed-upon set of rules that specify the behavior of a system | . Computer Protocol Models . OSI (Open Systems Interconnect): The layers you have to go through to communicate. 7 Groups of Protocols (1-Physical, 2-Data Link, 3-Network, 4-Transport, 5-Session, 6-Presentation, 7-Application) | TCP (Transmission Control Protocol): Establishes a common standard for how to send messages between devices on the internet | IETF (Internet Engineering Task Force): Manages the development of standards and technical discussions concerning the internet in an open and collaborative process | Network Access Layer This layer is focused on the hardware and protocols that carry 0’s and 1’s between two devices | Most common Network Access protocol is Ethernet, implemented in Network Interface Cards. A general function of the physical layer is to deliver packets from one NIC to another (“hop”) | Each NIC has a unique address associated with it called a Media Access Control (MAC) Address. It is used for local “hops” | . | Network Access/Internet Layer Data Transmission A packet contains data that is being transmitted as well as metadata containing informating used for routing information | . | Internet Layer The Internet was designed to be scalable-able to change in size and scale to meet new demands | . | Transport Layer Open standards and protocols enable different manufacturers and developers to build hardware and software that can communicate with hardware and software on the rest of the internet | . | Internet and Transport Layers Transport Layer - How the packets are sent, and for what Reliability - Reliable - sender gets a receipt back, resend as needed Unreliability - send and forget | Purpose - Port number assigned to an application or service | . | Application Layer Web Servers | DNS- Domain Name Service Applications that translate a human readable URL to an IP address | . | World Wide Web (WWW) is not the Internet! | . | . | . Daily Video 2: Takeaways . The Internet is a computer network consisting of interconnected networks that use standardized, open communication protocols | Access to the Internet depends on the ability to connect a computing device to an Internet computing device | A protocol is a set of rules that specify the behavior of a system | The protocols used in the Internet are open, which allows users to easily connect additional computing devices to the Internet | Routing on the Internet is usually dynamic; it is not specified in advance | The scalability of a system is the capacity for the system to change in size and scale to meet new demands | The Internet was designed to be scalable | . Personal Takeaways . After watching these two videos, I now find it pretty fascinating about how the Internet works, as it is much more complex than I thought it was. I was able to learn many new things about the Internet and get a better grasp of how it can be applied to many of the things that we do on the Internet in our daily lives. With this big idea, I had to rewatch certain segments of the video to truly understand what it was talking about. Overall, watching these videos helped me realize the complexity of how the Internet works, and I will definitely be taking what I learned here into more consideration in the many things that I do online. . MCQ Results . . Internet Diagram . .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/week8hacks/2022/10/17/video-notes6.html",
            "relUrl": "/markdown/week8hacks/2022/10/17/video-notes6.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Identifying and Correcting Errors",
            "content": "Alphabet List: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . Alphabet Numbering: While Loop . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i + 1) + &quot; letter in the alphabet&quot;) #adds 1 to the number that is counted by the program to make the number outputted true i += 1 . The letter a is the 1 letter in the alphabet . Alphabet Numbering System: Count . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 1 # counting is started at 1 instead of 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 1 letter in the alphabet . Number List: While Loop . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . Outputting odd numbers: . odds = [] i = 0 while i &lt;= 10: odds.append(i + 1) # starts at 1 instead of 0 to give odd numbers i += 2 print(odds) . [1, 3, 5, 7, 9, 11] . Number List: For Loop . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . Outputting odd numbers: . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): # start at 1 instead of 0 in order to get odd numbers odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . Printing Numbers That Are Multiples of 2 or 5: . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: # skips the number 0, so that the list is from 1 to 100 pass elif numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: # elif makes the code not repeat numbers newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;hyderabadi mutton biryani&quot;: 24.99, &quot;chicken garlic malai kabab&quot;: 19.99, &quot;chicken tikka masala&quot;: 14.99, &quot;mango lassi&quot;: 5.25, &quot;masala cheese dosa&quot;: 19.99} total = 0 price = 0 #shows the user the menu and prompts them to select an item print(&quot;Royal India Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times while total &lt; 3: item = input(&quot;Please select 3 items from the menu&quot;) print(&quot;Item ordered:&quot;, item.lower()) for k,v in menu.items(): if item.lower() == k: price=(price+menu[item.lower()]) print(&quot;Your total order is $&quot;, price) total = (total + 1) break if item.lower() != k: print(&quot;Try choosing your item again.&quot;) continue #code should add the price of the menu items selected by the user . Royal India Menu hyderabadi mutton biryani $24.99 chicken garlic malai kabab $19.99 chicken tikka masala $14.99 mango lassi $5.25 masala cheese dosa $19.99 Please select 3 items from the menuhyderabadi chicken biryani Item ordered: hyderabadi chicken biryani Try choosing your item again. Please select 3 items from the menuhyderabadi mutton biryani Item ordered: hyderabadi mutton biryani Your total order is $ 24.99 Please select 3 items from the menumango lassi Item ordered: mango lassi Your total order is $ 30.24 Please select 3 items from the menuchicken tikka masala Item ordered: chicken tikka masala Your total order is $ 45.23 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/trimester%201/tri%201%20assignments/2022/10/09/AP-error-testing.html",
            "relUrl": "/jupyter/trimester%201/tri%201%20assignments/2022/10/09/AP-error-testing.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "College Board Notes and Multiple Choice Questions",
            "content": "1.1: Daily Video 1 . A computing innovation includes a program as an integral part of its function | A computing innovation can be physical, nonphysical computer software, or nonphysical computing concept | Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations | Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it | . Daily Video 1: Takeaways . Interpersonal skills learned through collaboration: Communication | Consensus Building | Conflict Resolution | Negotiation | . | . 1.1: Daily Video 2 . Pair Programming Two programmers work together as a pair | One programmer is the driver, who writes code, and the other programmer is the observer/pointer/navigator, who reviews each line of code as it is typed in | . | Think-Pair-Share Students first think through a problem by themselves, pair up with a partner to exchange ideas, and then share findings with the class | . | Leave Comments in Code! Communicate to your partner(s) | Communicate to yourself | Acknowledge code segments used from other sources | Acknowledge media used from other sources | Differentiate what you and your partner(s) did | Clarify the functionality of your code | . | How to Collaborate in Class Online Tools repl.it - multiplayer | GitHub - collaboration and repository | Shared document or folder | . | Ask friends and family to test drive your prgoram and give you feedback! | Check with your teacher for your coding platform | . | . Daily Video 2: Takeaways . Consultation and communication with users are important aspects of the development of computing innovations | Information gathered from potential users can be used to understand the purpose of a program from diverse perspectives and to develop a program that fully incorporates these perspectives | Online tools support collaboration by allowing programmers to share and provide feedback on ideas and documents | Common models such as pair programming exist to facilitate collaboration | . Personal Takeways . Watching these videos definitely opened my mind to how crucial collaboration is, especially in a field like computer science. I hope that from now on, my team and I will be able to communicate with each other and help each other no matter the circumstances. . 1.2: Daily Video 1 . Computing Innovations . Innovations can include, but are not limited to: . Applications Games | Social Media | Business | Productivity | . | Physical Devices Computers | Smart Phones/tablets | Smart “Things” | Wearables | . | Systems E-commerce | Cloud services | E-mail | . | . Innovations Created for a Purpose . Guiding Questions: . Why does the computing innovation exist? | What problem(s) does the computing innovation solve? | What does the computing innovation allow us to do that we could not do before? | Examples of Computing Innovations . Social Media Applications Allows users to connect from a distance and archive their activites | . | E-commerce Allows users to save time and money by being able to shop from home | . | Digital Assistant Device Allows users to control their devices hands-free making them safer while driving or more convenient when trying to multitask | . | . Daily Video 1: Takeaways . The purpose of computing innovations is to solve problems or to pursue interest through creative expression | An understanding of the purpose of a computing innovations provides developers with an improved ability to develop that computing innovation | . 1.2: Daily Video 2 . Identifying Inputs to Programs . Computer Programs accept input in a variety of different forms: . tactile (touch) | audio | visual | text (including numerical values) | . Examples: . Smart phone/tablet (texting, entering password, etc.) | Laptop computer (keyboard, mouse, etc.) | Gaming console (send input through buttons) | . How do programs receive input? . Most programs are written in an event driven environment. . “Events” are triggered by some action, which usually sends input to the program | . Types of events a user can trigger: . mouse clicks | screen taps/swipes (force touch) | . What does input accomplish in a program? . Input usually affects the output. Outputs produced by a device can include: . visual | audio | tactile (touch/feel) | text | . Example of output that devices supply: . Smart phone/tablet (things that appear on screen based on what you have pressed/swiped) | Laptop computer (displays texts after using keyboard) | Gaming console (remote vibrations) | . How does a program know what to do upon an event? . An action triggers an event: . Action may be activated by the user or another program/device | . The program “jumps” to the code segment according to the event: . The code segment is ran | Output is triggered by the code segment/additional events that are triggered | . The program does not necessarily execute “in order”: . Code segments are executed as they are called, according to the events triggered | . Daily Video 2: Takeaways . Program inputs are data sent to a computer for processing by a program. Input can come in a variety of forms, such as tactile, audio, visual, or text | An event is associated with an action and supplies input data to a program | Events can be generated when a key is pressed, a mouse is clicked, a program is started, or any other defined action occurs that affects the flow of execution | Inputs USUALLY affect the output produced by a program | Program output is usually based on a program’s input or prior state | . 1.2: Daily Video 3 . What is a program? . A program is a collection of statements: . A statement is a single command | A group of statements is called a code segment | A program is often referred to as “software” | Code segments are executed by rules of the coding language | . What does the program shown in the video do? - written to find the minimum value in a list . The code segment should work for a variety of different lists, such as numbers that are out of order, negative numbers, large numbers, and decimals | . Description . Simply state what the segment does this way, someone else can use the segment in a larger program | . | Include how it does what it does this way, someone could expand upon the code segment | . | . Daily Video 3: Takeaways . A program is a collection of program statements that performs a task when run by a computer | A code segment is a collection of program statements that is part of a program | A program needs to work for a variety of inputs and situations | . Personal Takeways . After watching all three videos, I feel that I truly understand why knowing the purpose and function of a program is essential. Knowing exactly what your program is intended to do could allow someone who is reading it to use it in a larger program or even expand upon it. Overall, having knowledge about this big idea will definitely be helpful and I will apply this idea to anything that I do in this class. . 1.3: Daily Video 1 . How is a program developed? . It all starts with an idea. . Programs are developed with a specific purpose in mind | Developers follow specific steps and stick to their plan | At times, the development is more exploratory than anything, and the steps are dictated by what happens (both good and bad) | . Developers start investigating the problem/purpose and reflect . Investigation is an important step in the process | Developers must: determine the requirements of the program | understand the constraints | understand the user concerns and interests | . | How do developers investigate? surveys | user testing | interviews | direct observations | . | . After initial investigation and reflection… . Developers design the program by brainstorming (draw on investigation) | storyboarding the program | planning user experience | laying out the user interface | organizing into modules | develop a testing strategy | . | Developers decide on the program requirements that… describe how a program should behave | include a list of user interactions | . | The program specifications outline all of the requirements | Developers create a prototype of the program (or components): a gradual process is frequently used so that developers can refine small parts (modules) of the program | . | . Testing, testing, and more testing! . Developers test the program every step of the way | Testing occurs at the micro level | macro level | . | Developers refine and revise through testing, feedback, and reflection | . Daily Video 1 Personal Takeaways . After watching the first daily video of 1.3, I now realize that if I want to have my idea for the final project behave like it is supposed to that numerous trials of the program will have to be run. This way, we can all see what parts of the program should be kept as is and which parts need to be modified to ensure optimal user experience. . 1.3: Daily Video 2 . How is a program developed? . Program development is seldom a solo endeavor . Typically, programs are developed by teams of people | Individuals/teams work on different functional components | Each member of the project deserves to receive credit for their work | Their names must be written in the documentation of the program indicating their contributions to the project | . While documentation is an important place to give credit… . Many projects use comments within the programming language to give credit | This is an important part of the development of the program | When developers find a bug/error in a program, they need to be able to determine who can/should fix the problem | This may be most useful after a program is completed, and users find additional bugs | . Many times developers use code segments, procedures, algorithms, and more that are written by others. . These other individuals are not necessarily a part of the project, but they still deserve to be credited | Similar to quoting someone in a research paper or article | Any code segments, procedures, or algorithms are considered intellectual property of the author | The program documentation should include the author’s name and the source of any code segments being used | This portion of the documentation may resemble a bibliography or a works cited pages in a research paper | . Daily Video 2 Personal Takeways . I now know that any time I use code segments or algorithms, whether they are from my teammates or outside sources, I should always in some way give credit to the original author of that part of the program. This is because any code segments, procedures, or algorithms are considered intellectual property of the author. . 1.3: Daily Video 3 . How is a program developed? . Programmers create something called program documentation in order to… . describe the overall program | list program specifications | describe… functions/procedures/methods within the code | specific code segments | list of events and corresponding outputs | the development of the program | how other programs may interact with the program | . | list of contributors/authors of the program | . When does documentation happen? . Documentation happens throughout the development of the program: . At the beginning: list specifications | During: to keep track of proceess | After: to explain the overall process Documentation throughout can improve: | efficiency of overall programming process | programmers’ ability to test and refine the program | programmers’ response to bugs | . How do programmers document while programming? . Most programming languages offer a commenting feature, although some do not. . Commenting allows programmers to write text within the prgoram | This text does not affect the program | Comments are for programmers to read | This is a form of documentation and can be very usefil when programmers collaborate or work individually | . Examples of comments . Text Languages: . Python Uses the “#” symbol followed by the comment | . | Java Uses the “//” symbol” | /* */ used for multiple line comments | /** */ used for multiple line documentation comments | . | Javascript, C/C++, or Swift similar to Java | XML/HTML ”&lt;&gt;” used for single or multi line comments | . | Applescript/Pascal ”(Comments)” used for single or multi line | . | . Daily Video 3 Personal Takeways . After watching this video, I now understand why it is important to include comments in code, as it allows one to understand what something does and how it was developed. . Proof of Completion of Questions . Program Function and Purpose Quiz (MCQs): . . Program Design and Development Quiz: . . Collaboration Quiz: . . Questions: . How is the pseudocode in the AP Computer Science Principles exam implemented in these multiple-choice questions? | Can collaboration include sharing ideas while working on different parts of a project independently? | How can our team incorporate the concept of collaboration into our project? | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/10/03/collegeboardmcq.html",
            "relUrl": "/markdown/2022/10/03/collegeboardmcq.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "AWS Deployment",
            "content": "Normal Curl Command: HTML 2 Text Curl Command: Flask Website: .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/10/03/aws.html",
            "relUrl": "/markdown/2022/10/03/aws.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;068e8e71ccmsh9b3b0cf234e3d0dp15d891jsn4e9a94382eba&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;068e8e71ccmsh9b3b0cf234e3d0dp15d891jsn4e9a94382eba&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;status&#34;:&#34;success&#34;,&#34;data&#34;:{&#34;stats&#34;:{&#34;total&#34;:1497,&#34;totalCoins&#34;:15880,&#34;totalMarkets&#34;:29499,&#34;totalExchanges&#34;:173,&#34;totalMarketCap&#34;:&#34;983600351889&#34;,&#34;total24hVolume&#34;:&#34;62271932590&#34;},&#34;coins&#34;:[{&#34;uuid&#34;:&#34;Qwsogvtv82FCd&#34;,&#34;symbol&#34;:&#34;BTC&#34;,&#34;name&#34;:&#34;Bitcoin&#34;,&#34;color&#34;:&#34;#f7931A&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg&#34;,&#34;marketCap&#34;:&#34;384252414254&#34;,&#34;price&#34;:&#34;20043.048298420286&#34;,&#34;listedAt&#34;:1330214400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.09&#34;,&#34;rank&#34;:1,&#34;sparkline&#34;:[&#34;20050.210772224906&#34;,&#34;20104.086969351873&#34;,&#34;20157.612080991814&#34;,&#34;20244.902254214187&#34;,&#34;20296.13179911493&#34;,&#34;20355.40420179014&#34;,&#34;20339.584455003165&#34;,&#34;20380.9608314705&#34;,&#34;20334.43838223393&#34;,&#34;20256.397755502137&#34;,&#34;20214.818396073206&#34;,&#34;20187.14537643429&#34;,&#34;20159.744112050765&#34;,&#34;20135.103620334423&#34;,&#34;20152.838726388378&#34;,&#34;20223.999055486038&#34;,&#34;20188.386841136497&#34;,&#34;20099.650776087008&#34;,&#34;20022.525302913724&#34;,&#34;20060.360700925474&#34;,&#34;20058.49372151537&#34;,&#34;20101.79019444109&#34;,&#34;20068.60680042962&#34;,&#34;20037.990245449524&#34;,&#34;20040.006424632564&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc&#34;,&#34;24hVolume&#34;:&#34;34643309443&#34;,&#34;btcPrice&#34;:&#34;1&#34;},{&#34;uuid&#34;:&#34;razxDUgYGNAdQ&#34;,&#34;symbol&#34;:&#34;ETH&#34;,&#34;name&#34;:&#34;Ethereum&#34;,&#34;color&#34;:&#34;#3C3C3D&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rk4RKHOuW/eth.svg&#34;,&#34;marketCap&#34;:&#34;166771865158&#34;,&#34;price&#34;:&#34;1363.4411267728026&#34;,&#34;listedAt&#34;:1438905600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.12&#34;,&#34;rank&#34;:2,&#34;sparkline&#34;:[&#34;1349.0952855712028&#34;,&#34;1351.020589256574&#34;,&#34;1352.8575645347053&#34;,&#34;1363.1472565613235&#34;,&#34;1374.6067561390107&#34;,&#34;1375.494244817268&#34;,&#34;1372.953523219661&#34;,&#34;1375.925446184292&#34;,&#34;1374.4292408387619&#34;,&#34;1368.4552635284397&#34;,&#34;1366.1167355485723&#34;,&#34;1363.0950291906606&#34;,&#34;1360.3636987191837&#34;,&#34;1358.3640048395087&#34;,&#34;1360.4342504890021&#34;,&#34;1369.213281754299&#34;,&#34;1368.3676032576047&#34;,&#34;1364.1360571475047&#34;,&#34;1363.3432991494524&#34;,&#34;1364.0707758574745&#34;,&#34;1363.3606085887561&#34;,&#34;1364.148825121332&#34;,&#34;1361.3954792114398&#34;,&#34;1359.0031784082305&#34;,&#34;1360.6275497370877&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth&#34;,&#34;24hVolume&#34;:&#34;11632395543&#34;,&#34;btcPrice&#34;:&#34;0.06802563694267322&#34;},{&#34;uuid&#34;:&#34;HIVsRcGKkPFtW&#34;,&#34;symbol&#34;:&#34;USDT&#34;,&#34;name&#34;:&#34;Tether USD&#34;,&#34;color&#34;:&#34;#22a079&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mgHqwlCLj/usdt.svg&#34;,&#34;marketCap&#34;:&#34;68226757608&#34;,&#34;price&#34;:&#34;1.0002079259242496&#34;,&#34;listedAt&#34;:1420761600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.13&#34;,&#34;rank&#34;:3,&#34;sparkline&#34;:[&#34;1.0005865365358848&#34;,&#34;0.9997222677525898&#34;,&#34;1.000302739310476&#34;,&#34;0.9991136110008606&#34;,&#34;0.9999088281238293&#34;,&#34;1.0001228624687193&#34;,&#34;1.0002330626742733&#34;,&#34;0.9999085006515177&#34;,&#34;1.000637166558432&#34;,&#34;1.0010864048424142&#34;,&#34;1.000382906070256&#34;,&#34;1.0008861750426428&#34;,&#34;1.0002453605323327&#34;,&#34;1.0005499753502725&#34;,&#34;0.9999702733020642&#34;,&#34;0.9994598707479958&#34;,&#34;1.0012863570809547&#34;,&#34;1.0016448157620703&#34;,&#34;0.9996482331493484&#34;,&#34;1.0004215336032052&#34;,&#34;0.9999570213425627&#34;,&#34;0.9999224272643209&#34;,&#34;1.0007392056569566&#34;,&#34;1.000325844124763&#34;,&#34;1.0001333206640304&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt&#34;,&#34;24hVolume&#34;:&#34;40185169770&#34;,&#34;btcPrice&#34;:&#34;0.000049902984368056&#34;},{&#34;uuid&#34;:&#34;aKzUVe4Hh_CON&#34;,&#34;symbol&#34;:&#34;USDC&#34;,&#34;name&#34;:&#34;USDC&#34;,&#34;color&#34;:&#34;#7894b4&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/jkDf8sQbY/usdc.svg&#34;,&#34;marketCap&#34;:&#34;46265013950&#34;,&#34;price&#34;:&#34;1.0001455267516093&#34;,&#34;listedAt&#34;:1539043200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.14&#34;,&#34;rank&#34;:4,&#34;sparkline&#34;:[&#34;1.0004792903280844&#34;,&#34;0.9997900335112507&#34;,&#34;1.0002409949691449&#34;,&#34;0.9991618677934375&#34;,&#34;0.9998534185910576&#34;,&#34;0.9999410847854596&#34;,&#34;1.0002265014975766&#34;,&#34;0.9999486744759792&#34;,&#34;1.0006735177764154&#34;,&#34;1.0009635471641476&#34;,&#34;1.0003204451973837&#34;,&#34;1.0007368556469354&#34;,&#34;1.0001965553835719&#34;,&#34;1.0005780931027144&#34;,&#34;1.0000088554796078&#34;,&#34;0.9994586243665149&#34;,&#34;1.0011869248897938&#34;,&#34;1.0015496148117664&#34;,&#34;0.9997673802296243&#34;,&#34;1.0003598578573154&#34;,&#34;1.0000778482427792&#34;,&#34;0.9998861638814902&#34;,&#34;1.0006873238669673&#34;,&#34;1.0002882569057026&#34;,&#34;1.0001093290939425&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc&#34;,&#34;24hVolume&#34;:&#34;3358522477&#34;,&#34;btcPrice&#34;:&#34;0.000049899871110446&#34;},{&#34;uuid&#34;:&#34;WcwrkfNI4FUAe&#34;,&#34;symbol&#34;:&#34;BNB&#34;,&#34;name&#34;:&#34;Binance Coin&#34;,&#34;color&#34;:&#34;#e8b342&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1N19L_dZ/bnb.svg&#34;,&#34;marketCap&#34;:&#34;41769765064&#34;,&#34;price&#34;:&#34;288.31435478535195&#34;,&#34;listedAt&#34;:1503014400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.55&#34;,&#34;rank&#34;:5,&#34;sparkline&#34;:[&#34;293.0659068658593&#34;,&#34;293.14125809992265&#34;,&#34;293.927072308215&#34;,&#34;294.83908930457306&#34;,&#34;297.17141223267646&#34;,&#34;296.54802038189746&#34;,&#34;296.5585630450058&#34;,&#34;296.294553936533&#34;,&#34;295.9679395053358&#34;,&#34;295.35520526954036&#34;,&#34;294.7847791953549&#34;,&#34;295.0951173850531&#34;,&#34;294.5306048069131&#34;,&#34;294.30050189031186&#34;,&#34;294.22403335151813&#34;,&#34;294.80827509690437&#34;,&#34;294.33033971155965&#34;,&#34;293.96591310440675&#34;,&#34;293.66576108995565&#34;,&#34;293.99310192770326&#34;,&#34;293.69072498915045&#34;,&#34;293.4540279331547&#34;,&#34;293.23188737664185&#34;,&#34;293.09086576852025&#34;,&#34;290.12424881390194&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb&#34;,&#34;24hVolume&#34;:&#34;1154452180&#34;,&#34;btcPrice&#34;:&#34;0.014384755776299543&#34;},{&#34;uuid&#34;:&#34;-l8Mn2pVlRs-p&#34;,&#34;symbol&#34;:&#34;XRP&#34;,&#34;name&#34;:&#34;XRP&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1oPuTyfX/xrp.svg&#34;,&#34;marketCap&#34;:&#34;24935527184&#34;,&#34;price&#34;:&#34;0.5001251405968443&#34;,&#34;listedAt&#34;:1421798400,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.02&#34;,&#34;rank&#34;:6,&#34;sparkline&#34;:[&#34;0.4937540033530011&#34;,&#34;0.4935243660903145&#34;,&#34;0.49094545203960516&#34;,&#34;0.4918624009473887&#34;,&#34;0.4957389899343572&#34;,&#34;0.49519738378148237&#34;,&#34;0.4958525362412369&#34;,&#34;0.5001275119658124&#34;,&#34;0.5026720193539957&#34;,&#34;0.4991920707876871&#34;,&#34;0.49523182938198607&#34;,&#34;0.4939376274503768&#34;,&#34;0.4938461715574201&#34;,&#34;0.4949672333116952&#34;,&#34;0.49671660295169745&#34;,&#34;0.4983157134968618&#34;,&#34;0.4984385599250301&#34;,&#34;0.4958643382230643&#34;,&#34;0.4954888154508337&#34;,&#34;0.4956388106133542&#34;,&#34;0.49687913330335365&#34;,&#34;0.49710524663432437&#34;,&#34;0.4967817423491458&#34;,&#34;0.4960523063301114&#34;,&#34;0.5002588730645078&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp&#34;,&#34;24hVolume&#34;:&#34;1951851389&#34;,&#34;btcPrice&#34;:&#34;0.000024952548791506&#34;},{&#34;uuid&#34;:&#34;vSo2fu9iE1s0Y&#34;,&#34;symbol&#34;:&#34;BUSD&#34;,&#34;name&#34;:&#34;Binance USD&#34;,&#34;color&#34;:&#34;#f0b90b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/6SJHRfClq/busd.svg&#34;,&#34;marketCap&#34;:&#34;21383646644&#34;,&#34;price&#34;:&#34;1.0000938123108745&#34;,&#34;listedAt&#34;:1563197940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.14&#34;,&#34;rank&#34;:7,&#34;sparkline&#34;:[&#34;1.0005254447624727&#34;,&#34;0.9997390821935204&#34;,&#34;1.0002531268638544&#34;,&#34;0.99900371650551&#34;,&#34;0.9998191100048063&#34;,&#34;0.9999887701995116&#34;,&#34;1.0001269869516713&#34;,&#34;0.9997967773830551&#34;,&#34;1.0005975052435443&#34;,&#34;1.0010354550388738&#34;,&#34;1.000273734165667&#34;,&#34;1.0007993618135278&#34;,&#34;1.0001675248577555&#34;,&#34;1.0004436296308015&#34;,&#34;0.9998831620327592&#34;,&#34;0.9993790802417244&#34;,&#34;1.0011655146499898&#34;,&#34;1.0015608327721508&#34;,&#34;0.9996737479147666&#34;,&#34;1.0003874163381075&#34;,&#34;0.999855178764249&#34;,&#34;0.9997695857566036&#34;,&#34;1.0006363550917916&#34;,&#34;1.0003015517514349&#34;,&#34;1.0001110800082091&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd&#34;,&#34;24hVolume&#34;:&#34;6147025365&#34;,&#34;btcPrice&#34;:&#34;0.000049897290942002&#34;},{&#34;uuid&#34;:&#34;qzawljRxB5bYu&#34;,&#34;symbol&#34;:&#34;ADA&#34;,&#34;name&#34;:&#34;Cardano&#34;,&#34;color&#34;:&#34;#3cc8c8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryY28nXhW/ada.svg&#34;,&#34;marketCap&#34;:&#34;13373195008&#34;,&#34;price&#34;:&#34;0.4298337184562682&#34;,&#34;listedAt&#34;:1506902400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.15&#34;,&#34;rank&#34;:8,&#34;sparkline&#34;:[&#34;0.4294077817341544&#34;,&#34;0.43010743439413285&#34;,&#34;0.4311330265281362&#34;,&#34;0.43172655110842456&#34;,&#34;0.43548735625164897&#34;,&#34;0.4357388064320796&#34;,&#34;0.4347251184847503&#34;,&#34;0.43502688530763967&#34;,&#34;0.4347130159622236&#34;,&#34;0.433471895077104&#34;,&#34;0.43259694190748693&#34;,&#34;0.4319744086787819&#34;,&#34;0.4312921949359245&#34;,&#34;0.4311011590020075&#34;,&#34;0.4302280684331196&#34;,&#34;0.4319813231178509&#34;,&#34;0.43173383257478504&#34;,&#34;0.4303997167352433&#34;,&#34;0.429398559339474&#34;,&#34;0.4299648257425132&#34;,&#34;0.4297343398397519&#34;,&#34;0.42997828353732326&#34;,&#34;0.42937033740290426&#34;,&#34;0.42883620108710657&#34;,&#34;0.42920069115240905&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada&#34;,&#34;24hVolume&#34;:&#34;688064082&#34;,&#34;btcPrice&#34;:&#34;0.000021445526252119&#34;},{&#34;uuid&#34;:&#34;zNZHO_Sjf&#34;,&#34;symbol&#34;:&#34;SOL&#34;,&#34;name&#34;:&#34;Solana&#34;,&#34;color&#34;:&#34;#9cddec&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/yvUG4Qex5/solana.svg&#34;,&#34;marketCap&#34;:&#34;11984369729&#34;,&#34;price&#34;:&#34;33.73772094047453&#34;,&#34;listedAt&#34;:1586539320,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.07&#34;,&#34;rank&#34;:9,&#34;sparkline&#34;:[&#34;33.76424676052897&#34;,&#34;33.851653978639725&#34;,&#34;34.0161400563986&#34;,&#34;34.24080407969258&#34;,&#34;34.31681894129343&#34;,&#34;34.35588900553808&#34;,&#34;34.33042777400873&#34;,&#34;34.38277635446187&#34;,&#34;34.379681489180044&#34;,&#34;34.23752810964467&#34;,&#34;34.00887003667719&#34;,&#34;34.03341197552819&#34;,&#34;34.0205375439139&#34;,&#34;33.986450347226565&#34;,&#34;33.97284356925897&#34;,&#34;34.12322348136839&#34;,&#34;34.04818308388973&#34;,&#34;33.90841528770745&#34;,&#34;33.922236226998955&#34;,&#34;33.895084271212774&#34;,&#34;33.877508596833344&#34;,&#34;33.769632367031555&#34;,&#34;33.71898828195219&#34;,&#34;33.69001212339477&#34;,&#34;33.72267866886839&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/zNZHO_Sjf+solana-sol&#34;,&#34;24hVolume&#34;:&#34;777816550&#34;,&#34;btcPrice&#34;:&#34;0.001683262966698214&#34;},{&#34;uuid&#34;:&#34;a91GCGd_u96cF&#34;,&#34;symbol&#34;:&#34;DOGE&#34;,&#34;name&#34;:&#34;Dogecoin&#34;,&#34;color&#34;:&#34;#c2a633&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/H1arXIuOZ/doge.svg&#34;,&#34;marketCap&#34;:&#34;8488807961&#34;,&#34;price&#34;:&#34;0.06398401339869234&#34;,&#34;listedAt&#34;:1391212800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.80&#34;,&#34;rank&#34;:10,&#34;sparkline&#34;:[&#34;0.06431595805843943&#34;,&#34;0.06435400841112346&#34;,&#34;0.0645379870268131&#34;,&#34;0.0650123288913721&#34;,&#34;0.06501563524570002&#34;,&#34;0.06505378638919912&#34;,&#34;0.0657960580235114&#34;,&#34;0.06603851629936867&#34;,&#34;0.0658184759881278&#34;,&#34;0.06555988714644552&#34;,&#34;0.06534311647764794&#34;,&#34;0.06512217936701878&#34;,&#34;0.06525813392333525&#34;,&#34;0.06507123735868817&#34;,&#34;0.06508747877233641&#34;,&#34;0.06537694106515178&#34;,&#34;0.06521416310707462&#34;,&#34;0.06486795280882116&#34;,&#34;0.06440018609785521&#34;,&#34;0.06431000551190193&#34;,&#34;0.06399099516985579&#34;,&#34;0.0639611688502269&#34;,&#34;0.06388198077385676&#34;,&#34;0.06396888900414123&#34;,&#34;0.06390412971383753&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge&#34;,&#34;24hVolume&#34;:&#34;479258397&#34;,&#34;btcPrice&#34;:&#34;0.000003192329452389&#34;},{&#34;uuid&#34;:&#34;uW2tk-ILY0ii&#34;,&#34;symbol&#34;:&#34;MATIC&#34;,&#34;name&#34;:&#34;Polygon&#34;,&#34;color&#34;:&#34;#8247e5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WulYRq14o/polygon.png&#34;,&#34;marketCap&#34;:&#34;7357221715&#34;,&#34;price&#34;:&#34;0.8402806991486048&#34;,&#34;listedAt&#34;:1558961160,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.27&#34;,&#34;rank&#34;:11,&#34;sparkline&#34;:[&#34;0.8434958048685458&#34;,&#34;0.850001213528094&#34;,&#34;0.853335038035505&#34;,&#34;0.8542282047138157&#34;,&#34;0.8515372370926926&#34;,&#34;0.8500057857531073&#34;,&#34;0.8471550687491181&#34;,&#34;0.8479199485431772&#34;,&#34;0.8469126231548905&#34;,&#34;0.8444467185672693&#34;,&#34;0.8452742352058495&#34;,&#34;0.8476150079540906&#34;,&#34;0.8463925672110996&#34;,&#34;0.8432430183950218&#34;,&#34;0.8407816804410218&#34;,&#34;0.8419007497492077&#34;,&#34;0.8398864867524278&#34;,&#34;0.8393073071328305&#34;,&#34;0.8429567390022452&#34;,&#34;0.8430941255831178&#34;,&#34;0.8444119779861358&#34;,&#34;0.8446502533596543&#34;,&#34;0.8422100742264239&#34;,&#34;0.8398203812650741&#34;,&#34;0.8392859340943655&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic&#34;,&#34;24hVolume&#34;:&#34;448903663&#34;,&#34;btcPrice&#34;:&#34;0.000041923797550038&#34;},{&#34;uuid&#34;:&#34;25W7FG7om&#34;,&#34;symbol&#34;:&#34;DOT&#34;,&#34;name&#34;:&#34;Polkadot&#34;,&#34;color&#34;:&#34;#d64cA8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/RsljYqnbu/polkadot.svg&#34;,&#34;marketCap&#34;:&#34;7333124913&#34;,&#34;price&#34;:&#34;6.374344819711631&#34;,&#34;listedAt&#34;:1598365200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.33&#34;,&#34;rank&#34;:12,&#34;sparkline&#34;:[&#34;6.399722350341929&#34;,&#34;6.407431469281856&#34;,&#34;6.427796901211662&#34;,&#34;6.453758384149317&#34;,&#34;6.486494555997307&#34;,&#34;6.502517900580541&#34;,&#34;6.4967988980633296&#34;,&#34;6.498221992937296&#34;,&#34;6.477292881924281&#34;,&#34;6.477685872716661&#34;,&#34;6.447216988451034&#34;,&#34;6.445307223733043&#34;,&#34;6.445036089260377&#34;,&#34;6.436040246095806&#34;,&#34;6.435080457086081&#34;,&#34;6.463836456516857&#34;,&#34;6.450387542070514&#34;,&#34;6.421359237807177&#34;,&#34;6.391124134834344&#34;,&#34;6.389976567958392&#34;,&#34;6.385572049998837&#34;,&#34;6.392125200223458&#34;,&#34;6.382091060151221&#34;,&#34;6.386981587242469&#34;,&#34;6.371255606973179&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/25W7FG7om+polkadot-dot&#34;,&#34;24hVolume&#34;:&#34;203228586&#34;,&#34;btcPrice&#34;:&#34;0.000318032702651025&#34;},{&#34;uuid&#34;:&#34;xz24e0BjL&#34;,&#34;symbol&#34;:&#34;SHIB&#34;,&#34;name&#34;:&#34;Shiba Inu&#34;,&#34;color&#34;:&#34;#fda32b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/D69LfI-tm/shib.png&#34;,&#34;marketCap&#34;:&#34;6650702423&#34;,&#34;price&#34;:&#34;0.000011280863460425&#34;,&#34;listedAt&#34;:1620650373,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.64&#34;,&#34;rank&#34;:13,&#34;sparkline&#34;:[&#34;0.000011387877948418&#34;,&#34;0.000011396704562993&#34;,&#34;0.000011430609861&#34;,&#34;0.000011487055432932&#34;,&#34;0.00001152036610693&#34;,&#34;0.000011526380751596&#34;,&#34;0.000011558700842959&#34;,&#34;0.000011588746012207&#34;,&#34;0.000011501542165893&#34;,&#34;0.000011474456994294&#34;,&#34;0.000011432798956209&#34;,&#34;0.000011440729374507&#34;,&#34;0.000011461144205322&#34;,&#34;0.000011476554808705&#34;,&#34;0.000011469743005642&#34;,&#34;0.00001147197624755&#34;,&#34;0.000011424815330699&#34;,&#34;0.000011366708333454&#34;,&#34;0.0000113570498162&#34;,&#34;0.000011330129168691&#34;,&#34;0.000011283648128574&#34;,&#34;0.000011278387257469&#34;,&#34;0.000011289529854914&#34;,&#34;0.000011276233126799&#34;,&#34;0.000011273560500492&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/xz24e0BjL+shibainu-shib&#34;,&#34;24hVolume&#34;:&#34;280794784&#34;,&#34;btcPrice&#34;:&#34;5.62831726e-10&#34;},{&#34;uuid&#34;:&#34;MoTuySvg7&#34;,&#34;symbol&#34;:&#34;DAI&#34;,&#34;name&#34;:&#34;Dai&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg&#34;,&#34;marketCap&#34;:&#34;6330165313&#34;,&#34;price&#34;:&#34;0.9999235811511265&#34;,&#34;listedAt&#34;:1585574040,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.11&#34;,&#34;rank&#34;:14,&#34;sparkline&#34;:[&#34;1.0002501483819342&#34;,&#34;0.9996079953426593&#34;,&#34;0.9998324870129061&#34;,&#34;0.9990101105933146&#34;,&#34;0.9994857500759958&#34;,&#34;0.999624908391188&#34;,&#34;0.9998816954065115&#34;,&#34;0.9994957093637207&#34;,&#34;1.0001208517367788&#34;,&#34;1.0005216349460553&#34;,&#34;1.0000957970716848&#34;,&#34;1.000296333339733&#34;,&#34;1.0000223644977213&#34;,&#34;1.0001689023102156&#34;,&#34;0.9997500246036027&#34;,&#34;0.999188166117977&#34;,&#34;1.0005244452746045&#34;,&#34;1.0009465956605519&#34;,&#34;0.999923212227354&#34;,&#34;0.999943746062425&#34;,&#34;0.9998895246210896&#34;,&#34;0.9996584146724661&#34;,&#34;1.00032070114622&#34;,&#34;1.0001058587674057&#34;,&#34;0.9999037241650416&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/MoTuySvg7+dai-dai&#34;,&#34;24hVolume&#34;:&#34;129125861&#34;,&#34;btcPrice&#34;:&#34;0.000049888797665071&#34;},{&#34;uuid&#34;:&#34;qUhEFk1I61atv&#34;,&#34;symbol&#34;:&#34;TRX&#34;,&#34;name&#34;:&#34;TRON&#34;,&#34;color&#34;:&#34;#eb0029&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/behejNqQs/trx.svg&#34;,&#34;marketCap&#34;:&#34;5775077437&#34;,&#34;price&#34;:&#34;0.06254395432208257&#34;,&#34;listedAt&#34;:1505260800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.35&#34;,&#34;rank&#34;:15,&#34;sparkline&#34;:[&#34;0.06236315630333049&#34;,&#34;0.06246392912773974&#34;,&#34;0.06240652113985693&#34;,&#34;0.06227589703736964&#34;,&#34;0.06221053328122907&#34;,&#34;0.06260319363131635&#34;,&#34;0.06283033390340566&#34;,&#34;0.06275581270672362&#34;,&#34;0.0626978662815527&#34;,&#34;0.06256692378726383&#34;,&#34;0.062454674750590175&#34;,&#34;0.06247130825939604&#34;,&#34;0.06256137344897823&#34;,&#34;0.06269756605100256&#34;,&#34;0.06269254530093321&#34;,&#34;0.06269809717602999&#34;,&#34;0.06270258509423554&#34;,&#34;0.06262935941097252&#34;,&#34;0.0625525372842027&#34;,&#34;0.0626080433578714&#34;,&#34;0.06263852382635865&#34;,&#34;0.06265458985596026&#34;,&#34;0.06258971581342093&#34;,&#34;0.06255323825419136&#34;,&#34;0.06256018276012307&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qUhEFk1I61atv+tron-trx&#34;,&#34;24hVolume&#34;:&#34;312325495&#34;,&#34;btcPrice&#34;:&#34;0.000003120481145925&#34;},{&#34;uuid&#34;:&#34;Mtfb0obXVh59u&#34;,&#34;symbol&#34;:&#34;WETH&#34;,&#34;name&#34;:&#34;Wrapped Ether&#34;,&#34;color&#34;:&#34;#303030&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/KIviQyZlt/weth.svg&#34;,&#34;marketCap&#34;:&#34;5506331908&#34;,&#34;price&#34;:&#34;1363.1831262096398&#34;,&#34;listedAt&#34;:1600259445,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.91&#34;,&#34;rank&#34;:16,&#34;sparkline&#34;:[&#34;1349.149143129576&#34;,&#34;1351.1432170463336&#34;,&#34;1354.6776632978115&#34;,&#34;1359.8352913708866&#34;,&#34;1372.7157537367023&#34;,&#34;1375.4201893881768&#34;,&#34;1373.656092011277&#34;,&#34;1374.4831471744365&#34;,&#34;1374.1769793087985&#34;,&#34;1370.915906218165&#34;,&#34;1366.8736380227815&#34;,&#34;1364.5777400837617&#34;,&#34;1361.7692633130323&#34;,&#34;1360.874730475116&#34;,&#34;1360.5880536977058&#34;,&#34;1367.7933188873656&#34;,&#34;1371.0864182649937&#34;,&#34;1366.2849418001506&#34;,&#34;1363.6612621508384&#34;,&#34;1366.3897957603679&#34;,&#34;1362.6017418911797&#34;,&#34;1363.558194381478&#34;,&#34;1361.1032201925939&#34;,&#34;1358.1013179936974&#34;,&#34;1359.5832745179157&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth&#34;,&#34;24hVolume&#34;:&#34;190296605&#34;,&#34;btcPrice&#34;:&#34;0.06801276462109211&#34;},{&#34;uuid&#34;:&#34;_H5FVG9iW&#34;,&#34;symbol&#34;:&#34;UNI&#34;,&#34;name&#34;:&#34;Uniswap&#34;,&#34;color&#34;:&#34;#ff007a&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;5412997860&#34;,&#34;price&#34;:&#34;6.970594962776281&#34;,&#34;listedAt&#34;:1600323371,&#34;tier&#34;:1,&#34;change&#34;:&#34;3.24&#34;,&#34;rank&#34;:17,&#34;sparkline&#34;:[&#34;6.773487842115684&#34;,&#34;6.754212108157756&#34;,&#34;6.7904912939092545&#34;,&#34;6.859091490236875&#34;,&#34;6.930938536697723&#34;,&#34;6.979888406385319&#34;,&#34;6.95205928455466&#34;,&#34;6.9286481982692205&#34;,&#34;6.908425318713336&#34;,&#34;6.880030568657563&#34;,&#34;6.8885892255227095&#34;,&#34;6.905746957106719&#34;,&#34;6.863039316865727&#34;,&#34;6.8298809342946445&#34;,&#34;6.841694456601706&#34;,&#34;6.90374298301861&#34;,&#34;6.8980780970926565&#34;,&#34;6.846666245892528&#34;,&#34;6.840143513460894&#34;,&#34;6.886346571294433&#34;,&#34;6.894919048207694&#34;,&#34;6.8980327967208135&#34;,&#34;6.897799219282073&#34;,&#34;6.917336871562214&#34;,&#34;6.9384106402636725&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/_H5FVG9iW+uniswap-uni&#34;,&#34;24hVolume&#34;:&#34;217649348&#34;,&#34;btcPrice&#34;:&#34;0.000347781178740445&#34;},{&#34;uuid&#34;:&#34;dvUj0CzDZ&#34;,&#34;symbol&#34;:&#34;AVAX&#34;,&#34;name&#34;:&#34;Avalanche&#34;,&#34;color&#34;:&#34;#e84242&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png&#34;,&#34;marketCap&#34;:&#34;5074795440&#34;,&#34;price&#34;:&#34;17.139061861537474&#34;,&#34;listedAt&#34;:1600961596,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.58&#34;,&#34;rank&#34;:18,&#34;sparkline&#34;:[&#34;17.253975766732072&#34;,&#34;17.305445105419164&#34;,&#34;17.35179898605964&#34;,&#34;17.43602090243061&#34;,&#34;17.5320617464102&#34;,&#34;17.556198635951862&#34;,&#34;17.522328032378404&#34;,&#34;17.567506807180212&#34;,&#34;17.518999622426595&#34;,&#34;17.438188969460462&#34;,&#34;17.396108974246218&#34;,&#34;17.373243917453404&#34;,&#34;17.336368659218273&#34;,&#34;17.319601875912156&#34;,&#34;17.320429202377582&#34;,&#34;17.375834229410586&#34;,&#34;17.37115155021162&#34;,&#34;17.337499378166246&#34;,&#34;17.29492516682681&#34;,&#34;17.27482970087828&#34;,&#34;17.236186499512122&#34;,&#34;17.23084707590994&#34;,&#34;17.187481717207028&#34;,&#34;17.155821443785648&#34;,&#34;17.14078782290297&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax&#34;,&#34;24hVolume&#34;:&#34;232336499&#34;,&#34;btcPrice&#34;:&#34;0.000855112536095036&#34;},{&#34;uuid&#34;:&#34;x4WXHge-vvFY&#34;,&#34;symbol&#34;:&#34;WBTC&#34;,&#34;name&#34;:&#34;Wrapped BTC&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg&#34;,&#34;marketCap&#34;:&#34;4906490614&#34;,&#34;price&#34;:&#34;20046.410227137&#34;,&#34;listedAt&#34;:1549894980,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.09&#34;,&#34;rank&#34;:19,&#34;sparkline&#34;:[&#34;20049.450436563653&#34;,&#34;20101.625670107587&#34;,&#34;20156.496626937733&#34;,&#34;20240.909995938804&#34;,&#34;20292.728315757773&#34;,&#34;20352.616852214596&#34;,&#34;20337.507383965705&#34;,&#34;20378.75288185548&#34;,&#34;20330.405569268383&#34;,&#34;20254.404761507907&#34;,&#34;20210.442606111905&#34;,&#34;20184.9491174058&#34;,&#34;20155.621076440202&#34;,&#34;20130.24398537466&#34;,&#34;20151.81371000324&#34;,&#34;20220.458796392188&#34;,&#34;20191.06461094672&#34;,&#34;20102.3711890372&#34;,&#34;20023.818445349818&#34;,&#34;20063.904548084807&#34;,&#34;20060.09333245677&#34;,&#34;20106.126030789226&#34;,&#34;20068.970588505534&#34;,&#34;20037.981397876472&#34;,&#34;20038.946703723883&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc&#34;,&#34;24hVolume&#34;:&#34;65699991&#34;,&#34;btcPrice&#34;:&#34;1.0001677353996585&#34;},{&#34;uuid&#34;:&#34;Knsels4_Ol-Ny&#34;,&#34;symbol&#34;:&#34;ATOM&#34;,&#34;name&#34;:&#34;Cosmos&#34;,&#34;color&#34;:&#34;#5064fb&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HJzHboruM/atom.svg&#34;,&#34;marketCap&#34;:&#34;4082107070&#34;,&#34;price&#34;:&#34;13.113113000226868&#34;,&#34;listedAt&#34;:1552520100,&#34;tier&#34;:1,&#34;change&#34;:&#34;2.06&#34;,&#34;rank&#34;:20,&#34;sparkline&#34;:[&#34;12.86904144147151&#34;,&#34;12.971292431991326&#34;,&#34;12.997809503523687&#34;,&#34;13.053288754075908&#34;,&#34;13.126935514160385&#34;,&#34;13.162946510226798&#34;,&#34;13.176459006280066&#34;,&#34;13.160096288039203&#34;,&#34;13.137389824650167&#34;,&#34;13.06998182322184&#34;,&#34;13.020726821088282&#34;,&#34;13.014732730953519&#34;,&#34;12.998975121153673&#34;,&#34;12.998577583467394&#34;,&#34;12.961451954944232&#34;,&#34;13.060564440903033&#34;,&#34;13.110658052250319&#34;,&#34;13.099438593619361&#34;,&#34;13.13330326447949&#34;,&#34;13.33452783192435&#34;,&#34;13.373831271270106&#34;,&#34;13.343650016008963&#34;,&#34;13.181674409038528&#34;,&#34;13.131683725387289&#34;,&#34;13.11536231838439&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom&#34;,&#34;24hVolume&#34;:&#34;310021593&#34;,&#34;btcPrice&#34;:&#34;0.00065424743806362&#34;},{&#34;uuid&#34;:&#34;PDKcptVnzJTmN&#34;,&#34;symbol&#34;:&#34;OKB&#34;,&#34;name&#34;:&#34;OKB&#34;,&#34;color&#34;:&#34;#2d60e0&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xcZdYtX6E/okx.png&#34;,&#34;marketCap&#34;:&#34;3938034123&#34;,&#34;price&#34;:&#34;15.650246402664713&#34;,&#34;listedAt&#34;:1538524800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.08&#34;,&#34;rank&#34;:21,&#34;sparkline&#34;:[&#34;15.564802534652488&#34;,&#34;15.557466143075752&#34;,&#34;15.524158368263686&#34;,&#34;15.564589461143923&#34;,&#34;15.626264641755956&#34;,&#34;15.739580440410696&#34;,&#34;15.723161103836562&#34;,&#34;15.756631052262051&#34;,&#34;15.719769516902309&#34;,&#34;15.679332809859426&#34;,&#34;15.65865704432778&#34;,&#34;15.65207565226499&#34;,&#34;15.638815307350377&#34;,&#34;15.638325526594082&#34;,&#34;15.630250194419004&#34;,&#34;15.770101867167902&#34;,&#34;15.772787444807776&#34;,&#34;15.726419071810144&#34;,&#34;15.730397527991796&#34;,&#34;15.706278363014619&#34;,&#34;15.644427965881071&#34;,&#34;15.661521309252834&#34;,&#34;15.65810007258811&#34;,&#34;15.657230878915703&#34;,&#34;15.653006930210385&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb&#34;,&#34;24hVolume&#34;:&#34;15757847&#34;,&#34;btcPrice&#34;:&#34;0.000780831646446624&#34;},{&#34;uuid&#34;:&#34;D7B1x_ks7WhV5&#34;,&#34;symbol&#34;:&#34;LTC&#34;,&#34;name&#34;:&#34;Litecoin&#34;,&#34;color&#34;:&#34;#345d9d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg&#34;,&#34;marketCap&#34;:&#34;3815864606&#34;,&#34;price&#34;:&#34;53.846722765780676&#34;,&#34;listedAt&#34;:1382572800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.92&#34;,&#34;rank&#34;:22,&#34;sparkline&#34;:[&#34;54.29583735175494&#34;,&#34;54.33319375556465&#34;,&#34;54.50446073551073&#34;,&#34;54.689512299086346&#34;,&#34;54.83579215246787&#34;,&#34;54.86128649682968&#34;,&#34;54.85557746061394&#34;,&#34;54.79815311448016&#34;,&#34;54.77378739059752&#34;,&#34;54.513674702652395&#34;,&#34;54.35029802146673&#34;,&#34;54.358307825475265&#34;,&#34;54.422181211169935&#34;,&#34;54.4489516734391&#34;,&#34;54.48573164038176&#34;,&#34;54.566006895097175&#34;,&#34;54.60169376918578&#34;,&#34;54.434757779526166&#34;,&#34;54.23335179752326&#34;,&#34;54.413459080815954&#34;,&#34;54.21240080510803&#34;,&#34;54.29942643192169&#34;,&#34;54.14247458562991&#34;,&#34;54.048141904913244&#34;,&#34;53.830450120278314&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc&#34;,&#34;24hVolume&#34;:&#34;386436989&#34;,&#34;btcPrice&#34;:&#34;0.002686553560319697&#34;},{&#34;uuid&#34;:&#34;NfeOYfNcl&#34;,&#34;symbol&#34;:&#34;FTT&#34;,&#34;name&#34;:&#34;FTX Token&#34;,&#34;color&#34;:&#34;#77d9ed&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg&#34;,&#34;marketCap&#34;:&#34;3291845373&#34;,&#34;price&#34;:&#34;24.66016972332323&#34;,&#34;listedAt&#34;:1566222960,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.12&#34;,&#34;rank&#34;:23,&#34;sparkline&#34;:[&#34;24.683542378165935&#34;,&#34;24.719459773866813&#34;,&#34;24.76219388151077&#34;,&#34;24.89617949229818&#34;,&#34;24.99584490014685&#34;,&#34;25.024271811661002&#34;,&#34;25.03560312685286&#34;,&#34;25.100681844582844&#34;,&#34;25.06002637860313&#34;,&#34;24.964601458157446&#34;,&#34;24.906805998876433&#34;,&#34;24.881179208531478&#34;,&#34;24.84671933295274&#34;,&#34;24.828862066050032&#34;,&#34;24.846952016930494&#34;,&#34;24.962693812346263&#34;,&#34;24.917387870404692&#34;,&#34;24.806139246634455&#34;,&#34;24.74429478499735&#34;,&#34;24.780282567891753&#34;,&#34;24.77215711531799&#34;,&#34;24.782999234672975&#34;,&#34;24.733584769696286&#34;,&#34;24.691015340268255&#34;,&#34;24.666234967252606&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt&#34;,&#34;24hVolume&#34;:&#34;40334123&#34;,&#34;btcPrice&#34;:&#34;0.001230360240426445&#34;},{&#34;uuid&#34;:&#34;hnfQfsYfeIGUQ&#34;,&#34;symbol&#34;:&#34;ETC&#34;,&#34;name&#34;:&#34;Ethereum Classic&#34;,&#34;color&#34;:&#34;#699070&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rJfyor__W/etc.svg&#34;,&#34;marketCap&#34;:&#34;3270026019&#34;,&#34;price&#34;:&#34;28.113947823836092&#34;,&#34;listedAt&#34;:1469577600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.95&#34;,&#34;rank&#34;:24,&#34;sparkline&#34;:[&#34;27.57375287086344&#34;,&#34;27.583701817024274&#34;,&#34;27.628337152556885&#34;,&#34;27.71293784101918&#34;,&#34;28.233029378330688&#34;,&#34;28.720730972372852&#34;,&#34;28.46641731982247&#34;,&#34;28.461748558520167&#34;,&#34;28.43371813306647&#34;,&#34;28.28911168246897&#34;,&#34;28.14473632072935&#34;,&#34;28.15563557551264&#34;,&#34;28.240843430286514&#34;,&#34;28.318006504862765&#34;,&#34;28.299833108837987&#34;,&#34;28.329928166122407&#34;,&#34;28.27078454554885&#34;,&#34;28.13957915693539&#34;,&#34;28.037422192263545&#34;,&#34;28.02538763544355&#34;,&#34;27.990684342238957&#34;,&#34;27.99587068353575&#34;,&#34;27.980180249457508&#34;,&#34;27.96831699810348&#34;,&#34;28.017446779311992&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc&#34;,&#34;24hVolume&#34;:&#34;583436183&#34;,&#34;btcPrice&#34;:&#34;0.001402678245606579&#34;},{&#34;uuid&#34;:&#34;3mVx2FX_iJFp5&#34;,&#34;symbol&#34;:&#34;XMR&#34;,&#34;name&#34;:&#34;Monero&#34;,&#34;color&#34;:&#34;#ff7519&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg&#34;,&#34;marketCap&#34;:&#34;2708742548&#34;,&#34;price&#34;:&#34;148.96689473750794&#34;,&#34;listedAt&#34;:1422489600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.98&#34;,&#34;rank&#34;:25,&#34;sparkline&#34;:[&#34;146.06343032587645&#34;,&#34;146.2075982055981&#34;,&#34;146.16344802044546&#34;,&#34;146.888041879794&#34;,&#34;147.51024728525&#34;,&#34;147.80256016994798&#34;,&#34;148.2027654532922&#34;,&#34;149.11840657324646&#34;,&#34;148.0031628172107&#34;,&#34;146.08426002755598&#34;,&#34;145.4683320265626&#34;,&#34;145.45336396325644&#34;,&#34;145.13011985927878&#34;,&#34;145.01926185302602&#34;,&#34;145.05380463743765&#34;,&#34;145.5189388138254&#34;,&#34;144.94121932498405&#34;,&#34;144.55169371872742&#34;,&#34;144.03637609256356&#34;,&#34;144.0602822952893&#34;,&#34;143.9422537624223&#34;,&#34;144.01800973377962&#34;,&#34;144.85743594518297&#34;,&#34;145.90656965474264&#34;,&#34;146.43871992411874&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr&#34;,&#34;24hVolume&#34;:&#34;115093840&#34;,&#34;btcPrice&#34;:&#34;0.007432347241774043&#34;},{&#34;uuid&#34;:&#34;TpHE2IShQw-sJ&#34;,&#34;symbol&#34;:&#34;ALGO&#34;,&#34;name&#34;:&#34;Algorand&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/lzbmCkUGB/algo.svg&#34;,&#34;marketCap&#34;:&#34;2467427793&#34;,&#34;price&#34;:&#34;0.35172981355990574&#34;,&#34;listedAt&#34;:1562082540,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.16&#34;,&#34;rank&#34;:26,&#34;sparkline&#34;:[&#34;0.3515600123998059&#34;,&#34;0.35203683586559326&#34;,&#34;0.3530001942757888&#34;,&#34;0.35412309079161114&#34;,&#34;0.35642368756646714&#34;,&#34;0.35691371592641125&#34;,&#34;0.35632693256778514&#34;,&#34;0.35761063132157045&#34;,&#34;0.35770076129143336&#34;,&#34;0.35735739919120424&#34;,&#34;0.35578661849459614&#34;,&#34;0.35494000660403097&#34;,&#34;0.3544949322189096&#34;,&#34;0.35419673898063&#34;,&#34;0.3545814398327581&#34;,&#34;0.3560563698021784&#34;,&#34;0.35476940248868055&#34;,&#34;0.35303138884975377&#34;,&#34;0.3526138360299577&#34;,&#34;0.353297325772352&#34;,&#34;0.3530050986834627&#34;,&#34;0.3519348960977679&#34;,&#34;0.3512839084444219&#34;,&#34;0.35035540536790366&#34;,&#34;0.35085105792254034&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo&#34;,&#34;24hVolume&#34;:&#34;115391491&#34;,&#34;btcPrice&#34;:&#34;0.000017548718554334&#34;},{&#34;uuid&#34;:&#34;f3iaFeCKEmkaZ&#34;,&#34;symbol&#34;:&#34;XLM&#34;,&#34;name&#34;:&#34;Stellar&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg&#34;,&#34;marketCap&#34;:&#34;2437361911&#34;,&#34;price&#34;:&#34;0.12062849560760455&#34;,&#34;listedAt&#34;:1484611200,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.34&#34;,&#34;rank&#34;:27,&#34;sparkline&#34;:[&#34;0.11887874398521932&#34;,&#34;0.11899682832112154&#34;,&#34;0.11900784650582279&#34;,&#34;0.11903091787613028&#34;,&#34;0.11932756061340988&#34;,&#34;0.1193124601461036&#34;,&#34;0.11935198330687927&#34;,&#34;0.11968956008888623&#34;,&#34;0.11982768782602261&#34;,&#34;0.11926800493330945&#34;,&#34;0.11894584887939669&#34;,&#34;0.11912211829876701&#34;,&#34;0.11882743355055038&#34;,&#34;0.11868474386838856&#34;,&#34;0.11878227754760867&#34;,&#34;0.11974550069912294&#34;,&#34;0.11958643330478903&#34;,&#34;0.11927337184798883&#34;,&#34;0.11957351041625688&#34;,&#34;0.11944049884817015&#34;,&#34;0.12009378998253879&#34;,&#34;0.12024109052539109&#34;,&#34;0.12017728479638659&#34;,&#34;0.12012660542021919&#34;,&#34;0.12022267745313032&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm&#34;,&#34;24hVolume&#34;:&#34;183603999&#34;,&#34;btcPrice&#34;:&#34;0.0000060184705346&#34;},{&#34;uuid&#34;:&#34;ZlZpzOJo43mIo&#34;,&#34;symbol&#34;:&#34;BCH&#34;,&#34;name&#34;:&#34;Bitcoin Cash&#34;,&#34;color&#34;:&#34;#8dc451&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/By8ziihX7/bch.svg&#34;,&#34;marketCap&#34;:&#34;2276265173&#34;,&#34;price&#34;:&#34;118.98058610983257&#34;,&#34;listedAt&#34;:1541808000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.66&#34;,&#34;rank&#34;:28,&#34;sparkline&#34;:[&#34;122.32262573171138&#34;,&#34;122.21216671462395&#34;,&#34;122.2424076189862&#34;,&#34;122.65231412716444&#34;,&#34;123.18814722852751&#34;,&#34;123.0389419465099&#34;,&#34;122.7525437321455&#34;,&#34;122.63297695763477&#34;,&#34;122.25888231512374&#34;,&#34;121.6083740301883&#34;,&#34;121.0704992507114&#34;,&#34;121.08119723327034&#34;,&#34;121.3486844528348&#34;,&#34;121.35241663771652&#34;,&#34;121.4308975310673&#34;,&#34;121.83807088869149&#34;,&#34;121.79108869683151&#34;,&#34;121.38727041457742&#34;,&#34;120.77014246462569&#34;,&#34;120.9730955171752&#34;,&#34;120.81712651964756&#34;,&#34;120.67586343768751&#34;,&#34;120.35934093743896&#34;,&#34;119.33573062080143&#34;,&#34;118.92020484427697&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch&#34;,&#34;24hVolume&#34;:&#34;207705732&#34;,&#34;btcPrice&#34;:&#34;0.005936252028051548&#34;},{&#34;uuid&#34;:&#34;9_jH48RBW&#34;,&#34;symbol&#34;:&#34;BTCB&#34;,&#34;name&#34;:&#34;Bitcoin BEP2&#34;,&#34;color&#34;:&#34;#ff9d14&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Swr_SeZio/4023.png&#34;,&#34;marketCap&#34;:&#34;2254967512&#34;,&#34;price&#34;:&#34;20043.97749206499&#34;,&#34;listedAt&#34;:1629334963,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.40&#34;,&#34;rank&#34;:29,&#34;sparkline&#34;:[&#34;20057.082143515574&#34;,&#34;20073.73634471567&#34;,&#34;20155.35074272695&#34;,&#34;20201.665838224184&#34;,&#34;20307.87652463223&#34;,&#34;20347.737496425136&#34;,&#34;20336.451830858347&#34;,&#34;20370.359230166003&#34;,&#34;20347.242691661544&#34;,&#34;20289.47946418053&#34;,&#34;20236.389261394786&#34;,&#34;20216.767454565917&#34;,&#34;20157.58477689183&#34;,&#34;20148.427911440165&#34;,&#34;20139.404745478332&#34;,&#34;20195.51476083255&#34;,&#34;20218.207717425983&#34;,&#34;20128.86850120113&#34;,&#34;20006.9744546404&#34;,&#34;20060.410623139804&#34;,&#34;20033.996371801375&#34;,&#34;20098.47310976815&#34;,&#34;20097.464012404307&#34;,&#34;20046.809041658624&#34;,&#34;20049.799901903058&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb&#34;,&#34;24hVolume&#34;:&#34;24085498&#34;,&#34;btcPrice&#34;:&#34;1.0000463598965021&#34;},{&#34;uuid&#34;:&#34;65PHZTpmE55b&#34;,&#34;symbol&#34;:&#34;CRO&#34;,&#34;name&#34;:&#34;Cronos&#34;,&#34;color&#34;:&#34;#01275d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/2o91jm73M/cro.svg&#34;,&#34;marketCap&#34;:&#34;2207091566&#34;,&#34;price&#34;:&#34;0.10974041351835884&#34;,&#34;listedAt&#34;:1548953220,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.15&#34;,&#34;rank&#34;:30,&#34;sparkline&#34;:[&#34;0.10962651467178453&#34;,&#34;0.10994008962491644&#34;,&#34;0.1102558436062367&#34;,&#34;0.11066651769044844&#34;,&#34;0.11099761359490694&#34;,&#34;0.11112033875517015&#34;,&#34;0.11109668798682694&#34;,&#34;0.11125486280094371&#34;,&#34;0.11097328447826356&#34;,&#34;0.11061839872555923&#34;,&#34;0.11051157703154837&#34;,&#34;0.11040516533585498&#34;,&#34;0.11018324144957391&#34;,&#34;0.11015957429341776&#34;,&#34;0.11025941309951554&#34;,&#34;0.1107306596648452&#34;,&#34;0.11056541424952443&#34;,&#34;0.11033981054182589&#34;,&#34;0.11014982408569168&#34;,&#34;0.11018846762437533&#34;,&#34;0.11026378704001755&#34;,&#34;0.11036637137706824&#34;,&#34;0.11006396812568181&#34;,&#34;0.10976547166697294&#34;,&#34;0.10969235793422591&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/65PHZTpmE55b+cronos-cro&#34;,&#34;24hVolume&#34;:&#34;32894151&#34;,&#34;btcPrice&#34;:&#34;0.000005475235696908&#34;},{&#34;uuid&#34;:&#34;DCrsaMv68&#34;,&#34;symbol&#34;:&#34;NEAR&#34;,&#34;name&#34;:&#34;NEAR Protocol&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Cth83dCnl/near.png&#34;,&#34;marketCap&#34;:&#34;2206952701&#34;,&#34;price&#34;:&#34;3.630786016166329&#34;,&#34;listedAt&#34;:1615164591,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.37&#34;,&#34;rank&#34;:31,&#34;sparkline&#34;:[&#34;3.6764432411708334&#34;,&#34;3.6877377535157785&#34;,&#34;3.695275020835127&#34;,&#34;3.703712737949751&#34;,&#34;3.7340726187087037&#34;,&#34;3.7301224517518223&#34;,&#34;3.726830183476546&#34;,&#34;3.732039649903934&#34;,&#34;3.717434927228703&#34;,&#34;3.6877396306355372&#34;,&#34;3.672153124641749&#34;,&#34;3.6712014753545934&#34;,&#34;3.682858101631704&#34;,&#34;3.6816966205355786&#34;,&#34;3.6732422481738896&#34;,&#34;3.68742500998647&#34;,&#34;3.67949841043138&#34;,&#34;3.658086252545483&#34;,&#34;3.6466882303359083&#34;,&#34;3.653534815527586&#34;,&#34;3.6524651001872352&#34;,&#34;3.6566637162352977&#34;,&#34;3.6505578611908183&#34;,&#34;3.641624197517031&#34;,&#34;3.6360026668443743&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DCrsaMv68+nearprotocol-near&#34;,&#34;24hVolume&#34;:&#34;214660455&#34;,&#34;btcPrice&#34;:&#34;0.000181149392153712&#34;},{&#34;uuid&#34;:&#34;AaQUAs2Mc&#34;,&#34;symbol&#34;:&#34;LUNC&#34;,&#34;name&#34;:&#34;Terra Classic&#34;,&#34;color&#34;:&#34;#0E3CA5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg&#34;,&#34;marketCap&#34;:&#34;1912308135&#34;,&#34;price&#34;:&#34;0.000290147954073881&#34;,&#34;listedAt&#34;:1565957940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.81&#34;,&#34;rank&#34;:32,&#34;sparkline&#34;:[&#34;0.000297534732475355&#34;,&#34;0.00029924350285628&#34;,&#34;0.000301788299795161&#34;,&#34;0.000299920153570012&#34;,&#34;0.000298931795978761&#34;,&#34;0.00030181081782183&#34;,&#34;0.000303176990591589&#34;,&#34;0.000301682155659599&#34;,&#34;0.000300427127360826&#34;,&#34;0.000299399340560452&#34;,&#34;0.000295889751885886&#34;,&#34;0.000294483950425306&#34;,&#34;0.000296163406502654&#34;,&#34;0.000295896753590268&#34;,&#34;0.000296293813138895&#34;,&#34;0.00029712340206075&#34;,&#34;0.000296241802461865&#34;,&#34;0.000294833413425782&#34;,&#34;0.000295805632133273&#34;,&#34;0.000295448279840089&#34;,&#34;0.000294342506473691&#34;,&#34;0.000292052607134611&#34;,&#34;0.000290629002509443&#34;,&#34;0.000292037309457244&#34;,&#34;0.000292007407136324&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc&#34;,&#34;24hVolume&#34;:&#34;87308849&#34;,&#34;btcPrice&#34;:&#34;1.4476238831e-8&#34;},{&#34;uuid&#34;:&#34;08CsQa-Ov&#34;,&#34;symbol&#34;:&#34;WEMIX&#34;,&#34;name&#34;:&#34;WEMIX TOKEN&#34;,&#34;color&#34;:&#34;#9bdc70&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1N84MQsoO/7548.png&#34;,&#34;marketCap&#34;:&#34;1809009261&#34;,&#34;price&#34;:&#34;1.8090092609827892&#34;,&#34;listedAt&#34;:1638249982,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.08&#34;,&#34;rank&#34;:33,&#34;sparkline&#34;:[&#34;1.8200632272957997&#34;,&#34;1.8247805232483643&#34;,&#34;1.828712312707551&#34;,&#34;1.833483750666553&#34;,&#34;1.8388113856711226&#34;,&#34;1.8340065059765118&#34;,&#34;1.833810679916731&#34;,&#34;1.8379730157830576&#34;,&#34;1.839871909045534&#34;,&#34;1.8316951407594886&#34;,&#34;1.8218905615149048&#34;,&#34;1.8133420432182386&#34;,&#34;1.8119386729956268&#34;,&#34;1.8082288357010967&#34;,&#34;1.8068009632735749&#34;,&#34;1.8188388540688198&#34;,&#34;1.8203819894312625&#34;,&#34;1.814524337055796&#34;,&#34;1.808721193963964&#34;,&#34;1.8196357521223283&#34;,&#34;1.815149328780377&#34;,&#34;1.8112776438372116&#34;,&#34;1.8108458436676627&#34;,&#34;1.8027262559586126&#34;,&#34;1.805119314397385&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix&#34;,&#34;24hVolume&#34;:&#34;12137167&#34;,&#34;btcPrice&#34;:&#34;0.000090256194269879&#34;},{&#34;uuid&#34;:&#34;QQ0NCmjVq&#34;,&#34;symbol&#34;:&#34;FLOW&#34;,&#34;name&#34;:&#34;Flow&#34;,&#34;color&#34;:&#34;#9efad7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xh8X8QBss/flow.png&#34;,&#34;marketCap&#34;:&#34;1767866343&#34;,&#34;price&#34;:&#34;1.7061053298863806&#34;,&#34;listedAt&#34;:1614963736,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.32&#34;,&#34;rank&#34;:34,&#34;sparkline&#34;:[&#34;1.6885003563699261&#34;,&#34;1.6911129238364746&#34;,&#34;1.6949035542249486&#34;,&#34;1.7027954737084738&#34;,&#34;1.7125610716564361&#34;,&#34;1.7140651860196017&#34;,&#34;1.714695946307908&#34;,&#34;1.7186349196969963&#34;,&#34;1.7112095222795702&#34;,&#34;1.7059432521776707&#34;,&#34;1.6993434662570355&#34;,&#34;1.7005773278388585&#34;,&#34;1.6968447607894448&#34;,&#34;1.6929234664355564&#34;,&#34;1.692450465901943&#34;,&#34;1.7010313056523052&#34;,&#34;1.6985550988885165&#34;,&#34;1.6893705490937398&#34;,&#34;1.6866645696902811&#34;,&#34;1.7019443099317626&#34;,&#34;1.7014230772153076&#34;,&#34;1.7069133070811424&#34;,&#34;1.7033611748224882&#34;,&#34;1.6994360137640887&#34;,&#34;1.704400633762173&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/QQ0NCmjVq+flow-flow&#34;,&#34;24hVolume&#34;:&#34;71187916&#34;,&#34;btcPrice&#34;:&#34;0.000085122048526962&#34;},{&#34;uuid&#34;:&#34;SbWqqTui-&#34;,&#34;symbol&#34;:&#34;ENS&#34;,&#34;name&#34;:&#34;EnergySwap&#34;,&#34;color&#34;:&#34;#ffda55&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png&#34;,&#34;marketCap&#34;:&#34;1725996262&#34;,&#34;price&#34;:&#34;17.259962623670035&#34;,&#34;listedAt&#34;:1626134763,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.03&#34;,&#34;rank&#34;:35,&#34;sparkline&#34;:[&#34;17.0775388533003&#34;,&#34;17.067912741278125&#34;,&#34;17.19371992172132&#34;,&#34;17.4049080612785&#34;,&#34;17.349122197170388&#34;,&#34;17.383691525495145&#34;,&#34;17.38955154672953&#34;,&#34;17.62408133673586&#34;,&#34;17.593322076060364&#34;,&#34;17.4386892965598&#34;,&#34;17.328889316544824&#34;,&#34;17.447514865666506&#34;,&#34;17.32297480082281&#34;,&#34;17.37509972478323&#34;,&#34;17.34525419003646&#34;,&#34;17.409372532584655&#34;,&#34;17.389133405821546&#34;,&#34;17.35036829752898&#34;,&#34;17.427069919455597&#34;,&#34;17.552044170794996&#34;,&#34;17.412493725255267&#34;,&#34;17.349458429441366&#34;,&#34;17.146992959728287&#34;,&#34;17.252120262541386&#34;,&#34;17.264212303383914&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/SbWqqTui-+energyswap-ens&#34;,&#34;24hVolume&#34;:&#34;19832838&#34;,&#34;btcPrice&#34;:&#34;0.000860915853391649&#34;},{&#34;uuid&#34;:&#34;ymQub4fuB&#34;,&#34;symbol&#34;:&#34;FIL&#34;,&#34;name&#34;:&#34;Filecoin&#34;,&#34;color&#34;:&#34;#0090ff&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;1632172859&#34;,&#34;price&#34;:&#34;5.553360617882926&#34;,&#34;listedAt&#34;:1602839473,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.39&#34;,&#34;rank&#34;:36,&#34;sparkline&#34;:[&#34;5.563583111239947&#34;,&#34;5.566550453652093&#34;,&#34;5.574658649368248&#34;,&#34;5.59947207926758&#34;,&#34;5.623738949982796&#34;,&#34;5.620874463842186&#34;,&#34;5.636449717522663&#34;,&#34;5.636012075827377&#34;,&#34;5.621787024814909&#34;,&#34;5.604863066684564&#34;,&#34;5.59106302185655&#34;,&#34;5.592521259925081&#34;,&#34;5.578504466675582&#34;,&#34;5.569698214994045&#34;,&#34;5.57106966286358&#34;,&#34;5.5871830930712845&#34;,&#34;5.58594625512426&#34;,&#34;5.567567471367906&#34;,&#34;5.557070809165411&#34;,&#34;5.564056973722409&#34;,&#34;5.560812558868851&#34;,&#34;5.555371588027569&#34;,&#34;5.5431943077677825&#34;,&#34;5.540294464973471&#34;,&#34;5.542380071855275&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ymQub4fuB+filecoin-fil&#34;,&#34;24hVolume&#34;:&#34;155725594&#34;,&#34;btcPrice&#34;:&#34;0.000277071657723871&#34;},{&#34;uuid&#34;:&#34;aMNLwaUbY&#34;,&#34;symbol&#34;:&#34;ICP&#34;,&#34;name&#34;:&#34;Internet Computer (DFINITY)&#34;,&#34;color&#34;:&#34;#00042b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png&#34;,&#34;marketCap&#34;:&#34;1579991723&#34;,&#34;price&#34;:&#34;6.0165579380799885&#34;,&#34;listedAt&#34;:1601555742,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.11&#34;,&#34;rank&#34;:37,&#34;sparkline&#34;:[&#34;6.016755740637141&#34;,&#34;6.025549949045874&#34;,&#34;6.025640938683228&#34;,&#34;6.0377448148370085&#34;,&#34;6.064372958080765&#34;,&#34;6.083168222934446&#34;,&#34;6.121138125111502&#34;,&#34;6.122110772502033&#34;,&#34;6.115151992864029&#34;,&#34;6.094617924935418&#34;,&#34;6.060091344132251&#34;,&#34;6.055252608620663&#34;,&#34;6.044824998176658&#34;,&#34;6.039684832886364&#34;,&#34;6.031722431559297&#34;,&#34;6.051848135596568&#34;,&#34;6.052505386943968&#34;,&#34;6.039004021283348&#34;,&#34;6.03094716124407&#34;,&#34;6.0282463753416&#34;,&#34;6.032921444329065&#34;,&#34;6.04632010848593&#34;,&#34;6.041115706175561&#34;,&#34;6.045998924171826&#34;,&#34;6.0229305076806545&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp&#34;,&#34;24hVolume&#34;:&#34;35516114&#34;,&#34;btcPrice&#34;:&#34;0.000300181781159216&#34;},{&#34;uuid&#34;:&#34;FEbS54wxo4oIl&#34;,&#34;symbol&#34;:&#34;VET&#34;,&#34;name&#34;:&#34;VeChain&#34;,&#34;color&#34;:&#34;#4bc0fa&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg&#34;,&#34;marketCap&#34;:&#34;1572684480&#34;,&#34;price&#34;:&#34;0.023557025426635677&#34;,&#34;listedAt&#34;:1533427200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.72&#34;,&#34;rank&#34;:38,&#34;sparkline&#34;:[&#34;0.02375170887710745&#34;,&#34;0.023790767210407363&#34;,&#34;0.02385906108038382&#34;,&#34;0.023963654949121647&#34;,&#34;0.024032391322482857&#34;,&#34;0.02406040482720113&#34;,&#34;0.0240241062637749&#34;,&#34;0.024037336226182978&#34;,&#34;0.02400171948264513&#34;,&#34;0.02387998962803967&#34;,&#34;0.02378930361410667&#34;,&#34;0.02383913575157462&#34;,&#34;0.02381560283772684&#34;,&#34;0.02375080527252874&#34;,&#34;0.023755408145521056&#34;,&#34;0.02387716977416547&#34;,&#34;0.02387351543491939&#34;,&#34;0.023763817483126306&#34;,&#34;0.023691552163897643&#34;,&#34;0.023726104965078293&#34;,&#34;0.02368589760998112&#34;,&#34;0.023671062742535463&#34;,&#34;0.023601726034422614&#34;,&#34;0.0235570377718252&#34;,&#34;0.0235469112210421&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet&#34;,&#34;24hVolume&#34;:&#34;88620897&#34;,&#34;btcPrice&#34;:&#34;0.000001175321491816&#34;},{&#34;uuid&#34;:&#34;ncYFcP709&#34;,&#34;symbol&#34;:&#34;CAKE&#34;,&#34;name&#34;:&#34;PancakeSwap&#34;,&#34;color&#34;:&#34;#fe9555&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png&#34;,&#34;marketCap&#34;:&#34;1553748228&#34;,&#34;price&#34;:&#34;4.671730797095194&#34;,&#34;listedAt&#34;:1613642379,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.22&#34;,&#34;rank&#34;:39,&#34;sparkline&#34;:[&#34;4.661125064396867&#34;,&#34;4.663869351538766&#34;,&#34;4.66954849891612&#34;,&#34;4.700257578283811&#34;,&#34;4.730018157572612&#34;,&#34;4.714143976512721&#34;,&#34;4.723478551910749&#34;,&#34;4.726841497246268&#34;,&#34;4.71589081766422&#34;,&#34;4.704019970362516&#34;,&#34;4.6988239161796725&#34;,&#34;4.701002359282831&#34;,&#34;4.691700450917038&#34;,&#34;4.677135351952703&#34;,&#34;4.694429858732558&#34;,&#34;4.721898404666295&#34;,&#34;4.72192706714792&#34;,&#34;4.711492514608389&#34;,&#34;4.722961417487937&#34;,&#34;4.727350513894986&#34;,&#34;4.726777756847048&#34;,&#34;4.730691546772397&#34;,&#34;4.723894121828546&#34;,&#34;4.720900237522959&#34;,&#34;4.694323412913096&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ncYFcP709+pancakeswap-cake&#34;,&#34;24hVolume&#34;:&#34;62601195&#34;,&#34;btcPrice&#34;:&#34;0.000233084844557472&#34;},{&#34;uuid&#34;:&#34;tEf7-dnwV3BXS&#34;,&#34;symbol&#34;:&#34;MANA&#34;,&#34;name&#34;:&#34;Decentraland&#34;,&#34;color&#34;:&#34;#f47e33&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg&#34;,&#34;marketCap&#34;:&#34;1535345175&#34;,&#34;price&#34;:&#34;0.6999520749208403&#34;,&#34;listedAt&#34;:1500336000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.37&#34;,&#34;rank&#34;:40,&#34;sparkline&#34;:[&#34;0.7018437336148443&#34;,&#34;0.7012296643669335&#34;,&#34;0.7022993535952263&#34;,&#34;0.7043824624342494&#34;,&#34;0.7061012732016445&#34;,&#34;0.7092722059821073&#34;,&#34;0.7107294942869858&#34;,&#34;0.7108990080244315&#34;,&#34;0.7099791984418414&#34;,&#34;0.7078420220186218&#34;,&#34;0.7051095437828625&#34;,&#34;0.707248929548027&#34;,&#34;0.7050915198697436&#34;,&#34;0.7044747588216688&#34;,&#34;0.7041160697442599&#34;,&#34;0.7066206655413716&#34;,&#34;0.7058549946852882&#34;,&#34;0.7032486369948753&#34;,&#34;0.7012876549332069&#34;,&#34;0.7009747852786251&#34;,&#34;0.700473849406315&#34;,&#34;0.7005982029037023&#34;,&#34;0.7002369574369308&#34;,&#34;0.7006334207984222&#34;,&#34;0.7000127772948245&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana&#34;,&#34;24hVolume&#34;:&#34;113068798&#34;,&#34;btcPrice&#34;:&#34;0.000034922436173344&#34;},{&#34;uuid&#34;:&#34;Z96jIvLU7&#34;,&#34;symbol&#34;:&#34;IMX&#34;,&#34;name&#34;:&#34;Immutable X&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/naRGT2Y_X/10603.png&#34;,&#34;marketCap&#34;:&#34;1529157571&#34;,&#34;price&#34;:&#34;0.7645787855498196&#34;,&#34;listedAt&#34;:1649387294,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.80&#34;,&#34;rank&#34;:41,&#34;sparkline&#34;:[&#34;0.7862352418397442&#34;,&#34;0.7857962385011888&#34;,&#34;0.7860823591712383&#34;,&#34;0.7913864227222935&#34;,&#34;0.7931731378366671&#34;,&#34;0.7918535836709918&#34;,&#34;0.7934385490032205&#34;,&#34;0.7935992087657073&#34;,&#34;0.7897855169136626&#34;,&#34;0.7868869873929384&#34;,&#34;0.7827511307418661&#34;,&#34;0.7829200782135203&#34;,&#34;0.7815399732777862&#34;,&#34;0.7772118263855671&#34;,&#34;0.7746419330272937&#34;,&#34;0.7799681155884691&#34;,&#34;0.777981466209664&#34;,&#34;0.7739045575146072&#34;,&#34;0.7718550460057184&#34;,&#34;0.7715939215456447&#34;,&#34;0.7695383673672498&#34;,&#34;0.7673191324882311&#34;,&#34;0.7657534786224457&#34;,&#34;0.764881660541454&#34;,&#34;0.7646092366582135&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Z96jIvLU7+immutablex-imx&#34;,&#34;24hVolume&#34;:&#34;145242009&#34;,&#34;btcPrice&#34;:&#34;0.000038146831468249&#34;},{&#34;uuid&#34;:&#34;jad286TjB&#34;,&#34;symbol&#34;:&#34;HBAR&#34;,&#34;name&#34;:&#34;Hedera&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/dSCnSLilQ/hedera.svg&#34;,&#34;marketCap&#34;:&#34;1413337607&#34;,&#34;price&#34;:&#34;0.058052265495351495&#34;,&#34;listedAt&#34;:1568704980,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.61&#34;,&#34;rank&#34;:42,&#34;sparkline&#34;:[&#34;0.05770820809062958&#34;,&#34;0.05773161591193554&#34;,&#34;0.057901448026430706&#34;,&#34;0.058104711439575775&#34;,&#34;0.05821494457445837&#34;,&#34;0.05837605385144989&#34;,&#34;0.0583912493104286&#34;,&#34;0.058424171286181624&#34;,&#34;0.05828953359467471&#34;,&#34;0.058191254382563104&#34;,&#34;0.058069476804724386&#34;,&#34;0.05816012171446981&#34;,&#34;0.05809696154952601&#34;,&#34;0.05804430834562561&#34;,&#34;0.058079013279903904&#34;,&#34;0.058270287529447726&#34;,&#34;0.05828744692577993&#34;,&#34;0.05819030965298005&#34;,&#34;0.05799510351002881&#34;,&#34;0.05801850162696806&#34;,&#34;0.05804288093820356&#34;,&#34;0.05809254408384736&#34;,&#34;0.05803413483043568&#34;,&#34;0.057982852173679544&#34;,&#34;0.05799862984287226&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/jad286TjB+hedera-hbar&#34;,&#34;24hVolume&#34;:&#34;38825707&#34;,&#34;btcPrice&#34;:&#34;0.000002896379065251&#34;},{&#34;uuid&#34;:&#34;KfWtaeV1W&#34;,&#34;symbol&#34;:&#34;FRAX&#34;,&#34;name&#34;:&#34;Frax&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BpVNCX-NM/frax.png&#34;,&#34;marketCap&#34;:&#34;1359878097&#34;,&#34;price&#34;:&#34;1.001334577613883&#34;,&#34;listedAt&#34;:1615299931,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.07&#34;,&#34;rank&#34;:43,&#34;sparkline&#34;:[&#34;0.99995237657306&#34;,&#34;0.9992610930077082&#34;,&#34;0.9995048898577841&#34;,&#34;0.9984857957300194&#34;,&#34;0.9991338275862605&#34;,&#34;0.9991463646832447&#34;,&#34;0.9995515068035792&#34;,&#34;0.9992688671456238&#34;,&#34;0.9999129851645419&#34;,&#34;1.0002242997546233&#34;,&#34;0.999712820332821&#34;,&#34;1.0000332602428952&#34;,&#34;0.9995079927133396&#34;,&#34;0.999782374902935&#34;,&#34;0.999308877507305&#34;,&#34;0.9988846870195152&#34;,&#34;1.0005152287641716&#34;,&#34;1.0008340522704022&#34;,&#34;0.9994436410988572&#34;,&#34;0.9996849217788387&#34;,&#34;0.9995211220531371&#34;,&#34;0.999211197536607&#34;,&#34;0.9999983085146361&#34;,&#34;0.999769500498533&#34;,&#34;1.0011860473290413&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/KfWtaeV1W+frax-frax&#34;,&#34;24hVolume&#34;:&#34;6768277&#34;,&#34;btcPrice&#34;:&#34;0.000049959195961864&#34;},{&#34;uuid&#34;:&#34;bauj_21eYVwso&#34;,&#34;symbol&#34;:&#34;QNT&#34;,&#34;name&#34;:&#34;Quant&#34;,&#34;color&#34;:&#34;#585e63&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/a-i9Dl392/quant.png&#34;,&#34;marketCap&#34;:&#34;1353847155&#34;,&#34;price&#34;:&#34;138.46931334806206&#34;,&#34;listedAt&#34;:1533945600,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.70&#34;,&#34;rank&#34;:44,&#34;sparkline&#34;:[&#34;136.82868883894076&#34;,&#34;137.71306856606782&#34;,&#34;138.03647928074753&#34;,&#34;138.80197795554938&#34;,&#34;139.12071269372848&#34;,&#34;139.05878455835125&#34;,&#34;139.14677841096062&#34;,&#34;138.87253490735398&#34;,&#34;138.02179236057498&#34;,&#34;137.42442294208283&#34;,&#34;137.6271009908909&#34;,&#34;139.44419273993879&#34;,&#34;138.9594762558207&#34;,&#34;139.35956951767986&#34;,&#34;139.76224675334996&#34;,&#34;140.73346306408735&#34;,&#34;139.70014562219615&#34;,&#34;139.58102151134608&#34;,&#34;139.19177605867037&#34;,&#34;139.65458123164169&#34;,&#34;139.17824474960636&#34;,&#34;139.1901615972891&#34;,&#34;138.83319330338816&#34;,&#34;138.1218448902609&#34;,&#34;138.15277303739376&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/bauj_21eYVwso+quant-qnt&#34;,&#34;24hVolume&#34;:&#34;71501255&#34;,&#34;btcPrice&#34;:&#34;0.006908595503358421&#34;},{&#34;uuid&#34;:&#34;omwkOTglq&#34;,&#34;symbol&#34;:&#34;EGLD&#34;,&#34;name&#34;:&#34;Elrond&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg&#34;,&#34;marketCap&#34;:&#34;1316030339&#34;,&#34;price&#34;:&#34;55.7002018134128&#34;,&#34;listedAt&#34;:1612524044,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.89&#34;,&#34;rank&#34;:45,&#34;sparkline&#34;:[&#34;54.49977253219301&#34;,&#34;54.11874620026287&#34;,&#34;54.2183062824539&#34;,&#34;54.68045352030543&#34;,&#34;55.29261101979573&#34;,&#34;55.12466500529631&#34;,&#34;55.4096265101037&#34;,&#34;55.17360006105945&#34;,&#34;55.03825697066999&#34;,&#34;54.83782041498208&#34;,&#34;54.61174346698164&#34;,&#34;54.72261326487687&#34;,&#34;55.07467359664748&#34;,&#34;55.12258904806393&#34;,&#34;55.12232719822051&#34;,&#34;55.10748540691841&#34;,&#34;55.01733359597467&#34;,&#34;54.876885804473424&#34;,&#34;54.85576050348866&#34;,&#34;55.096674446643746&#34;,&#34;55.35611005385607&#34;,&#34;54.96784781952569&#34;,&#34;54.84449264613283&#34;,&#34;54.95034295425699&#34;,&#34;55.112649002423744&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/omwkOTglq+elrond-egld&#34;,&#34;24hVolume&#34;:&#34;72484623&#34;,&#34;btcPrice&#34;:&#34;0.002779028468329484&#34;},{&#34;uuid&#34;:&#34;fsIbGOEJWbzxG&#34;,&#34;symbol&#34;:&#34;XTZ&#34;,&#34;name&#34;:&#34;Tezos&#34;,&#34;color&#34;:&#34;#2c7df7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HkLUdilQ7/xtz.svg&#34;,&#34;marketCap&#34;:&#34;1298954067&#34;,&#34;price&#34;:&#34;1.4302723371340804&#34;,&#34;listedAt&#34;:1530662400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.37&#34;,&#34;rank&#34;:46,&#34;sparkline&#34;:[&#34;1.421883939884071&#34;,&#34;1.42509607402001&#34;,&#34;1.4278239665456545&#34;,&#34;1.4336636277697252&#34;,&#34;1.4443645638453815&#34;,&#34;1.4463747088081587&#34;,&#34;1.4428608091094144&#34;,&#34;1.4490881454348474&#34;,&#34;1.4450878337651158&#34;,&#34;1.4401715843904537&#34;,&#34;1.4355148328665224&#34;,&#34;1.4365319902236815&#34;,&#34;1.4339651090330499&#34;,&#34;1.4334495267586773&#34;,&#34;1.4333504141935083&#34;,&#34;1.4389840361204465&#34;,&#34;1.4379456439736016&#34;,&#34;1.4315401694215406&#34;,&#34;1.4240153029007887&#34;,&#34;1.4240927210678032&#34;,&#34;1.4220389629012662&#34;,&#34;1.4290008245398644&#34;,&#34;1.4312652127406216&#34;,&#34;1.4310909189590104&#34;,&#34;1.4306725904273427&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz&#34;,&#34;24hVolume&#34;:&#34;35958124&#34;,&#34;btcPrice&#34;:&#34;0.000071360020483851&#34;},{&#34;uuid&#34;:&#34;GSCt2y6YSgO26&#34;,&#34;symbol&#34;:&#34;CHZ&#34;,&#34;name&#34;:&#34;Chiliz&#34;,&#34;color&#34;:&#34;#d05e72&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/gTsOlSnwR/4066.png&#34;,&#34;marketCap&#34;:&#34;1281371060&#34;,&#34;price&#34;:&#34;0.21568734363318337&#34;,&#34;listedAt&#34;:1562332440,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.48&#34;,&#34;rank&#34;:47,&#34;sparkline&#34;:[&#34;0.21553593139708543&#34;,&#34;0.21544366417321525&#34;,&#34;0.21646610949174847&#34;,&#34;0.21730782782429547&#34;,&#34;0.21865681130587172&#34;,&#34;0.21939390999187283&#34;,&#34;0.21985592005582816&#34;,&#34;0.21915437745243896&#34;,&#34;0.2184171446254368&#34;,&#34;0.21798236632181323&#34;,&#34;0.21690087683062034&#34;,&#34;0.21604240077342493&#34;,&#34;0.21587704160172458&#34;,&#34;0.2158448062065273&#34;,&#34;0.21568131629647883&#34;,&#34;0.21628666481515962&#34;,&#34;0.21575577092565493&#34;,&#34;0.21492437995400548&#34;,&#34;0.21514404501911413&#34;,&#34;0.2171108493305216&#34;,&#34;0.21771656940310347&#34;,&#34;0.21679986568652215&#34;,&#34;0.21607273994568685&#34;,&#34;0.21599406892348155&#34;,&#34;0.216016823604864&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz&#34;,&#34;24hVolume&#34;:&#34;205319395&#34;,&#34;btcPrice&#34;:&#34;0.000010761204604301&#34;},{&#34;uuid&#34;:&#34;pxtKbG5rg&#34;,&#34;symbol&#34;:&#34;SAND&#34;,&#34;name&#34;:&#34;The Sandbox&#34;,&#34;color&#34;:&#34;#00adef&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/kd_vwOcnI/sandbox.png&#34;,&#34;marketCap&#34;:&#34;1273244296&#34;,&#34;price&#34;:&#34;0.8491294389371948&#34;,&#34;listedAt&#34;:1613583024,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.58&#34;,&#34;rank&#34;:48,&#34;sparkline&#34;:[&#34;0.8590405964683089&#34;,&#34;0.859478250004335&#34;,&#34;0.8609939510022012&#34;,&#34;0.8652881133772078&#34;,&#34;0.8665208089867517&#34;,&#34;0.8666644958759461&#34;,&#34;0.8662362089943302&#34;,&#34;0.8669849089516505&#34;,&#34;0.8647803548984957&#34;,&#34;0.8606548254227334&#34;,&#34;0.858647121421129&#34;,&#34;0.8662635524287782&#34;,&#34;0.8588847882234059&#34;,&#34;0.8544149170251873&#34;,&#34;0.8528484459196816&#34;,&#34;0.8567742977148085&#34;,&#34;0.8559971556239261&#34;,&#34;0.8526369746427614&#34;,&#34;0.8503963749700182&#34;,&#34;0.8514893353210455&#34;,&#34;0.8513642787546029&#34;,&#34;0.8508505323793061&#34;,&#34;0.8483933250963328&#34;,&#34;0.8475209589259349&#34;,&#34;0.8482538011775931&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand&#34;,&#34;24hVolume&#34;:&#34;116012726&#34;,&#34;btcPrice&#34;:&#34;0.000042365284276849&#34;},{&#34;uuid&#34;:&#34;Pe93bIOD2&#34;,&#34;symbol&#34;:&#34;LDO&#34;,&#34;name&#34;:&#34;Lido DAO Token&#34;,&#34;color&#34;:&#34;#77cced&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png&#34;,&#34;marketCap&#34;:&#34;1216349067&#34;,&#34;price&#34;:&#34;1.5122657530928172&#34;,&#34;listedAt&#34;:1627361901,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.34&#34;,&#34;rank&#34;:49,&#34;sparkline&#34;:[&#34;1.5150991540359635&#34;,&#34;1.5176061095960762&#34;,&#34;1.5245756510192037&#34;,&#34;1.5369489213784007&#34;,&#34;1.5521086753177897&#34;,&#34;1.5577273434480916&#34;,&#34;1.5620222188046804&#34;,&#34;1.5618008806408366&#34;,&#34;1.5635266954065115&#34;,&#34;1.5512539189835166&#34;,&#34;1.5391754904487456&#34;,&#34;1.5415483542201813&#34;,&#34;1.5406687905041778&#34;,&#34;1.5536997118197664&#34;,&#34;1.5585509390347834&#34;,&#34;1.5605461378658754&#34;,&#34;1.556322526404288&#34;,&#34;1.5432139594119398&#34;,&#34;1.527711427666444&#34;,&#34;1.5295360489082588&#34;,&#34;1.5251991365229256&#34;,&#34;1.523882390305484&#34;,&#34;1.5152199119209957&#34;,&#34;1.5079084095454254&#34;,&#34;1.5059207760888258&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo&#34;,&#34;24hVolume&#34;:&#34;14537858&#34;,&#34;btcPrice&#34;:&#34;0.000075450886041721&#34;},{&#34;uuid&#34;:&#34;iAzbfXiBBKkR6&#34;,&#34;symbol&#34;:&#34;EOS&#34;,&#34;name&#34;:&#34;EOS&#34;,&#34;color&#34;:&#34;#443f54&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/PqOYrWSje/eos2.svg&#34;,&#34;marketCap&#34;:&#34;1157143428&#34;,&#34;price&#34;:&#34;1.170587468937924&#34;,&#34;listedAt&#34;:1498694400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.08&#34;,&#34;rank&#34;:50,&#34;sparkline&#34;:[&#34;1.1694694824289555&#34;,&#34;1.1709120673050462&#34;,&#34;1.1739859596809479&#34;,&#34;1.17900555328724&#34;,&#34;1.184230473597679&#34;,&#34;1.185710435108849&#34;,&#34;1.1864344657129484&#34;,&#34;1.1885516582635711&#34;,&#34;1.1870888275685685&#34;,&#34;1.1829654851494844&#34;,&#34;1.17709582794196&#34;,&#34;1.1762202099671832&#34;,&#34;1.1773458464363997&#34;,&#34;1.1770861707666584&#34;,&#34;1.1811474861902838&#34;,&#34;1.1833592012519114&#34;,&#34;1.1818251357201783&#34;,&#34;1.1782503602022067&#34;,&#34;1.176960097898779&#34;,&#34;1.1767921922729265&#34;,&#34;1.1759604894059537&#34;,&#34;1.1750064515228658&#34;,&#34;1.1729163746108195&#34;,&#34;1.170358956437112&#34;,&#34;1.1692075076471242&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos&#34;,&#34;24hVolume&#34;:&#34;178450428&#34;,&#34;btcPrice&#34;:&#34;0.000058403664527924&#34;}]}} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; API status: success BTC 20043.048298420286 Icon Url: https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg Rank Url: https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc ETH 1363.4411267728026 Icon Url: https://cdn.coinranking.com/rk4RKHOuW/eth.svg Rank Url: https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth USDT 1.0002079259242496 Icon Url: https://cdn.coinranking.com/mgHqwlCLj/usdt.svg Rank Url: https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt USDC 1.0001455267516093 Icon Url: https://cdn.coinranking.com/jkDf8sQbY/usdc.svg Rank Url: https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc BNB 288.31435478535195 Icon Url: https://cdn.coinranking.com/B1N19L_dZ/bnb.svg Rank Url: https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb XRP 0.5001251405968443 Icon Url: https://cdn.coinranking.com/B1oPuTyfX/xrp.svg Rank Url: https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp BUSD 1.0000938123108745 Icon Url: https://cdn.coinranking.com/6SJHRfClq/busd.svg Rank Url: https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd ADA 0.4298337184562682 Icon Url: https://cdn.coinranking.com/ryY28nXhW/ada.svg Rank Url: https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada SOL 33.73772094047453 Icon Url: https://cdn.coinranking.com/yvUG4Qex5/solana.svg Rank Url: https://coinranking.com/coin/zNZHO_Sjf+solana-sol DOGE 0.06398401339869234 Icon Url: https://cdn.coinranking.com/H1arXIuOZ/doge.svg Rank Url: https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge MATIC 0.8402806991486048 Icon Url: https://cdn.coinranking.com/WulYRq14o/polygon.png Rank Url: https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic DOT 6.374344819711631 Icon Url: https://cdn.coinranking.com/RsljYqnbu/polkadot.svg Rank Url: https://coinranking.com/coin/25W7FG7om+polkadot-dot SHIB 0.000011280863460425 Icon Url: https://cdn.coinranking.com/D69LfI-tm/shib.png Rank Url: https://coinranking.com/coin/xz24e0BjL+shibainu-shib DAI 0.9999235811511265 Icon Url: https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg Rank Url: https://coinranking.com/coin/MoTuySvg7+dai-dai TRX 0.06254395432208257 Icon Url: https://cdn.coinranking.com/behejNqQs/trx.svg Rank Url: https://coinranking.com/coin/qUhEFk1I61atv+tron-trx WETH 1363.1831262096398 Icon Url: https://cdn.coinranking.com/KIviQyZlt/weth.svg Rank Url: https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth UNI 6.970594962776281 Icon Url: https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48 Rank Url: https://coinranking.com/coin/_H5FVG9iW+uniswap-uni AVAX 17.139061861537474 Icon Url: https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png Rank Url: https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax WBTC 20046.410227137 Icon Url: https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg Rank Url: https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc ATOM 13.113113000226868 Icon Url: https://cdn.coinranking.com/HJzHboruM/atom.svg Rank Url: https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom OKB 15.650246402664713 Icon Url: https://cdn.coinranking.com/xcZdYtX6E/okx.png Rank Url: https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb LTC 53.846722765780676 Icon Url: https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg Rank Url: https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc FTT 24.66016972332323 Icon Url: https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg Rank Url: https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt ETC 28.113947823836092 Icon Url: https://cdn.coinranking.com/rJfyor__W/etc.svg Rank Url: https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc XMR 148.96689473750794 Icon Url: https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg Rank Url: https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr ALGO 0.35172981355990574 Icon Url: https://cdn.coinranking.com/lzbmCkUGB/algo.svg Rank Url: https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo XLM 0.12062849560760455 Icon Url: https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg Rank Url: https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm BCH 118.98058610983257 Icon Url: https://cdn.coinranking.com/By8ziihX7/bch.svg Rank Url: https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch BTCB 20043.97749206499 Icon Url: https://cdn.coinranking.com/Swr_SeZio/4023.png Rank Url: https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb CRO 0.10974041351835884 Icon Url: https://cdn.coinranking.com/2o91jm73M/cro.svg Rank Url: https://coinranking.com/coin/65PHZTpmE55b+cronos-cro NEAR 3.630786016166329 Icon Url: https://cdn.coinranking.com/Cth83dCnl/near.png Rank Url: https://coinranking.com/coin/DCrsaMv68+nearprotocol-near LUNC 0.000290147954073881 Icon Url: https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg Rank Url: https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc WEMIX 1.8090092609827892 Icon Url: https://cdn.coinranking.com/1N84MQsoO/7548.png Rank Url: https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix FLOW 1.7061053298863806 Icon Url: https://cdn.coinranking.com/xh8X8QBss/flow.png Rank Url: https://coinranking.com/coin/QQ0NCmjVq+flow-flow ENS 17.259962623670035 Icon Url: https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png Rank Url: https://coinranking.com/coin/SbWqqTui-+energyswap-ens FIL 5.553360617882926 Icon Url: https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48 Rank Url: https://coinranking.com/coin/ymQub4fuB+filecoin-fil ICP 6.0165579380799885 Icon Url: https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png Rank Url: https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp VET 0.023557025426635677 Icon Url: https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg Rank Url: https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet CAKE 4.671730797095194 Icon Url: https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png Rank Url: https://coinranking.com/coin/ncYFcP709+pancakeswap-cake MANA 0.6999520749208403 Icon Url: https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg Rank Url: https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana IMX 0.7645787855498196 Icon Url: https://cdn.coinranking.com/naRGT2Y_X/10603.png Rank Url: https://coinranking.com/coin/Z96jIvLU7+immutablex-imx HBAR 0.058052265495351495 Icon Url: https://cdn.coinranking.com/dSCnSLilQ/hedera.svg Rank Url: https://coinranking.com/coin/jad286TjB+hedera-hbar FRAX 1.001334577613883 Icon Url: https://cdn.coinranking.com/BpVNCX-NM/frax.png Rank Url: https://coinranking.com/coin/KfWtaeV1W+frax-frax QNT 138.46931334806206 Icon Url: https://cdn.coinranking.com/a-i9Dl392/quant.png Rank Url: https://coinranking.com/coin/bauj_21eYVwso+quant-qnt EGLD 55.7002018134128 Icon Url: https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg Rank Url: https://coinranking.com/coin/omwkOTglq+elrond-egld XTZ 1.4302723371340804 Icon Url: https://cdn.coinranking.com/HkLUdilQ7/xtz.svg Rank Url: https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz CHZ 0.21568734363318337 Icon Url: https://cdn.coinranking.com/gTsOlSnwR/4066.png Rank Url: https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz SAND 0.8491294389371948 Icon Url: https://cdn.coinranking.com/kd_vwOcnI/sandbox.png Rank Url: https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand LDO 1.5122657530928172 Icon Url: https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png Rank Url: https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo EOS 1.170587468937924 Icon Url: https://cdn.coinranking.com/PqOYrWSje/eos2.svg Rank Url: https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos . Our Group Project API (World Time) . Indented block . import requests url = &quot;https://world-time2.p.rapidapi.com/timezone/Europe/London&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;c0f7469cd7mshc45a4834d55afdep1b5c00jsnc8a41fb46f94&quot;, &quot;X-RapidAPI-Host&quot;: &quot;world-time2.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.json()) . {&#39;abbreviation&#39;: &#39;BST&#39;, &#39;client_ip&#39;: &#39;107.23.255.129&#39;, &#39;datetime&#39;: &#39;2022-10-11T21:41:29.063416+01:00&#39;, &#39;day_of_week&#39;: 2, &#39;day_of_year&#39;: 284, &#39;dst&#39;: True, &#39;dst_from&#39;: &#39;2022-03-27T01:00:00+00:00&#39;, &#39;dst_offset&#39;: 3600, &#39;dst_until&#39;: &#39;2022-10-30T01:00:00+00:00&#39;, &#39;raw_offset&#39;: 0, &#39;timezone&#39;: &#39;Europe/London&#39;, &#39;unixtime&#39;: 1665520889, &#39;utc_datetime&#39;: &#39;2022-10-11T20:41:29.063416+00:00&#39;, &#39;utc_offset&#39;: &#39;+01:00&#39;, &#39;week_number&#39;: 41} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Country Generator using Javascript Algorithm",
            "content": "Program Explanation . This program generates the Wikipedia page of a random country in the world using JavaScript and HTML (specifically the JavaScript Math.random() function) | . Click For Random Country! Country Will Appear Here . &lt;/script&gt; .",
            "url": "https://raunak2007.github.io/csp-fast-pages/java/markdown/2022/09/25/js.html",
            "relUrl": "/java/markdown/2022/09/25/js.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Laurie Santos: Psychology and the Good Life",
            "content": "Stress and Anxiety in Yale . Even though students at Yale are very privileged to be at a place like Yale, they are so stressed and filled with anxiety because they are overwhelmed and incredibly busy all the time. | Here are some ways that Yale students are negatively by stress: Students are so stressed that they can’t make use of all the good opportunities presented to them. | Students are too stressed to enjoy the small pleasures and do things that students love(ex: reading a book). | . | . College Student Mental Health Statistics (2009 Study) . 40% of college students report more than the average level of stress | About 1/3 of students report being so depressed that it’s difficult to function | Over 40% often feel hopeless | A little under 50% say they experience overwhelming anxiety | Over 50% report often feeling very lonely | Over 80% say they fell overwhelmed by the amount of work they have to do every day | . Psychology and the Good Life Class . Laurie Santos created this course to help students understand and deal with stress and anxiety in college | There were two parts to the Psychology and the Good Life Course: Understanding positive psychology and how to make the positive changes in your life | Actually practicing the good habits (this is important because it’s one thing to understand what you should be doing to improve your mental health, but it’s another to actually implement the key ideas into your own life) | . | This course performed so well that it became the most popular course at Yale. The reason why this course performed so well was because many students were having trouble dealing with their stress and anxiety | . | Important insights that students can take away from the course: Your level of well being can be improved through the correct practices and measures taken to improve it. | We think that our life circumstances (such as occupation and salary) matter a lot, but they don’t matter nearly as much as we think | Sleep is very important for brain development and well being (and high school and college students aren’t getting enough) | It’s important to be aware of the present moment because it enables you to notice and enjoy the good things in your life. This can be practiced with practices like meditation. | It’s important to prioritize time over money | . | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/09/21/psych_collab.html",
            "relUrl": "/markdown/2022/09/21/psych_collab.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Notes for the Yale Video",
            "content": "Video Notes and Vocab . Enterprise: A project that is difficult/requires effort Enterprise can always be improved, we can improve where we’re at | . | Our life circumstances don’t matter as much as we think. Many different people (i.e those who’ve won the lottery) | Intuitions: We can understand things without conscious reasoning | Taking care of happiness doesn’t work without putting practices to work | G.I Joe fantasy: Simply knowing about a bias is enough to put the idea into practice | Often, the mind mugs up about what it means to be happy. It often lies. One case: Salary and our jobs | Money | Amount money needed to not up your happiness is around $70k | . | Very happy people make time for social connections. Connecting with humans helps happiness | . | Helping others helps us a lot, and helps us be happy more | Thinking about what we are grateful about is very powerful Expressing gratitude is a very good | . | Sleeping is good | Remaining in the present moment is often the best thing | Savoring the moment is often better | Affluence: The state of having a great deal of money (wealth) | Be affluent in time (spending money) | Happy people prioritize their time over their money | . Reflections: I often feel that I participate in some of these insights. I really like to help and remain in social contact with people, however I do not feel that I go out of my way to remain in contact. I also am not time affluent at all. This is sad because it doesn’t allow for me to be as happy as I’d like, so I feel that after watching this video I will be looking to focus more on my the time I have off (maybe giving myself an hour to myself, similarly to the Yale students) . List of Gratitude . People I am grateful for . My family (Sister, Father, Mother) | My friends in San Diego | My teammates | My cousins back in India | . Goals . Get an A in all 3 trimesters the class | Do extracurriculars related to my major (Computer Science) | Create applications and apps | . These connect back to my happiness as they show my passions and keep me in the moment. . Note of Gratitude: . I’m grateful for my scrum team with Harsha, Yuri, Sachit, and Tanay. They’re all super smart people who cover all my bases when I can’t solve my problems. They perfectly complement each other and are genuinely amazing people to be around .",
            "url": "https://raunak2007.github.io/csp-fast-pages/hacks/2022/09/18/psychology-notes.html",
            "relUrl": "/hacks/2022/09/18/psychology-notes.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Notes for the Yale Video",
            "content": "Video Notes and Vocab . Enterprise: A project that is difficult/requires effort Enterprise can always be improved, we can improve where we’re at | . | Our life circumstances don’t matter as much as we think. Many different people (i.e those who’ve won the lottery) | Intuitions: We can understand things without conscious reasoning | Taking care of happiness doesn’t work without putting practices to work | G.I Joe fantasy: Simply knowing about a bias is enough to put the idea into practice | Often, the mind mugs up about what it means to be happy. It often lies. One case: Salary and our jobs | Money | Amount money needed to not up your happiness is around $70k | . | Very happy people make time for social connections. Connecting with humans helps happiness | . | Helping others helps us a lot, and helps us be happy more | Thinking about what we are grateful about is very powerful Expressing gratitude is a very good | . | Sleeping is good | Remaining in the present moment is often the best thing | Savoring the moment is often better | Affluence: The state of having a great deal of money (wealth) | Be affluent in time (spending money) | Happy people prioritize their time over their money | . Reflections: I often feel that I participate in some of these insights. I really like to help and remain in social contact with people, however I do not feel that I go out of my way to remain in contact. I also am not time affluent at all. This is sad because it doesn’t allow for me to be as happy as I’d like, so I feel that after watching this video I will be looking to focus more on my the time I have off (maybe giving myself an hour to myself, similarly to the Yale students) . List of Gratitude . People I am grateful for . My family (Sister, Father, Mother) | My friends in San Diego | My teammates | My cousins back in India | . Goals . Get an A in all 3 trimesters the class | Do extracurriculars related to my major (Computer Science) | Create applications and apps | . These connect back to my happiness as they show my passions and keep me in the moment. . Note of Gratitude: . I’m grateful for my scrum team with Harsha, Yuri, Sachit, and Tanay. They’re all super smart people who cover all my bases when I can’t solve my problems. They perfectly complement each other and are genuinely amazing people to be around .",
            "url": "https://raunak2007.github.io/csp-fast-pages/hacks/2022/09/16/psychology.html",
            "relUrl": "/hacks/2022/09/16/psychology.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Docker server",
            "content": "",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/09/14/docker-server.html",
            "relUrl": "/markdown/2022/09/14/docker-server.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "App Lab Quiz Notes",
            "content": "Link . Here’s the link to our AppLab project: https://studio.code.org/… . Initial Thinking . Harsha and I want to build a quiz application that is user-friendly and easy to code. We want to avoid repetitive code so that we can have the most efficient programming experience. Our plan is to create an app that can support the selection of different quizzes given a dropdown selection. We want it to have 4 choices on each answer screen with only one correct answer. We also want to have a final screen which displays the score out of 3 as well as a percentage. There should be a way to go back to the main screen to retake a quiz or take the other quiz. Finally, there should be a “How to Play” screen for anyone confused about where to start. . Design Work . Harsha and I met up outside of school and did some sketches for the app on an iPad. We decided that we wanted to have a front screen with 3 images and a dropdown to select the quiz. On each question, we wanted to have a text box for the current quiz question and a 2x2 grid to display the answer choices with images and labels. We also planned out a score page that showed how many questions they got right out of 3 and percent accuracy with which they completed the quiz. The how to play screen was something Harsha designed on the fly by himself since we didn’t originally plan it but we wanted to add more features. . Creation . . Harsha and I used the JavaScript editor for quite a bit of our code. We used it to define the calculus quizzes in JavaScript objects. We used block coding to define onEvent listeners and setProperty calls because it has useful autocompletion features for the IDs of elements and their respective properties/emitters. . We designed the quiz in such a way that all the questions would live on one screen. When the user clicks the “next” or “submit” button, the following function runs” . var score = 0; var a=0; var c=0; var e=0; onEvent(&quot;hpButtonStart&quot;, &quot;click&quot;, function() { setScreen(&quot;q1Screen&quot;); }); // q1 onEvent(&quot;q1ButtonNext&quot;, &quot;click&quot;, function() { setScreen(&quot;q2Screen&quot;); a=getTime(); }); onEvent(&quot;q1ButtonB&quot;, &quot;click&quot;, function() { var b=getTime(); score+=10-((b-a)/1000000000000); setText(&quot;q1Text&quot;,&quot;Your score is: &quot;+score); }); // q2 onEvent(&quot;q2ButtonNext&quot;, &quot;click&quot;, function() { setScreen(&quot;q3Screen&quot;); c=getTime(); }); onEvent(&quot;q2ButtonC&quot;, &quot;click&quot;, function() { var d=getTime(); score+=10-((d-c)/1000000000000); setText(&quot;q2Text&quot;,&quot;Your score is: &quot;+score); }); . This function will set the label text, image sources, and question text to the next question without having to switch screens, avoiding repeated element creation and centralizing all the quiz logic in a single function. Additionally, it reduces the amount of event listeners being created (1 for each of the total 4 images). . Program Purpose &amp; Function . A quiz to assess the user’s knowledge of calculus | Should display the user’s score at the end to show their understanding | . Data Abstraction . Definition of the a=getTime() and score variables containing objects representing the quizzes for each sport | Separated from functions that are actually using the data | . Managing Complexity . Use of a single screen to display all quiz questions using “containers” for images, the question, and the answer labels Setting certain properties on these based on the current question to show the correct information | Creation of functions to abstract away logic for changing each of these individual parts of the quiz screen | . | . Procedural Abstraction . Use of functions to update images, questions, and choices | Use of function to abstract away quiz logic and execute the correct quiz based on user | Use of function to set the current selected answer choice Changes previously selected answer label’s color, sets newly selected answer label’s color, and sets the current selected answer choice in a global variable | . | . Algorithm Implementation . Creation of a nextQuestion algorithm that procedurally fills in the correct question, labels, and answer choices for each quiz question Handles answer choice colors, text value of the “next” button (changes to “submit” for the last question) | Handles quiz ending scenario | . | . Testing . Use of console.log to debug unwanted behavior | Use of console.log to test the scoring feature Logged each correct answer, incorrect answer, and overall score) | . | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/csp/codeorg/app/2022/09/12/codeorg.html",
            "relUrl": "/markdown/csp/codeorg/app/2022/09/12/codeorg.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "College Board Create Performance Task",
            "content": "College Board Create Performance Task . Plan and Ideas . A program that creates a hangman game for the user. . Row 1: Program Purpose and Function . Assesses students’ ability to explain how a code segment or program functions. Know the difference between program purpose and function The purpose and function is what the program was meant to do Examples: The purpose of the Quiz program: To assess knowledge on a topic. The purpose of InfoDb: To store and access user information. . The purpose of this game is to create a word guessing game, where the user guesses certain letters, and the program will automatically fill in any letters present in the target word that the user inputs. After a given amount of tries, if the user hasn’t guessed the word, the game will fail itself. . Row 2: Data Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program. The Abstraction and storage of data in a generalized container, e.g. variables, lists, dictionaries . The hangman game will predominantly use lists and variables to store the necessary data for the game. The variables could hold the different “stages” of the hangman ascii-art. On the otherhand, lists could be used to keep track of the already used letters, the target word, and the letters that were found in the target word. DOing so would allow for easy manipulation of the data stored and processed by the user. . Row 3: Managing Complexity . Assesses students’ ability to explain how abstraction manages complexity. The print_data function in the InfoDb project helps to reduce the amount of code that has to be written, as the code under print_data was abstracted from the function that was pre-defined. . Helps to reduce complexity in the code as everything is compartmentalized. . Individual functions and classes could be created to compartmentalize certain processes to reduce the clutter and repitition in the code. One function could be used to verify the prescence of a letter in a word, another function could be used to check if the game has been won, and a final main function could be made with a loop that runs the overall game. . Row 4: Prodecural Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program. The print_data function used in the InfoDb project was abstracted into the various for loops that the program used. . The many functions and classes used in the hangman game could be abstracted in the program to manage the overall complexity of the game. . Row 5: Algorithm Implementation . Assesses students’ ability to implement and apply an algorithm. An algorithm is a methodology or a logical path that a computer follows to properly, . Ex: The percentage of the score in the quiz was an example of an algorithm Some algorithms that could be implemented in this project could be a way of keeping track of total number of attempts taken or checking if a game has been won, (e.g. all of the spaces have been filled out with letters) . Row 6: Testing . Assesses students’ ability to investigate the situation, context, or task. Testing is running over all the processes in a program and ensuring that everything works. The ability to find, detect, and fix any bugs apparent in the program. . Some testing that could be done on the project could be testing for accepting inputs from the user (subsituting a letter in when it’s found to be correct), or testing the proper game end and game start events. . How to Get a Five . Review Past Notes From Class . Be sure to be clear on the vocab and content taught in the class. Be parepared to be able to properly define each vocabulary and provide examples to each vocab. Any questions that cannot be answered with my notes, ask the teammates first and then consult the internet. If the problems still remains unsolved, consult the teacher about it. . Look At Previous Collegeboard Submissions &amp; Assignments . Learn from the past submissions of other people, plan ahead of time what to consider and what to add to my project. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/apcsp/week%203/2022/09/12/apexam.html",
            "relUrl": "/markdown/apcsp/week%203/2022/09/12/apexam.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "App Lab Notes",
            "content": "Notes . Our test is on a Calculus Kahoot | Use on event for every function | Have the questions about calculus | Use Variable to keep Score | Use the getTime() function to simulate it like a Kahoot, with faster responses indicating higher scores | . Finished Project . https://studio.code.org/projects/applab/7RkP8F731P_pVyhyzeXEwJyUi3vt6N08ADSlKgFKHjY .",
            "url": "https://raunak2007.github.io/csp-fast-pages/blog/2022/09/06/AppLab1.html",
            "relUrl": "/blog/2022/09/06/AppLab1.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "DNHS Bell Schedule",
            "content": "Monday, Tuesday, Thursday . Period Start Time End Time . Period 1 | 8:35 AM | 9:44 AM | . Period 2 | 9:49 AM | 10:58 AM | . Break | 10:58 AM | 11:08 AM | . Period 3 | 11:13 AM | 12:22 PM | . Lunch | 12:22 PM | 12:52 PM | . Period 4 | 12:57 PM | 2:06 PM | . Office Hours | 2:06 PM | 2:31 PM | . Period 5 | 2:36 PM | 3:45 PM | . Wednesday (Late Start) . Period Start Time End Time . Period 1 | 9:55 AM | 10:53 AM | . Period 2 | 10:58 AM | 11:56 AM | . Break | 11:56 AM | 12:06 pM | . Period 3 | 12:11 PM | 1:09 PM | . Lunch | 1:09 PM | 1:39 PM | . Period 4 | 1:44 PM | 2:42 PM | . Office Hours | 2:06 PM | 2:31 PM | . Period 5 | 2:47 PM | 3:45 PM | . Friday . Period Start Time End Time . Period 1 | 8:35 AM | 9:49 AM | . Period 2 | 9:54 AM | 11:08 AM | . Break | 11:08 AM | 11:18 AM | . Period 3 | 11:23 AM | 12:37 PM | . Lunch | 12:37 PM | 1:07 PM | . Period 4 | 1:12 PM | 2:26 PM | . Period 5 | 2:31 PM | 3:45 PM | . .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/week2/2022/09/03/schedule.html",
            "relUrl": "/markdown/week2/2022/09/03/schedule.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Lists, Dictionaries, Loops",
            "content": "A Caesar cipher is a simple method of encoding messages. Caesar ciphers use a substitution method where letters in the alphabet are shifted by some fixed number of spaces to yield an encoding alphabet. A Caesar cipher with a shift of 1 would encode an A as a B, an M as an N, and a Z as an A, and so on. The method is named after Roman leader Julius Caesar, who used it in his private correspondence! . alphabet = [&#39;a&#39;,&#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;,&#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] text = input(&quot;Type your message: n&quot;).lower() #asks for user&#39;s message print(&quot;Your message is: &quot; + text) shift = int(input(&quot;Type the shift number: n&quot;)) #asks for shift number print(f&quot;Your shift number is: {shift}&quot;) def encrypt(text, shift): #define function cipher_text = &quot;&quot; #set cipher_text to empty for letter in text: #looping through each letter in the user&#39;s message position = alphabet.index(letter) #set letter&#39;s alphabet index to variable position new_position = position + shift #set the letter&#39;s new position with shift number new_letter = alphabet[new_position] #new letter with new position cipher_text += new_letter #add letters one by one to empty cipher_text print(f&quot;Your encoded text is: {cipher_text}&quot;) #print the encoded text encrypt(text, shift) . Type your message: coding Your message is: coding Type the shift number: 4 Your shift number is: 4 Your encoded text is: gshmrk . Types of Variables: String, Integer, Float, List, and Dictionary In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. . # variable of type string name = &quot;Raunak Mondal&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;age&quot;, age, type(age)) # variable of type float score = 100.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;Html&quot;, &quot;CSS&quot;, &quot;C&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) ###REVERSED ORDER##### fruits = [&quot;Apple&quot;, &quot;Orange&quot;, &quot;Banana&quot;, &quot;Pear&quot;, &quot;Blueberry&quot;, &quot;Grape&quot;] fruits.reverse() print(&#39; nReversed List:&#39;, fruits) ###PRINT IN RANDOM ORDER#### import random print(&quot; nAre you bored? Would you like us to give you a random, fun activity to do right now?&quot;) activities = [&quot;biking&quot;, &quot;baking&quot;, &quot;playing basketball&quot;, &quot;going to the beach&quot;, &quot;sleeping&quot;] randomWord = random.choice(activities) print(&quot;An activity you could do is&quot;, randomWord + &quot;!&quot;) . name Raunak Mondal &lt;class &#39;str&#39;&gt; age 15 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;Html&#39;, &#39;CSS&#39;, &#39;C&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; - langs[3] C &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Raunak Mondal&#39;, &#39;age&#39;: 15, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;Html&#39;, &#39;CSS&#39;, &#39;C&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Raunak Mondal &lt;class &#39;str&#39;&gt; Reversed List: [&#39;Grape&#39;, &#39;Blueberry&#39;, &#39;Pear&#39;, &#39;Banana&#39;, &#39;Orange&#39;, &#39;Apple&#39;] Are you bored? Would you like us to give you a random, fun activity to do right now? An activity you could do is playing basketball! . Lists and Dictionaries Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many Dictionary is used to define data patterns. Iteration is often used to process through lists. To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). . InfoDb = [] # Append to List a 2nd Dictionary of key/values #added records for my gender, phone number, and age InfoDb.append({ &quot;FirstName&quot;: &quot;Raunak&quot;, &quot;LastName&quot;: &quot;Mondal&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;September 1&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;raunakmondal07@gmail.com&quot;, &quot;PhoneNumber&quot;: &quot;858-923-6909&quot;, &quot;Age&quot;: &quot;15&quot;, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Programming&quot;, &quot;Programming&quot;,] }) #my partner info in dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Harsha&quot;, &quot;LastName&quot;: &quot;Jai&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;May 16&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;harshadevice@gmail.com&quot;, &quot;PhoneNumber&quot;: &quot;858-832-0156&quot;, &quot;Age&quot;: &quot;15&quot;, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Programming&quot;, &quot;Programming&quot;,] }) import getpass, sys ####User&#39;s input added to list### FirstName = input(&quot;Enter your first name: &quot;) LastName = input(&quot;Enter your last name: &quot;) Gender = input(&quot;Enter your gender: &quot;) DOB = input(&quot;Enter your birthday: &quot;) Residence = input(&quot;Enter your city: &quot;) Email = input(&quot;Enter your email: &quot;) PhoneNumber = input(&quot;Enter your phone number (with dashes in between): &quot; ) Age = input(&quot;Enter your age: &quot;) #for loop for hobbies, since want multiple outputs Hobbies=[] max_length = 3 while len(Hobbies) &lt; max_length: userHobby = input(&quot;Enter a hobby you enjoy: &quot;) Hobbies.append(userHobby) print(Hobbies) InfoDb.append({ &quot;FirstName&quot;: FirstName, &quot;LastName&quot;: LastName, &quot;Gender&quot;: Gender, &quot;DOB&quot;: DOB, &quot;Residence&quot;: Residence, &quot;Email&quot;: Email, &quot;PhoneNumber&quot;: PhoneNumber, &quot;Age&quot;: Age, &quot;Hobbies&quot;: Hobbies, }) # Print the data structure print(InfoDb) . Enter your first name: Raunak Enter your last name: Mondal Enter your gender: Male Enter your birthday: sep 1 Enter your city: San Diego Enter your email: raunakmondal07@gmail.com Enter your phone number (with dashes in between): 858-923-6909 Enter your age: 15 Enter a hobby you enjoy: coding Enter a hobby you enjoy: coding Enter a hobby you enjoy: coding [&#39;coding&#39;, &#39;coding&#39;, &#39;coding&#39;] [{&#39;FirstName&#39;: &#39;Raunak&#39;, &#39;LastName&#39;: &#39;Mondal&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;September 1&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;raunakmondal07@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-923-6909&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Programming&#39;, &#39;Programming&#39;]}, {&#39;FirstName&#39;: &#39;Harsha&#39;, &#39;LastName&#39;: &#39;Jai&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;May 16&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;harshadevice@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-832-0156&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Programming&#39;, &#39;Programming&#39;]}, {&#39;FirstName&#39;: &#39;Raunak&#39;, &#39;LastName&#39;: &#39;Mondal&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;sep 1&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;raunakmondal07@gmail.com&#39;, &#39;PhoneNumber&#39;: &#39;858-923-6909&#39;, &#39;Age&#39;: &#39;15&#39;, &#39;Hobbies&#39;: [&#39;coding&#39;, &#39;coding&#39;, &#39;coding&#39;]}] . Formatted output of Dictionary Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. . InfoDb = [] def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Gender:&quot;, d_rec[&quot;Gender&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Phone Number:&quot;, d_rec[&quot;PhoneNumber&quot;]) print(&quot; t&quot;, &quot;Age:&quot;, d_rec[&quot;Age&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;Formatted for loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . Formatted for loop output . While loop In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output . Recursion (calling a loop repeatedly) This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output . Quiz that stores in a List of Dictionaries . questions = 5 #number of quiz questions correct = 0 #initialize number of correct answers as 0 print(&quot;This is a 5 question trivia quiz, good luck!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) #asks user a question user_input = input() #takes user&#39;s input as variable msg print(&quot;Answer: &quot; + user_input) #print user&#39;s input as Answer if answer == user_input.lower(): #convert user&#39;s input to lowercase print(&quot;Correct Answer&quot;) global correct #allows to modify variable outside of current scope correct += 1 #add 1 to correct count else: print (&quot;Incorrect Answer&quot;) return user_input question_1 = question_and_answer(&quot;Which is the largest planet in the solar system?&quot;, &quot;jupiter&quot;) question_2 = question_and_answer(&quot;Are worker bees male or female?&quot;, &quot;female&quot;) question_3 = question_and_answer(&quot;What type of fish is Nemo?&quot;, &quot;clownfish&quot;) question_4 = question_and_answer(&quot;How much is the diameter of a basketball hoop? (answer in inches and written out as a word)&quot;, &quot;eighteen&quot;) question_5 = question_and_answer(&quot;Name the largest state in America&quot;, &quot;alaska&quot;) if correct &lt; 3: print(f&#39;You scored {correct} correct answers out of 5, better luck next time!&#39;) elif correct &lt; 5: print(f&#39;You scored {correct} correct answers out of 5, nice try!&#39;) else: print(f&#39;You scored {correct} correct answers out of 5, nice going you trivia star!&#39;) Quiz = { &quot;Q_1&quot;: question_1, &quot;Q_2&quot;: question_2, &quot;Q_3&quot;: question_3, &quot;Q_4&quot;: question_4, &quot;Q_5&quot;: question_5 } print(&quot;A record of your quiz:&quot;, Quiz) . This is a 5 question trivia quiz, good luck! Question: Which is the largest planet in the solar system? n Answer: n Incorrect Answer Question: Are worker bees male or female? n Answer: n Incorrect Answer Question: What type of fish is Nemo? n Answer: n Incorrect Answer Question: How much is the diameter of a basketball hoop? (answer in inches and written out as a word) n Answer: n Incorrect Answer Question: Name the largest state in America n Answer: n Incorrect Answer You scored 0 correct answers out of 5, better luck next time! A record of your quiz: {&#39;Q_1&#39;: &#39;n&#39;, &#39;Q_2&#39;: &#39;n&#39;, &#39;Q_3&#39;: &#39;n&#39;, &#39;Q_4&#39;: &#39;n&#39;, &#39;Q_5&#39;: &#39;n&#39;} .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/week2/2022/08/31/loops.html",
            "relUrl": "/jupyter/week2/2022/08/31/loops.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Ap Csp Insights And Takeaways From Alumni Panel",
            "content": "Insights: . Developing an interest to CS at an early age can help anyone learn CS faster (Anthony) . | Having a logical thinking background can also help develop an interest in CS (Mabel) . | Being creative with coding can help develop a deep interest in CS (Allison) . | Make mistakes as much as you can so that you can learn more from them (Colin) . | Follow your own path and make your own projects (Anthony) . | Having a purpose for applying CS can help you learn way more than any other technique (Mabel) . | Never BS and always be sincere (Allison) . | You should be flexible with your organization to learn CS more intuitively (Nitya) . | . Takeaways: . UCSD CS has 2 hands-on projects, one in freshman year and one in senior year (Colin) . | Study in groups and work with other people to understand CS better (Andrew) . | It’s okay if others rely on you to succeed as long as they get taught what you already know(Mabel) . | Coding is essential in nearly every major . | You can use programming to analyze data in other majors . | MATLAB can help with college math courses . | Jupyter Notebooks are starting to be used in research papers to make them more interactive . | You can put your resume through certain websites to see which jobs are good for you . | You should stand out to your teacher to make sure you get the best internship possible . | Companies value personal projects when applying for internships/jobs . | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2022/08/29/AP-CSP-Insights-and-Takeaways-from-Alumni-Panel.html",
            "relUrl": "/2022/08/29/AP-CSP-Insights-and-Takeaways-from-Alumni-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Ap Csp Insights And Takeaways From Alumni Panel (1)",
            "content": "Insights: . Developing an interest to CS at an early age can help anyone learn CS faster . | Having a logical thinking background can also help develop an interest in CS . | Being creative with coding can help develop a deep interest in CS . | Make mistakes as much as you can so that you can learn more from them . | Follow your own path and make your own projects . | Having a purpose for applying CS can help you learn way more than any other technique . | Never BS and always be sincere . | You should be flexible with your organization to learn CS more intuitively . | . Takeaways: . UCSD CS has 2 hands-on projects, one in freshman year and one in senior year . | Study in groups and work with other people to understand CS better . | It’s okay if others rely on you to succeed as long as they get taught what you already know . | Coding is essential in nearly every major . | You can use programming to analyze data in other majors . | MATLAB can help with college math courses . | Jupyter Notebooks are starting to be used in research papers to make them more interactive . | You can put your resume through certain websites to see which jobs are good for you . | You should stand out to your teacher to make sure you get the best internship possible . | Companies value personal projects when applying for internships/jobs . | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2022/08/29/AP-CSP-Insights-and-Takeaways-from-Alumni-Panel-(1).html",
            "relUrl": "/2022/08/29/AP-CSP-Insights-and-Takeaways-from-Alumni-Panel-(1).html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Images in Markdown",
            "content": "Pictures of Carne Asada Fries | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/08/27/images.html",
            "relUrl": "/markdown/2022/08/27/images.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Raunak Mondal What Is Art   Tolstoy For Mrs. P's Class",
            "content": "from What Is Art? by Leo Tolstoy (1897) . CHAPTER 4 EXCERPT . If we say that the aim of any activity is merely our pleasure, and define it solely by that pleasure, our definition will evidently be a false one. But this is precisely what has occurred in the efforts to define art. Now, if we consider the food question it will not occur to anyone to affirm that the importance of food consists in the pleasure we receive when eating it. Everyone understands that the satisfaction of our taste cannot serve as a basis for our definition of the merits of food, and that we have therefore no right to presuppose that the dinners with cayenne pepper, Limburg cheese, alcohol, etc., to which we are accustomed and which please us, form the very best human food. . And in the same way, beauty, or that which pleases us, can in no sense serve as the basis for the definition of art; nor can a series of objects which afford us pleasure serve as the model of what art should be. . To see the aim and purpose of art in the pleasure we get from it is like assuming (as is done by people of the lowest moral development, e.g., by savages) that the purpose and aim of food is the pleasure derived when consuming it. . —- . Just as people who conceive the aim and purpose of food to be pleasure cannot recognize the real meaning of eating, so people who consider the aim of art to be pleasure cannot realize its true meaning and purpose because they attribute to an activity the meaning of which lies in its connection with other phenomena of life, the false and exceptional aim of pleasure. People come to understand that the meaning of eating lies in the nourishment of the body only when they cease to consider that the object of that activity is pleasure. And it is the same with regard to art. People will come to understand the meaning of art only when they cease to consider that the aim of that activity is beauty, i.e., pleasure. The acknowledgment of beauty (i.e., of a certain kind of pleasure received from art) as being the aim of art not only fails to assist us in finding a definition of what art is, but, on the contrary, by transferring the question into a region quite foreign to art (into metaphysical, psychological, physiological, and even historical discussions as to why such a production pleases one person, and such another displeases or pleases someone else), it renders such definition impossible. And since discussions as to why one man likes pears and another prefers meat do not help toward finding a definition of what is essential in nourishment, so the solution of questions of taste in art (to which the discussions on art involuntarily come) not only does not help to make clear in what this particular human activity which we call art really consists, but renders such elucidation quite impossible until we rid ourselves of a conception which justifies every kind of art at the cost of confusing the whole matter. . —-- . CHAPTER 5 EXCERPT . In order correctly to define art, it is necessary, first of all, to cease to consider it as a means to pleasure and to consider it as one of the conditions of human life. Viewing it in this way we cannot fail to observe that art is one of the means of intercourse between man and man. . Every work of art causes the receiver to enter into a certain kind of relationship both with him who produced, or is producing, the art, and with all those who, simultaneously, previously, or subsequently, receive the same artistic impression. . Speech, transmitting the thoughts and experiences of men, serves as a means of union among them, and art acts in a similar manner. The peculiarity of this latter means of intercourse, distinguishing it from intercourse by means of words, consists in this, that whereas by words a man transmits his thoughts to another, by means of art he transmits his feelings. . —- . The activity of art is based on the fact that a man, receiving through his sense of hearing or sight another man&#39;s expression of feeling, is capable of experiencing the emotion which moved the man who expressed it. To take the simplest example; one man laughs, and another who hears becomes merry; or a man weeps, and another who hears feels sorrow. [...] . And it is upon this capacity of man to receive another man&#39;s expression of feeling and experience those feelings himself, that the activity of art is based. [...] . Art begins when one person, with the object of joining another or others to himself in one and the same feeling, expresses that feeling by certain external indications. To take the simplest example: a boy, having experienced, let us say, fear on encountering a wolf, relates that encounter; and, in order to evoke in others the feeling he has experienced, describes himself, his condition before the encounter, the surroundings, the woods, his own lightheartedness, and then the wolf&#39;s appearance, its movements, the distance between himself and the wolf, etc. All this, if only the boy, when telling the story, again experiences the feelings he had lived through and infects the hearers and compels them to feel what the narrator had experienced is art. If even the boy had not seen a wolf but had frequently been afraid of one, and if, wishing to evoke in others the fear he had felt, he invented an encounter with a wolf and recounted it so as to make his hearers share the feelings he experienced when he feared the world, that also would be art. And just in the same way it is art if a man, having experienced either the fear of suffering or the attraction of enjoyment (whether in reality or in imagination) expresses these feelings on canvas or in marble so that others are infected by them. And it is also art if a man feels or imagines to himself feelings of delight, gladness, sorrow, despair, courage, or despondency and the transition from one to another of these feelings, and expresses these feelings by sounds so that the hearers are infected by them and experience them as they were experienced by the composer. . —-- . The feelings with which the artist infects others may be most various - very strong or very weak, very important or very insignificant, very bad or very good: feelings of love for one&#39;s own country, self-devotion and submission to fate or to God expressed in a drama, raptures of lovers described in a novel, feelings of voluptuousness expressed in a picture, courage expressed in a triumphal march, merriment evoked by a dance, humor evoked by a funny story, the feeling of quietness transmitted by an evening landscape or by a lullaby, or the feeling of admiration evoked by a beautiful arabesque - it is all art. If only the spectators or auditors are infected by the feelings which the author has felt, it is art. . To evoke in oneself a feeling one has once experienced, and having evoked it in oneself, then, by means of movements, lines, colors, sounds, or forms expressed in words, so to transmit that feeling that others may experience the same feeling - this is the activity of art. . Art is a human activity consisting in this, that one man consciously, by means of certain external signs, hands on to others feelings he has lived through, and that other people are infected by these feelings and also experience them . —-- . CHAPTER 15 EXCERPT . Art, in our society, has been so perverted that not only has bad art come to be considered good, but even the very perception of what art really is has been lost. In order to be able to speak about the art of our society, it is, therefore, first of all necessary to distinguish art from counterfeit art. . There is one indubitable indication distinguishing real art from its counterfeit, namely, the infectiousness of art. If a man, without exercising effort and without altering his standpoint on reading, hearing, or seeing another man&#39;s work, experiences a mental condition which unites him with that man and with other people who also partake of that work of art, then the object evoking that condition is a work of art. And however poetical, realistic, effectful, or interesting a work may be, it is not a work of art if it does not evoke that feeling (quite distinct from all other feelings) of joy and of spiritual union with another (the author) and with others (those who are also infected by it). [...] . The stronger the infection, the better is the art as art, speaking now apart from its subject matter, i.e., not considering the quality of the feelings it transmits. . And the degree of the infectiousness of art depends on three conditions: . On the greater or lesser individuality of the feeling transmitted; . | on the greater or lesser clearness with which the feeling is transmitted; . | on the sincerity of the artist, i.e., on the greater or lesser force with which the artist himself feels the emotion he transmits. . | The more individual the feeling transmitted the more strongly does it act on the receiver; the more individual the state of soul into which he is transferred, the more pleasure does the receiver obtain, and therefore the more readily and strongly does he join in it. . The clearness of expression assists infection because the receiver, who mingles in consciousness with the author, is the better satisfied the more clearly the feeling is transmitted, which, as it seems to him, he has long known and felt, and for which he has only now found expression. . —- . But most of all is the degree of infectiousness of art increased by the degree of sincerity in the artist. As soon as the spectator, hearer, or reader feels that the artist is infected by his own production, and writes, sings, or plays for himself, and not merely to act on others, this mental condition of the artist infects the receiver; and contrariwise, as soon as the spectator, reader, or hearer feels that the author is not writing, singing, or playing for his own satisfaction - does not himself feel what he wishes to express - but is doing it for him, the receiver, a resistance immediately springs up, and the most individual and the newest feelings and the cleverest technique not only fail to produce any infection but actually repel. . I have mentioned three conditions of contagiousness in art, but they may be all summed up into one, the last, sincerity, i.e., that the artist should be impelled by an inner need to express his feeling. That condition includes the first; for if the artist is sincere he will express the feeling as he experienced it. And as each man is different from everyone else, his feeling will be individual for everyone else; and the more individual it is - the more the artist has drawn it from the depths of his nature - the more sympathetic and sincere will it be. And this same sincerity will impel the artist to find a clear expression of the feeling which he wishes to transmit. . Therefore this third condition - sincerity - is the most important of the three. It is always complied with in peasant art, and this explains why such art always acts so powerfully; but it is a condition almost entirely absent from our upper-class art, which is continually produced by artists actuated by personal aims of covetousness or vanity. . Such are the three conditions which divide art from its counterfeits, and which also decide the quality of every work of art apart from its subject matter. . The absence of any one of these conditions excludes a work form the category of art and relegates it to that of art&#39;s counterfeits. If the work does not transmit the artist&#39;s peculiarity of feeling and is therefore not individual, if it is unintelligibly expressed, or if it has not proceeded from the author&#39;s inner need for expression - it is not a work of art. If all these conditions are present, even in the smallest degree, then the work, even if a weak one, is yet a work of art. . | NOTES: . We cannot use our personal tastes &amp; pleasures to judge the merits of something . | . Example of food defines that . Art can’t be defined by pleasure, but should be defined by its purpose . Defining anything as that which pleases us makes defining subjective &amp; out of the arena of art . | . Art can initiate a relationship between the artist and receiver . | . The feelings of the artist are transmitted to the receiver through art, but it is up to the receiver to assess that message . | . Art is a way of expressing one’s feelings to someone else using lines, shapes, and colors . | . The intensity of the feeling that the receiver receives is always less than or equal to the intensity of the feeling that the artist sends . | . Everyone will have a different feeling due to the differences between individuals . | . Sincerity is the most important of the 3. . | . These 3 conditions differentiate an art piece from counterfeit artpieces. . | . | . MAJOR TAKEAWAYS: . Art is a method of expressing someone’s feelings to someone else . | Art is mostly “infecting” rather than “expressing” because it can spread to multiple people who can different responses to it . | Counterfeit art describes art that isn’t individual, clear, or sincere . | . READING AND DISCUSSION QUESTIONS . Why does Tolstoy believe one must understand the aim or purpose of an activity as the key to defining it? . | Tolstoy believes that the aim or purpose of an activity comes from the necessity of it, not the pleasure of it. In addition, Tolstoy believes that understanding other concepts besides aim or purpose, such as the pleasure of it, can lead to subjective beliefs that could be considered irrational or irrelevant to others. . If, as explained in the chapter 4 segment, Tolstoy believes that pleasure is not the true purpose of eating, what then is? How does this relate to art? . | The true purpose of eating is to nourish your body and provide it with the nutrients that it needs to function properly. This relates to art because the true purpose of art is not to seek the pleasure that one gains from art, but rather to sense the feelings and emotions that the artist displayed in their art. . Why does Tolstoy compare speech with art? What does each communicate? . | Speech is similar to art because in the same way speech communicates thoughts and experiences verbally using words and sentences, art communicates emotions and feelings visually using geometric shapes and colors. In addition, speech and art both serve as means of union to many people. . Why does Tolstoy describe the transmission of emotion as “infection”? How does it differ from “expression”? . | Tolstoy describes the transmission of emotion as “infection” because the emotion transmitted from art can spread to others and can stay with the individual for a long period of time. The clearness of expression assists infection because the receiver, who mingles in consciousness with the author, is the better satisfied the more clearly the feeling is transmitted, which, as it seems to him, he has long known and felt, and for which he has only now found expression. . According to Tolstoy, but in your own words, what is art? . | Art is, according to Tolstoy, a “contagious” method of expressing someone’s emotions to someone else. Art is a human activity, consisting in this, that one man consciously, by means of certain external signs, hands on to others feelings he has lived through, and that other people are infected by these feelings, and also experience them. . How is what Tolstoy is saying similar to what the authors of Cultures and Values are saying when they explain that art has a “surplus of meaning?” . | Tolstoy is saying that art can have an intensity of feeling towards the receiver greater than what is being sent out if it meets his 3 criteria (which mainly can be described as sincerity). This is similar to what the authors of Cultures and Values are saying when they explain that art has a surplus of meaning because in a similar way, more meaning is being expressed from the art than being expressed in the art. . How does Tolstoy’s ideas support, challenge or complicate (both support and challenge) your ideas about art? . | Tolstoy’s ideas supported my idea that art needed to be sincere in some way to be considered non-counterfeit art, but challenged my idea that art was more about communicating feelings and emotions rather than drawing and painting in a way that seemed aesthetically pleasing. .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2022/08/27/Raunak-Mondal-What-Is-Art-Tolstoy-for-Mrs.-P's-Class.html",
            "relUrl": "/2022/08/27/Raunak-Mondal-What-Is-Art-Tolstoy-for-Mrs.-P's-Class.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Bash Installation Checks",
            "content": "python --version python2 --version . Python 3.9.12 Python 2.7.18 . conda list . # packages in environment at /root/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: python3 /root/anaconda3/share/jupyter/kernels/python3 bash /usr/local/share/jupyter/kernels/bash . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /root/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/fastpages/jupyter/2022/08/26/bash.html",
            "relUrl": "/fastpages/jupyter/2022/08/26/bash.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Apwh Notes From Prehistory To Rise Of Civilizations",
            "content": "From Pre History to Civilization .   . The first humans: appear in Africa. .   . The term pre-history refers to the period when written languages and records did not yet exist. How do we know about the pre-history period? . Archeology-the study of the ways of life of early people by studying what they left behind (artifacts) . Historians-study all evidence about the past, including archeology, written documents, pictures, films, etc. .   . The Stone age . The stone age is divided into two parts. . 1) 1)      Paleolithic (Old stone age) . 2) 2)      Neolithic (New stone age) .   . During the stone age, civilization had not yet emerged. People were pre-civilized. .   . NOTE: Problems with the term “civilization” . Historians and anthropologist have noted several problems with the term civilization. First of all, it tends to be used in an ethnocentric way; in other words, it is used to assign to others an inferior status. For example, the Chinese of the Han dynasty thought all others in the world were uncivil barbarians; likewise, from the Spartans to Nazi Germany, designating others as less than civilized was often a pretense for conquering or destroying them. Secondly, the term marginalizes (excludes) other people who have made important contributions to history. For example, nomadic people are responsible for the diffusion of some of the most important technologies in history, but most accepted forms of the term civilization exclude them. .   . At its most basic element, civilization is based on the food supply. Uncivilized man lives at the mercy of the land and weather. He does not provide for times of need. .   . “Three meals a day area a highly advanced institution. Savages gorge themselves or fast.” People lived at extremes: life was either a feast or a famine. There was little thought of providing enough food for the next day. .   . Hunting and Gathering . People grubbed food from the earth with their bare hands, then used simple tools made from stones or animal bones. Thousands of generations tried countless types of plants and roots, as man learned by experience which ones could be eaten. He gathered insects, small reptiles and small animals. Large insects were dried in the sun for future meals. Man is known to have eaten shellfish, frogs, snails, mice, snakes, dogs, horses, roots, lice, insects, .   . It was nature that finally taught man to save for tomorrow. People took example from animals and insects: dogs that bury bones, squirrels that hide acorns, bees that fill the comb with honey, ants that store up food in the hill. .   . This style of living is called Paleolithic. Its characteristics are: . 1) 1)      limited population group . 2) 2)      no permanent settlements . 3) 3)      social equality . 1. a.       no gender divisions: men and women both committed to search for food 2. b.      no separation of people according to occupation or trade. No hierarchies or social classes as we know of them today. .   . Paleolithic people have left us works of art that depict their lives. These are mainly paintings on the walls of caves. These served religious purposes; they were ways to bring good luck or the blessings of the gods on an up and coming hunt. .   . The change from Paleolithic to Neolithic societies . 1) From hunting to domestication of animals. . Instead of hunting, people learned to keep animals in a pen or pasture. Domestication: to tame something, to take it from the wild to live under the care of humans. Probably started when wounded animals were brought back to camp. It brought a more stable food source .   . 2) From gathering to agriculture . Perhaps the greatest discovery in the course of human history was the discovery of the function of the seed. Every plant has the ability to reproduce. This was probably discovered when some stray gathered seeds grew identical plants. Many historians believe women discovered the reproductive nature of seeds. .   . The Neolithic Revolution . The ability to acquire food on a regular basis drastically changed life: there was more stability and order. Life developed according to special patterns; they had to follow seasons. Religion worshipped reproduction and fertility. Aspects of nomadic life were given up. .   . Food production increase as people learned new ways of producing and storing more food. A surplus of food emerged. Surplus=having more than one needs, extra. .   . Results: . 1) This freed some people from having to spend all their time producing food. They could learn other skills. Artisans made weapons and jewelry. Specialty products could be made that were not available to nomadic people. .   . 2) Surplus of food could be sold or traded with other communities. Neolithic communities came in contact with other communities around them. .   .   .   . Changes of Neolithic Revolution: (Try to categorize these as social, economic, and demographic changes.) .   . 1) Probably the most significant change that took place with the Neolithic revolution was a dramatic increase in population. More food could sustain more people living together. . 2)  people needed to build permanent houses for protection and storing food .   . 3) People began to specialize in certain crafts, social divisions began, laborers/merchants . 4) Gender roles changed. Hunters and gatherers assigned similar roles to men and women. In the Neolithic revolution, the work that produced food became relegated to men, and household chores became the women’s job. Men came to be the dominant gender in society. .   . The Bronze Age . During this age people discovered how to use metals instead of stone. The use of metals (copper + tin = bronze) brought the Neolithic period to an end, although many of the skills learned during that time would continue .   .   . NOTE: The use of metals in early history . We call prehistory the Stone Age because most tools were made from stone. Slowly, early man learned to use copper from the ground. The problem with copper is that it is soft and easily bends; it will not keep a sharp edge. At some point, man learned to mix melted copper with melted tin to produce bronze. This technology (a learned technique or skill) produced a metal that was much more useful than copper or tin alone. Bronze could keep a sharp edge. But it was a technology that had to be learned. .   . The problem with bronze was that it was very brittle and would easily break upon contact with armor, bones or rocks. Soon, man learned to make a superior metal: iron. The production of this metal was more complex than that of bronze. Whereas bronze could be produced on an open fire, such fires were not hot enough to produce iron. Man learned to dramatically increase the temperature of fires by blasting air into the coals. This fed the fire more oxygen than it would get from a normal burn. With such fires, iron could be forged. .   . Weapons made from iron stayed sharp and easily shattered bronze weapons. Armies with iron weapons had a significant advantage over armies using stone or other metals. Because its production required additional technological skills, iron-making skills were kept secret by the Hittites who first learned how to make it. .   .   . Bronze was a hard, durable metal. It made better tools. . 1) Farming: food production drastically increased. This meant that people did not have to move around. They could stay in one place and build permanent homes. Once the problem of the food supply was solved, people could also group together in larger numbers and build cities. This is called urbanization. . 4) 4)      Weapons: Because people grouped together in larger numbers, more security was needed. Cities needed walls and large armies for protection. . 5) 5)      Government: all these changes made it necessary to provide more organization. Questions of “who is in control and will make the final decisions?” had to be answered. Kings emerged. .   . In short, The Bronze Age led directly to the birth of a new form of human organization: Civilization. .   . Civilization . The study of history begins with civilization. This is because civilized man has the ability to write things down, and these written records provide historians with clues about their lives. There are several things that make up civilizations: . 1) cities . 2) governments . 3) religion . 4) social distinctions . 5) artistic expression .   . The first civilizations in the world emerged in river valleys in China, India, Africa, and the Middle East. Here is a brief comparison of the river valley civilizations in Africa and the Middle East. .   . The River Valley Civilizations .   . A surplus of agricultural production led to the rise of complex human societies, or civilizations. With the need of agricultural societies to irrigate, it is not surprising that many civilizations emerged in river valleys. The River Valley civilizations that emerged on the Yellow River (China), the Indus River (India), the Nile River (Egypt), and between the Tigris and Euphrates Rivers (Mesopotamia) made lasting contributions to civilizations. The following chart compares the important features of a few of these river valley civilizations. As you look over this, attempt to piece together what these civilizations have in common and what differentiates them. .   .   .         .   | Egypt | Mesopotamia | Shang | . Geography | Egypt was protected by natural barriers on all sides. The Nile provided the perfect waterway for trade. Also, the Nile flooded each year at about the same time, a fact that gave them a distinct sense of each year’s passing (they created the calendar to predict this). It also naturally fertilized the land and provided for abundant agriculture. Many people attribute the Egyptians’ optimism (eternal life) on the good fortune of its geography. | The Tigris and Euphrates Rivers flooded randomly and violently without much warning, a condition that probably contributed to their pessimistic view of the gods and fatalistic view of life. Also, Mesopotamia had no natural barriers protecting them from enemy neighbors. They were subject to constant invasion. The rivers facilitated trade and allowed some of the cities to grow quite wealthy. | China is geographically isolated. Although the Shang traded with other civilizations, their limited contact with others produced an ethnocentric outlook. They called their land the Middle Kingdom, an assertion that implied that other people were on the periphery of the civilized world. Their land was fertile and supported a surplus of agriculture without complex irrigations systems. | . Political | Egypt was united under one central government. Egyptians believed the king, or Pharaoh, was a god. This helped keep order because people were more inclined to obey the king if he was a god. Religious myths reinforced this belief. The government was strictly centralized and controlled the resources of the state. | Mesopotamian civilization was made up of many independent city-states that never were able to unit. This made them weak and vulnerable to invasion. However, sometimes the people had to unite to build irrigation canals for their agriculture. They developed written laws, the Code of Hammurabi, which was probably made to give unity to an expanding empire. | Most rule was local, consisting of a network of walled towns whose leaders were loyal to the king. These local leaders comprised the bureaucracy, a group of aristocratic chieftains who could be removed at the kings will. | . Society and Economics | Women had more rights than in most early civilizations. There were certain jobs, however, that women were not allowed to do. The most people in Egypt worked in agriculture. The Nile allowed Egyptians to trade with other civilizations and were in turn influenced by them. | The Code Of Hammurabi reinforced patriarchy and social distinctions. A business class of people operated quite independent of government control. Like in Egypt, most people in Mesopotamia were farmers. Certain cities traded and grew rich. We know they traded with Egypt and India. | The family was the most important social institution. Men had most all of the authority. As villages became more productive, social classes became more distinct. | . Religion | The Egyptians were polytheistic. The lineage of the gods extended to the pharaoh himself who had absolute power and was revered as a god. | The Mesopotamians were polytheistic. Each city-state had its own set of god that it worshipped along with a set of wider known gods. They built monuments called ziggurats to their gods. Their gods were often different manifestations of nature and were invoked to help in good harvests. Interestingly, the Sumerians viewed their gods as disinterested in human beings, probably a result of their unfortunate geographical allotment. | The honor and respect given to family elders was related to the worship of ancestors. Dead ancestors were summoned for advice through oracle bones and other means. Thus religion both drew from and reinforced patriarchy. | .   .   . Additional Notes: . The civilization in Mesopotamia, like that in China and Central America, is a rare example of a civilization that developed from scratch with no precedents to borrow from anyone else. | .   . The River Valley civilizations came up with many things we take for granted such as calendars, the wheel, alphabets, bureaucracies, divisions of time into units of 60, and complex mathematical concepts like square roots. | .   . Not all early complex civilizations had written languages (the civilizations of the Incas, for example.) | .   . Civilizations acquire new practices either through cultural diffusion (the Assyrians learned iron technology from the Hittites) or through independent invention (the Chinese bureaucracy). It is a good idea to know some more examples of these two ways. | .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2022/08/23/APWH-Notes-From-Prehistory-to-Rise-of-Civilizations.html",
            "relUrl": "/2022/08/23/APWH-Notes-From-Prehistory-to-Rise-of-Civilizations.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Ap Physics Notes",
            "content": ". AP Physics C: Kinematics Review (Mechanics) . https://www.flippingphysics.com/apc-kinematics-review.html . Dimensions are your friends!!: . | . Be careful with your conversions and give all your answers units (when they have them!). . | | | g . | | 100cm 3 . | | 1kg | | | | | | | | | | . o ρKrypton | = 3.75 | | | | | | = | 0.375 | kg | | | | | | | . | | | | | | | | | | | | | | | | . | | cm | 3 | | | | | | | | | | 3 | | | . | | | | | 1m | | 1000g | | | m | | | | | | . Vector vs. Scalar: . | . Vectors have both magnitude and direction. . | Scalars have magnitude only (no direction) but can be positive or negative. . | | | ! | | | ! | | | | | . | | | = | dx | | | | | | . • | Instantaneous velocity is the derivative of position as a function of time: vinstantaneous . | | | | | | | | | . | | | dt | | | | | | | . | | ! | | | | | | | | . | ! | | | | | | | | | . | | Δx | | | | | | | | . | o Not to be confused with average velocity: vaverage = . | | | | | | | | | . | | Δt | | | | | | ! | | . | | ! | | | | | | | | . | | | | | = | dv | | | | . • | Instantaneous acceleration is the derivative of velocity as a function of time: ainstantaneous . | | | | | | | | | . | | | dt | | | | | | | . | | | | | | | | | | . Not to be confused with average acceleration: . | The derivative represents the slope of the line. . | Uniformly Accelerated Motion or UAM. . | . . AP® Physics C Equation Sheet . . ! . | . = v . | . aaverage Δt . Flipping Physics® . . v x = v x 0 + ax t . . = x 0 + v xot + 12 ax t2 . | x 2 = v x 02 + 2ax (x − x 0 ) . | . v f = v i + aΔt . . Δx = v Δt + 1 aΔt2 . i 2 . . Δx = 12 (v f  + v i )Δt . . The AP Physics C UAM Equations assume ti = 0; Δt = tf − ti = tf − 0 = t . x 0 means the initial position. . | | Free fall is when the only force acting on an object is the Force of Gravity. (No air resistance) . ay = −g = −9.81 sm2 &amp; gEarth = +9.81 sm2 . | This is Uniformly Accelerated Motion where you already know the acceleration! . | | . Free fall graphs of an object dropped from a height of 2.0 meters: . | . . 0194 Lecture Notes - AP Physics C- Kinematics Review (Mechanics).docx page 1 of 2 . Component vectors are the vectors in the x, y (and possibly z) directions that make up a vector. . | . ! | | m . | | | | | | | | | | | . o a = 2.5 | | @26° E of N . | | | | | | | | | | | . | s2 . | | | | | | | | | | | | . | | O | | ax | | = asinθ = 2.5sin (26) =1.09593 ≈ . | | | | | | | . § | sinθ = . | | = | | ⇒ ax . | | 1.1 | m . | | | | | . | | H . | | | | | | 2 | | | | | . | | | | | | a | | | s . | | | | . . cosθ = HA = aay ⇒ ay = acosθ = 2.5cos(26) = 2.24699 ≈ 2.2 sm2 . | . Unit Vectors iˆ, ˆj,and kˆ are vectors with a value of 1 in the x, y, and z directions respectively. o In other words the acceleration in the above example in unit vector form is: . | . . ! . | | ˆ . | ˆ . | | m . | ! | m . | | | . | | | + 2.2 j . | | | This is the same as a = 2.5 s2 @26° E of N . | | | | . a = 1.1i | | s2 | | | | | | | | . Vector addition is much easier using Unit Vectors. Example: . | . ! . | | ˆ | | ˆ | | ! | | | ˆ | | | | | ˆ | | ! | | | | | | ˆ . | | ˆ | | | | | | | | . A = . | | | | | m; B = . | | | | | | | | m; C = . | | | | | | | | | m . | | | | | | | | | | . | 1.00i . | + 2.00 j . | | | | 2.50i | −1.50 j . | | | | 3.00i | + 3.50 j | | | | | | | | | | | | | | | | | | | | . ! . | | ! | ! | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | ! . | | | | | | ˆ | | | ˆ | | | | | | ˆ . | | ˆ | | | | ˆ . | | | ˆ | | | | | | | . R=A+B+C=?= | | | + | | + | | | | | | | + | | | | | | | | | | | | | | | | | | | | . | | 1.00i . | | 2.00 j | | | | 2.50i | −1.50 j . | | | | 3.00i | + 3.50 j . | | | | | | | | | | | | | | | | | | . ! . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | 2.5+3 | | | ˆ | + 2 −1.5 + 3.5 | | ˆ . | | | | ˆ | | | | ˆ | m . | | | | | | | | | | | | | | . ⇒R= 1+ | | i . | | j = 6.50i + 4.00 j | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . r! is generally used as the position vector symbol. This is so you can give the position of an object in 2 (or even 3) dimensions. For example if an object is located -2.0 meters in the x-direction, 7.4 meters in the y-direction and -3.7 meters in the z-direction, we can illustrate its . | . ! | ˆ . | ˆ . | ˆ . | m . . | | | | | . position as r = | −2.0i | + 7.4 j . | + −3.7k . | | | | | | . | | | | | ! | is much shorter than the word description. | | | . o Note: The position vector equation r | | | | | | | | | . | | | | | ! | ! | ! | | . • Relative velocity is simply vector addition. v pE | = v pw | + vwE | | | | | | | . . The velocity of the plane with respect to the Earth equals the velocity of the plane with respect to the wind plus velocity of the wind with respect to the Earth. . | ! + ! . o Don’t forget it’s tip-to-tail vector addition. So v pw vwE are drawn . “tip-to-tail”. . Projectile Motion is when the only force acting on an object is the Force of Gravity and the object is moving in both the x and y directions. (No air resistance) . | . . x direction | y direction . | . ax = 0 | Free-Fall . | . . Constant Velocity . . = Δx . Δt . | | . a = −g = −9.81 m . . y s2 . . Uniformly Accelerated Motion . . Δt (or t) is the same in both directions because it is a scalar and has magnitude only (no direction). . . Break the initial velocity into its components. . | 0194 Lecture Notes - AP Physics C- Kinematics Review (Mechanics).docx page 2 of 2 . . AP Physics C: Dynamics Review (Mechanics) . https://www.flippingphysics.com/apc-dynamics-review.html . Newton’s 1st Law: When viewed from an inertial reference frame, an object at rest will remain at rest and an object in motion will remain at a constant velocity unless acted upon by a net external force. . | . o An inertial reference frame is where the acceleration of the reference frame zero. . o A non-inertial reference frame is where the acceleration of the reference frame is not zero. o Also called the “Law of Inertia”. . Inertia is the tendency of an object to resist acceleration. . | . | ! | ! | ! | ∑ | ! | | ! . | | | . | | | | | F | | F . | | | . • | Newton’s 2nd Law: ∑F | = ma on the equation sheet it is a = | | | = | net . | . | | | . | | | m . | | | | | | | . | | | | | | m . | | | | . Newton’s 3rd Law: F12 = −F21!! . | . ! | ! | kg ⋅ m | | | . •   ∑F | = ma ⇒ newtons, N = | | | | . | | s . | 2 | | . | | | | | . The basic forces with which we begin dynamics: . | . Force of Gravity also called Weight. Fg = mg . The force of gravity is caused by the interaction between the object and the planet. . | The force of gravity is always down. . | The acceleration due to gravity, g, her on planet Earth is +9.81 m/s2. . | Sometimes the symbol is W. . | The force of gravity acts on the center of gravity of the object. (Which is the same as the center of mass in a constant gravitational field like the one we live in.) . | . | Force Normal, FN : A pushing force caused by a surface. . The force normal is normal to (perpendicular to) the surface. . | The force normal is always a push. (Never a pull. A surface can’t “pull”.) . | The force normal acts on the contact point between the two surfaces. . | . | Force of Tension, FT : The force caused by a rope, cable, wire, string, etc. . Always in the direction of the rope, cable, wire, string, etc. . | Always a pull. (Never a push. You can’t “push” with a rope.) . | Sometimes the symbol is T. . | . | Force Applied, Fa : The force of one object pushing or pulling on another object. . | Force of Friction, Ff : The force caused by the interaction between two surfaces. . With regards to the direction of the Force of Friction. Ff always: . is parallel to the surface. . | opposes motion (opposes sliding between the two surfaces) . | is independent of the direction of the Force Applied. . ! . | . | . | General formula on the equation sheet: Ff  ≤ ∝ FN . | Static friction is when the two surfaces do NOT slide relative to one another. . | . | . • . !≤∝! ! F F&amp;F . = ∝s F!N . Kinetic friction is when the two surfaces DO slide relative to one another. . ! . | . Fkf = ∝k FN . | . | . 0195 Lecture Notes - AP Physics C- Dynamics Review (Mechanics).docx page 1 of 3 . !=− ! FR bv . . The coefficient of friction, ∝ , is an experimentally determined, dimensionless number which depends on the materials of the two interacting surfaces. . | . General range is 0 – 2: . However, ∝ can get up to 4 in extreme circumstances. . | ∝s &gt; ∝k (For the same two interacting materials.) . | . | . Free Body Diagrams or Force Diagrams. The five steps are … . Draw the Free Body Diagram(s). . | Break forces in to components. . | Redraw the Free Body Diagram(s). . | Sum the forces. . | Sum the forces (in a direction perpendicular to the direction in step 4). . Only forces are drawn in Free Body Diagrams. . | When on an incline we will often break the force of gravity in to it’s parallel and perpendicular components and sum the forces in the parallel and perpendicular directions. Fg⊥ = mg cosθ &amp; Fg! = mgsinθ . | Always draw the Free Body Diagram without breaking forces into components first and then redraw the Free Body Diagram. These are specific instructions from The AP CollegeBoard! . | When summing the forces you must identify: . Positive directions, especially for pulleys! . | Which object(s) you are summing the forces on. . | Which direction you are summing the forces in. . | . | You can only sum the forces on multiple objects at the same time if they all have the same acceleration. . | . | | . Translational equilibrium. . | . Translational motion simply means moving from one location to another. . | ! . o Translational Equilibrium means the net force acting on the object is zero, ∑F = 0 . . An object in translational equilibrium is not accelerating. . | § . * | . ! . ∑F = 0 = ma! ⇒ a! = 0 . . The object moves with a constant velocity or is at rest. . | . The Drag Force or the Resistive Force, FR : The force caused by the interaction of an object and the fluid the object is moving through. . | . o Sometimes the symbol is R or FD . . Opposite the direction of motion of the object. . | o For “small” objects moving at “slow” speeds, . The resistive force equals the negative of, b, the proportionality constant times the velocity of the object. . | . ! | = | 1 | Dρ Av . | 2 | | | . o For all other objects (and more generally applicable), FR | | | | | . | | . | | 2 | | | | | . D is the Drag Coefficient of the object, has no dimensions, is experimentally determined, and depends on the shape and surface texture of the object. . | ρ is the density of the medium through which the object is moving. . | A is the cross sectional area of the object normal to the direction of motion. . | v is the velocity of the object. . | . 0195 Lecture Notes - AP Physics C- Dynamics Review (Mechanics).docx page 2 of 3 . Terminal velocity is when an object moving through a fluid has reached translational equilibrium. Force example an object which is falling downward in the Earth’s atmosphere has a free body diagram with the force of gravity down and the resistive force up. . | . | | | | 1 | | | 1 | Dρ Av . | 2 | − mg . | | Dρ Av2 | | | | | . o  ∑Fy | = FR − Fg . | = may . | ⇒ . | | Dρ Av2 . | − mg = may ⇒ ay . | = | | 2 | | | | = | | − g . | | . | | | | 2 | | | | | | m | | | 2m | | | | . | | | | | | | | | | | | | | | | | . . In other words, in the absence of air resistance, ay = −g !!! . | . | Dρ Av2 | Dρ Av2 | | | 2mg . | | | | . o With ay = 0 ⇒ 0 = | | − g ⇒ . | | = g ⇒ . | vterminal = . | | | | . | 2m | | 2m | | | Dρ A . | | | . . Note: This equation is only true for “an object which is falling downward in the Earth’s atmosphere”. A rocket moving upward will have a different equation for terminal velocity because the free body diagram is different. . | 0195 Lecture Notes - AP Physics C- Dynamics Review (Mechanics).docx page 3 of 3 . . AP Physics C: Work, Energy, and Power Review (Mechanics) . https://www.flippingphysics.com/apc-work-energy-power-review.html . • | ! | ! | = F Δr cosθ . | | . | Work done by a constant force: W = F iΔr | | | | . Work is the dot product of Force and the displacement of the object. . The dot product is also called the scalar product, because it is a scalar. . | W ⇒ joules, J = N ⋅ m = kg ⋅ m m . | . | s2 . | ! | | ˆ | ˆ | and | ! | | ˆ . | | | | . o Example: F = 2.7i | − 3.1j N | | Δr | = 4.6i m then (include drawing) . | | | | | | | | . ! | ! | | ˆ | ˆ | ˆ . | | ˆ | = (2.7)(4.6)+ (−3.1)(0)= 12.42 . | ≈ . | | | . | | | | | | | | | | 12 J . | | . | | | | | | | | | | | | . W = F i Δr | = 2.7i | − 3.1j i | 4.6i | + 0 j | | | | | | | | . Work done by a non-constant force: W = ∫x if Fx dxx . This is a definite integral. . “Definite” simply means it has limits xi and xf. . | Integral, or anti-derivative is the area “under” the curve. . Area “under” the curve specifically means the area between the curve and the horizontal axis where area above the horizontal axis is positive and area below the horizontal axis is negative. . | . | . | | . Notice we now have two different equations for work, one for work done by a constant force and one fore work done by a force that varies. This will happen very often in AP Physics C and you need to be careful to identify the difference. . | . • . The force caused by a spring: . ! = − Fs k . Δ!x . k is the “spring constant” and is a measure of how much force is takes to compress or expand a spring per meter. . | Δx is the displacement of the spring from equilibrium position (or rest position). . | The negative means the force of the spring is opposite the direction of the displacement of the spring. . | | | x . | | | | x . | | | | | | | kx | 2 | x f . | | | | kx . | f | 2 | | kx | i | 2 | | | | | | | | . • WFs | = ∫x . | | f Fs dx = ∫x | | f (− kx | )dx = | − | | | | | | = | − | | | | | − | − . | | | | | | | | | | | | | . | | i | | | | | | | | | | | | | 2 | | | | | 2 | | | | | | | | | | | | | . | | | | | | | | i | | | | | 2 | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | x i . | | | | | | | | | | | | | | | . | | | | kx . | 2 | | | kx | 2 | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | f | | | | i | | | | | | | | | | | | | | | | | | | | | | | | . ⇒ WFs . | = − | | | | | − | | | | | | − Uei . | | = −ΔUe | | ⇒ | WFs  = −ΔUe | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | 2 | | | | 2 | | | = − Uef | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . We have defined elastic potential energy: Ue = 12 kx 2 . . | The above example shows the work done by the force of the spring equals the negative . | of the change in elastic potential energy of the spring. . x . | | . •   ∑W = ∫x i | f ∑F dx ⇒ ∑W = ΔKE The Net Work – Kinetic Energy Theorem. | . Derivation is here: http://www.flippingphysics.com/wnet-ke.html o This equation is always true. . | This equation is where kinetic energy is defined: KE = 12 mv 2 . | 0196 Lecture Notes - AP Physics C- Work, Energy, and Power Review (Mechanics).docx page 1 of 3 . Gravitational Potential Energy in a constant gravitational field is: Ug = mgh . | . h is the “vertical height above the horizontal zero line” and you have to always identify the horizontal zero line. . If you prefer the equation from the AP sheet, it is: ΔUg = mgΔh . The AP equation is the “change in” gravitational potential energy. . | . | | Energy can be neither created nor destroyed, so in a non-isolated system the change in energy of the system equals the sum of the energy transferred to or from the system: ΔEsystem = ∑T . If the system is isolated, no energy is transferred into or out of the system: ΔEsystem = 0 . The change in energy of the system is the change in mechanical energy of the system plus the change in internal energy of the system. ΔME + ΔEinternal = 0 . | The change in internal energy of the system is done by nonconservative forces or friction. In other words, the energy which is dissipated by friction goes into the system as internal energy. ΔEinternal = −Wnc . A nonconservative force is a force where the work done by the force is dependent on the path taken by the object. Conservative forces are where the work done by the force is not dependent on the path taken by the object. . | . | In other words: ΔME −Wnc = 0 ⇒Wnc = ΔME and because I don’t know of any forces which are nonconservative which are not friction: . | Wfriction = ΔME (is only true when there is no energy transferred into our out of . | . | | . the system.) . If the system is isolated and there is no work done by friction: . Wfriction = ΔME ⇒ 0 = ΔME = MEf − MEi ⇒ MEi = MEf . | We have conservation of mechanical energy. . | Which is only true when the system is isolated and no work is done by friction. . | . | Whenever you use Wfriction = ΔME or MEi = MEf you have to identify the initial point, the final point and the horizontal zero line. . | All forms of Mechanical Energy are in terms of joules, just like Work. . | . • Power is the rate at which work is done: P | = | W | | &amp; P | = | dW | | | | | | | | . | | Δt | | | | dt | | | | | | | | . | | | | | | average . | | | | instantaneous | | | | . | dW | | d . | ! | ! | | ! . | | ! ! | | | | | . | | | | | | | dΔr | | | | | | | . o Pinstantaneous = . | | = | | (F i Δr | ) = F i . | | | = F i v | | | | | | . | dt | | dt . | | | dt | | | | | | | | . Note: Force must be constant to use this equation. . | .         .   | dE | ! ! |   | . o The equations for power on the AP sheet are: P = |   | &amp; P = F i v |   | .   | dt |   |   | . o P ⇒Watts = sJ &amp; 746watts = 1hp . . • Remember, every derivative is also an antiderivative (or an integral). For example: . o | P = . | dW | ⇒ dW = P dt ⇒ ∫WWf dW = ∫ttf P dt ⇒ ΔW = ∫ttf P dt . | | | | . | | dt | | | | | . | | | i . | i . | i . | | . 0196 Lecture Notes - AP Physics C- Work, Energy, and Power Review (Mechanics).docx page 2 of 3 . • The equation which relates conservative forces and potential energy is: F | | = − . | dU | (and it is not . | | . | x | | dx . | | | . | | | | | | . on the AP equation sheet.) . | | | | | | . | | | | | | . Aside: Much of the time when the phrase “conservative force” is used on the AP Exam, you need to use this equation. . | o For a spring: Fs = − | dU | e . | = − . | d 1 | kx . | 2 | | = − kx . | | | | . | | | | | | | | | | | | . | | | | | | 2 | | | | | | . | dx . | dx | | | | | | | | | | . For gravity: Fg = − dUdyg  = − dyd (mgy ) = −mg (Force of gravity is always down) . | Neutral Equilibrium is where the Potential Energy of the object remains constant regardless of position. For example, a ball rolling on a level surface. . | Stable Equilibrium is where the Potential Energy of the object increases as the position of the object moves away from the equilibrium position and therefore the object naturally returns to the equilibrium position. For example, a water bottle being tipped to the side. . | Unstable Equilibrium is where the Potential Energy of the object decreases as the position of the object moves away from the equilibrium position and therefore the object naturally moves away from the equilibrium position. For example, a marker being tipped to the side. . | . . 0196 Lecture Notes - AP Physics C- Work, Energy, and Power Review (Mechanics).docx page 3 of 3 . . AP Physics C: Integrals in Kinematics Review (Mechanics) . https://www.flippingphysics.com/apc-integrals-kinematics-review.html . To be reviewed after students learn about integrals!! . FYI: I do not teach integrals until we get to Work. By then the students who are taking calculus concurrently with AP Physics C Mechanics have had enough experience with derivatives that they only freak out a little bit when I teach them integrals. J . | Remember, every derivative is also an antiderivative (or an integral). For example: . | . | dv . | v f . | tf . | | v f | tf . | | | . o a = dt ⇒ dv = adt ⇒ ∫v i | dv = ∫ti . | | | = v f − v i  = Δv = ∫ti . | adt . | | | | . | | adt ⇒ v v i | | | | | | | . The area “under” an acceleration as a function of time graph is the change in velocity of the object. . Remember the area “under” the curve specifically means the area between the curve and the horizontal axis where area above the horizontal axis is positive and area below the horizontal axis is negative. . | . | Another Example: . | . | dx | x f . | tf . | | x f | tf . | | | . o v = dt ⇒ dx = v dt ⇒ ∫x i | dx = ∫ti . | | | = x f − x i  = Δx = ∫ti . | v dt . | | | | . | | v dt ⇒ x x i | | | | | | | . The area “under” an velocity as a function of time graph is the change in position of the object or the displacement of the object. . | Graphs of throwing a ball upward with a positive velocity initial. . v = dxdt à Velocity is the slope of a position vs. time graph. . | | . a = dvdt à Acceleration is the slope of a velocity vs. time graph. . | Δv = ∫tif adt à Change in velocity is the area “under” an acceleration as a function oft . | time graph. . Δx = ∫tif v dt à Change in position or displacement, is the area “under” a velocity as a function of time graph.t . | . 0197 Lecture Notes - AP Physics C- Integrals in Kinematics Review (Mechanics).docx page 1 of 2 . Assuming the acceleration is constant, we can derive two of the Uniformly Accelerated Motion equations. For example: . | . a = dvdt ⇒ dv = adt ⇒ ∫dv = ∫adt ⇒ v (t ) = at + C . ⇒ v (0) = a(0)+ C ⇒ v (0) = C = v i ⇒ v (t ) = at + v i ⇒ v f  = v i + at . | | Another example: . v = dxdt ⇒ dx = v dt ⇒ ∫dx = ∫v dt ⇒ x (t ) = ∫(v i + at )dt = v it + 12 at2 + C . | ⇒ x (0) = v i (0)+ 12 a(0)2 + C ⇒ x (0) = C = x i ⇒ x (t ) = x i + v it + 12 at2 . | | . 0197 Lecture Notes - AP Physics C- Integrals in Kinematics Review (Mechanics).docx page 2 of 2 . . AP Physics C: Momentum, Impulse, Collisions &amp; Center of Mass Review (Mechanics) . https://www.flippingphysics.com/apc-momentum-impulse-review.html . The symbol for momentum is a lowercase p. p! = mv! o Momentum is a vector! . | . ! | ! | | kg ⋅ m | | kg ⋅ m | | | . o p = mv | ⇒ . | | (not to be confused with Newtons which are . | | ) | | | . | | s | | s2 | | | | . Newton’s 2nd law in terms of momentum is: ∑F = ddtp!! . | . . | ! . | | ! | | | | d | ! | | | dm . | ! . | | | ! . | | | | . | | | dp . | | | | | | | | | | | dv . | | | | | . • | ∑F . | = | | = | | | (mv ) = . | | | | v . | + m | | | (the product rule) . | | | | . | | | dt . | | | dt | | | dt . | | | dt . | | | | | | | . | | | | | | | | | | | | | | | | | | | . | | | | | | ! | | dm ! | | | | ! . | | | | | | | . | o . | | ⇒ ∑F . | = . | | v . | + ma (Usually we assume the mass of the object does not change.) . | | | | | | | | | | | | . | | | | | dt | | | | | | | | | | | | | | . | ! . | | | | | ! | | | | ! | | | ! | | | | | | . | | | | | dp . | | | | | | | | | | | | | | . • | ∑Fexternal  = . | | | | = 0 ⇒ ∑pi . | =∑pf | : When all the forces are internal to the system, the net . | | | | | | | | | | | | . | | | dt | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | . force equals zero, the derivative of momentum as a function of time is zero, therefore the momentum does not change, therefore momentum is conserved. . Momentum is conserved during collisions and explosions. . | | ! | | ! | ! | ! | tf . | ! | pf . | ! ! | ! | ! | tf . | ! | ! | | . | | | dp . | | | | | | | | | | | | | . • | Impulse derivation: ∑F | = | | ⇒ ∑Fdt = dp ⇒ ∫∑F dt = ∫ dp = pf | − pi | ⇒ Δp = ∫∑F dt = J | | | | | | | | | | . | | | dt . | | | | | | | | | | | | | . | | | | | | ti . | | pi . | | | | ti . | | | | . Symbol for Impulse is J and it is a vector. . | ! | tf . | ! | kg ⋅ m | | | . o Units for Impulse: J | = ∫∑F dt ⇒ N ⋅ s (yes, this is the same as momentum: . | | ) | | | . | | s | | | | . | ti . | | | | | . N ⋅ s = kg ⋅ m s = kg ⋅ m . | . s2s . Impulse is the area “under” a force as a function of time curve. . | Not to be confused with the equation for work: W = ∫x if Fx dxx . | . ! | ! | | | | | . o Impulse approximation says ∑F | ≈ Fimpact | | ! | | | . | | ! | | | | . | | | = | dp . | | . § Therefore, the impulse approximation says: | F | | | | | . | | | | | | . | | impact . | | dt . | | . | | | | | | . § Impulse, J, and Impact Force often get confused. Please note they are different! . o Can also use the average force and change in time to determine Impulse: . ! ! . J = FaverageΔt . § . This creates a rectangle with the same area as . ! . J = . tf ! . ∫ ∑F dt . ti . . Elastic . . Inelastic . . Yes . . Yes . . Yes . . No . . 0198 Lecture Notes - AP Physics C- Momentum, Impulse, Collisions and Center of Mass Review (Mechanics).docx page 1 of 2 . Collisions between hard spheres are “nearly” elastic and therefore are generally considered to be elastic in physics classes. . | “Perfectly Inelastic” Collisions are where the objects stick to one another. Sometimes they are called “Completely Inelastic” or “Totally Inelastic”. These terms all mean the . | same thing. . Most collisions are actually Inelastic. . | • Center of mass of a system of particles: x | | = | ∑mi x i | = | m1 x1 + m2 x2 + ... . | | | | | . | cm . | | ∑mi | | m1 . | + m2 . | +... | | | . | | | | | | | | | | . x is the distance from a zero reference line; usually the origin. . | o . | Velocity of a system of particles: vcm . | = . | dx cm | = | d . | | ∑ mi x i . | = | | ∑ mi | | dx i | | = | ∑ miv i | | | | | | | | | | . | | | | | | | | | | | | | | ∑ mi | | dt . | | ∑ mi | | | | | | | . | | | | | dt | | | dt   ∑ mi | | | | | | | | | | | | | | | | | . o . | Do the same thing with acceleration: . | acm . | = | dvcm | = | d . | | ∑ miv i . | | = | ∑ miai . | | | | | | | | | | | | | | . | | | | | | | | | | | ∑ mi | | | | | | | | | | | | | | . | | | | | | | dt | | | | dt   ∑ mi . | | | | | | | | | | | | | | . • Center of mass of an object with shape: rcm = | 1 | | ∫ r dm (not on AP equation sheet) | | | | | | | | | | | | | | | | | | | | | | . | mtotal | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | . The position of the center of mass of an object with shape equals one over the total mass of the object times the integral with respect to mass of the posotion of all of the infinitesimally small pieces of the object, which are called dm, relative to a zero-reference line. . | o If you prefer: x cm = | 1 | ∫ x dm . | | . | mtotal | | | . | | | | . Volumetric Mass Density: ρ = m∀ (not on AP equation sheet) . | Surface Mass Density: σ = mA (not on AP equation sheet) . | Linear Mass Density: λ = mL (not on AP equation sheet) . | . 0198 Lecture Notes - AP Physics C- Momentum, Impulse, Collisions and Center of Mass Review (Mechanics).docx page 2 of 2 . . AP Physics C: Rotational Kinematics Review (Mechanics) . https://www.flippingphysics.com/apc-rotational-kinematics-review.html . | ! | | ! | ! | | ! | rad . | | rev | | | | . | | | Δθ | | | dθ | | | | | | | . • | Angular velocity: ωaverage | = | | &amp; ωinstantaneous | = | | | | or . | | | | . | | | Δt | | | dt . | | s . | | | | | . | | | | | | | | | | min | | | . | ! | | ! | ! | | ! | rad . | | | | | . | | | Δω | | | dω | | | | | | . • | Angular acceleration: αaverage | = | | &amp; αinstantaneous | = | | | | | | | . | | | Δt | | | dt | | s . | 2 | | | . | | | | | | | | | | | | . Uniformly Angularly Accelerated Motion: Uα M (when α = constant = # ) . | . 5 variables, 4 equations, If you know 3 variables, you can find the other 2, which leaves you with 1 … . | o ωf   = ωi  + αΔt ; Δθ = ωi Δt + | 1 | αΔt 2 ; . | ωf2 = ωi2 + 2αΔθ ; . | Δθ = . | 1 | (ωi . | + ωf  )Δt . | | . | | | | | | | | | . | 2 | | | | 2 | | | | . Arc length, s, is the linear distance travelled when moving along a circle or part of a circle. In other words it is the linear length when traveling along an arc. . | . o s = rΔθ : arc length equals the radius of the object times the angular displacement of the object. . Must use radians when using this equation. . | 1 revolution = 360° = 2π radians . | The equation for circumference is an example of this equation where the angular displacement is one revolution or 2π radians: C = r (2π ) . | Arc length is a linear dimension, so its units are linear: meters, etc. . | Not on equation sheet . | I use a lowercase cursive for arc length, because my s looks like a 5. Sorry. . | . s = rΔθ ⇒ dtd (s = rΔθ ) ⇒ dsdt = r ddtθ ⇒ vt  = rω (is on the AP equation sheet) . | vt  = rω ⇒ dtd (vt  = rω ) ⇒ dvdtt  = r ddtω ⇒ at  = rα (not on the AP equation sheet) . | . . Both of these equations assume the radius stays constant. o Must use radians when using both of these equations. . | vt . | at . | m . is tangential velocity, or the linear velocity of an object moving in a circle. . s . is tangential acceleration, or the linear acceleration of an object moving in a circle. . m . s2 . Both tangential quantities are tangent to the circle the object is moving along. This also means they are perpendicular to the radius of the circle the object is moving along. . | . Uniform Circular Motion is where objects move in a circle with an angular acceleration of zero. . | . α = 0 (The symbol for angular acceleration is alpha, α .) . | Even though the magnitude of the object’s velocity does not change, the direction of the velocity does, that means the velocity is not constant, therefore there must be an acceleration. The acceleration responsible for this change in the direction of the velocity is called centripetal acceleration, ac. . | 0199 Lecture Notes - AP Physics C- Rotational Kinematics Review (Mechanics).docx page 1 of 2 . | ac  = . | v 2 | = rω . | 2 | | m | | | | . o | | t | | | in . | | | | | . | | r | | | | | 2 | | | . | | | | | s . | | | | | . Centripetal means “center seeking” because the centripetal acceleration is always toward the center of the circle the objects path describes. . | According to Newton’s 2nd law, where there is an acceleration, there must be a net force. Therefore, if an object is moving in a circle, there is a centripetal acceleration and there must be a centripetal force. . Centripetal force: ∑Fin = mac . | | . Centripetal force is the net force in the in direction. . It is not a new force. . | It is never in a free body diagram . | The “in” direction is positive. (The “out” direction is negative.) . | . See “conical pendulum” example from AP Physics 1 Kinematics Review. . | | Non-Uniform Circular Motion will have an angular acceleration which is nonzero. α ≠ 0 . This means there will also be a tangential acceleration, at, which is parallel to the tangential velocity and normal to the centripetal acceleration. . | | .       . ! | ! | ! | . o The net acceleration of an object in Non-Uniform Circular Motion is: anet | = ac | + at | . The period, T, of an object moving in a circle is the time it takes for one revolution. Therefore: o ω = ΔΔθt = 2Tπ ⇒ T = 2ωπ : Period is in seconds . | . . 0199 Lecture Notes - AP Physics C- Rotational Kinematics Review (Mechanics).docx page 2 of 2 . . AP Physics C: Rotational Dynamics Review – 1 of 2 (Mechanics) . https://www.flippingphysics.com/apc-rotational-dynamics-1-review.html . A rigid object with shape is rotating. Every piece of this object has kinetic energy. The total kinetic energy is the sum of all of the kinetic energies of every small piece of the object: . | . KEt  = ∑i KEi  = ∑i 12 mi (vi )2 = ∑i 12 mi (riωi )2 = ∑i 12 mi ri2ωi2 = 12 (∑i mi ri2 )ω2 = 12 Iω2 . This uses vt  = rω and that every part of the object has the same angular velocity, ω . KErotational = 12 Iω2 : Rotational Kinetic Energy of a rigid object with shape or a system of particles that is not changing shape. . | | I = ∑i mi ri2 where I is called the Moment of Inertia or “Rotational Mass”. . This is the Moment of Inertia for a system of particles. . | Units for Moment of Inertia: I = ∑i mi ri2 ⇒ kg ⋅ m2 . | | . Moment of Inertia for a rigid object with shape: I = limΔm→0 ∑ri2Δmi ⇒ I = ∫r 2 dm . Not to be confused with the equation for the center of mass of a rigid object with shape: . | | . rcm = | 1 | ∫ r dm . | | . | mtotal | | | . | | | | . Deriving the Moment of Inertia of a Uniform Thin Hoop about its Cylindrical Axis o Iz = ∫ r2 dm = R2 ∫dm = R2 m ⇒ Icm = mR2 . | . o “Thin” means all of the dm’s are located a distance R from the center of mass. o “Uniform” means the hoop is of a constant density. . o “Cylindrical Axis” means the line through the center of the hoop and normal to the plane of the hoop. . Deriving the Moment of Inertia of a Uniform Rigid Rod about its Center of Mass . | . . λ = mL = dmdx ⇒ dm = λ dx ⇒ dm = mL dx . m is the total mass of the rod . | L is the total length of the rod . | λ is the linear mass density of the rod, which is constant in this “uniform” rod. . | . | | | | | | | | | L . | | | . | 2 | | 2 m | m 2 . | | | | | | | . o Iy = ∫ r | | dm = ∫ r . | | | dx = . | | ∫ . | | | | . | | | | L . | | L . | | | | | . | | | | | | | − . | L . | | | . | | | | | | | | 2 . | | | . | | | | | | | | | | | . L . x2 dx = m x3 2 L3−2L . . | | | L 3 | | | | | L | 3 | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | − | | | | | | | m | 3 | | 3 | | | m | 3 | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | 1 | | | | | | . o ⇒ Iy = | m | 2 | − . | | | | 2 | | | = | | L | + | L | | = | | 2L | | = | | 2 | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | mL | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | 12 | | | | . | L | | 3 | | | | 3 | | | | | L | 24 | | 24 | | | L | 24 | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . 0200 Lecture Notes - AP Physics C- Rotational Dynamics Review - 1 of 2 (Mechanics).docx page 1 of 3 . Deriving the Moment of Inertia of a Uniform Rigid Rod about one end o This is the same as before, only with different limits … . | . . | | | m L | | | m x3 L . | m L3 . | | | | | | | | | | | . | | | | 2 | | | | | | 1 | 2 | | | | | | | . o | Iy . | = | | ∫ x | dx ⇒ . | | | | = . | | | | = | | | mL | | . | | | L . | | | | | 3 | | L 3 . | | | 3 | | | | | . | | | | 0 | | | L | | 0 . | | | | | | | | | . | | | | | | | | | | | | | | | | | | . The Parallel-Axis Theorem: I = Icm + mD2 . | . Only true for objects with constant density. . | m is the total mass of the rigid, constant density object. . D is the distance from the center of mass of the object to the new axis of rotation. . | Not on the AP equation sheet. . | | Example: Moment of Inertia of a Uniform Rigid Rod about its end. . Known for Uniform Rigid Rod: Icm = 121 mL2 . | | . .                                                                 .   |   |   | 1 |   | L 2 |   | 1 |   |   | 1 |   | 1 |   |   | 3 |   |   | 4 |   |   |   |   |   |   |   |   |   |   |   |   |   | .   | 2 |   |   | 2 |   |   |   | 2 |   |   | 2 |   |   |   |   | 2 |   |   | 2 |   |   | 1 | 2 |   |   |   |   |   |   |   |   | . Iend = Icm + mD |   | = |   |   | mL | + m |   |   | = |   |   | mL | + |   | mL | = |   |   | + |   |   | mL | = |   |   | mL | = |   |   | mL |   | .   |   |   | 12 |   |   |   |   |   | 12 |   |   | 4 |   |   | 12 |   | 12 |   |   | 12 |   |   |   | 3 |   |   |   |   |   |   |   | .   |   |   |   |   |   | 2 |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | . Example: Moment of Inertia of a Uniform Thin Hoop about its Rim. . | . Known for Uniform Thin Hoop about its Center of Mass: Icm = mR2 . | . Irim = Icm + mD2  = mR2 + mR2  = 2mR2 . | Torque: τ = rF sinθ . This is the magnitude of the torque. Torque is a vector. . | | . . r is the distance from the axis of rotation to the location on the object the force is applied. . | F is the magnitude of the force. o θ is the angle between r and F. . | sinθ = OH = dr ⇒ d = r sinθ is the “moment arm” or . | “lever arm” or “effective distance” . Units for torque are N ⋅ m . Not to be confused with the units for energy, joules, even though joules are also . | . ⋅ m. . | | But “What is torque?” Torque is the rotational equivalent of force. Force is the ability to cause an acceleration of an object. Torque is the ability of a force to cause an angular acceleration of an object. . | . • . The rotational form of Newton’s Second Law: . ∑ ! ! ∑! !F=ma⇒τ=Iα . Must identify axis of rotation when summing the torques. o Must identify what objects you are summing the torque on. . | Note: The angular acceleration of each object around the axis of rotation must be the same. . | . Must identify the direction of positive rotation. . Now that we have defined Moment of Inertia, pulleys can have mass. When pulleys have mass the force of tension on either side of a pulley are not the same! . | | Right Hand Rule for direction of torque . Don’t be too cool for the right hand rule. Limber Up! . | | . Use your right hand. . | Fingers start at the axis of rotation. o Point fingers along direction of “r”. . | o Curl fingers along the direction of “F”. . Thumb points in the direction of the torque. . | 0200 Lecture Notes - AP Physics C- Rotational Dynamics Review - 1 of 2 (Mechanics).docx page 2 of 3 . Rolling Without Slipping: vcm = Rω &amp; acm = Rα . | . Just like vt  = rω &amp; at  = rα only … . R is the radius of the solid object . | These are for the center of mass of the object, not the tangential quantities. o Neither of these are on the AP equation sheet. . | . | FYI: Rolling With Slipping: vcm ≠ Rω &amp; acm ≠ Rα . | When an object is rolling without slipping it has both translational and rotational kinetic energies!! . | 0200 Lecture Notes - AP Physics C- Rotational Dynamics Review - 1 of 2 (Mechanics).docx page 3 of 3 . . AP Physics C: Rotational Dynamics Review – 2 of 2 (Mechanics) . https://www.flippingphysics.com/apc-rotational-dynamics-2-review.html . τ!=!× !≠ !×! . • r F F r . ! . Torque is the cross product (also called the vector product) of r! &amp; F . . Torque is a vector! . | . | ! . o r! is the position vector from the axis of rotation to the location of the force, F . . o Magnitude of torque à τ = rF sinθ . ! ! ! ! . o The order does matter! ( A × B = −B × A ) . ! . Cross product is the area of the parallelogram with sides r! &amp; F . . | • | ! | ˆ . | ˆ . | ˆ . | ! | ˆ . | ˆ . | ˆ . | | . | In case you forgot how to do the cross product. Example: A = −i . | + j . | − 2k . | &amp; B = 2i . | − 3 j . | + 4k . | | | | . . | ˆ | ˆ . | ˆ | | . ! ! | i | j . | k | | . | −1 | 1 | −2 | | . A×B= | | | | | . | 2 | −3 | 4 | | . | | | | | . = . . −2 . | −3 4 . − . | . i . . −1 −2 2 4 . + . | . j . . −1 1 . −3 . | ˆ . . k . ! | ! | | ()()( . | | )( | | ) | ˆ . | | ( . | )()( )() | ˆ . | | ( . | )( ) ()() | ˆ | | | | | | | | | | | | | | . ⇒A×B= | | 14−−2 . | | −3 | | | | − . | | −1 4 . | −−22 . | | | + | | −1−3−12 . | | | | | | | | | | | | | | . | | | | | | | i . | | | | | | j . | | | | | k | | | | | | | | | | | | . ! | ! | | | | | ˆ . | | | | | | | ˆ | | | | ˆ . | | | | | | | | | | | | | . | | = | 4 − 6 . | | | − −4 | + 4 . | | | + | | | | = . | ˆ . | | ˆ | | | | | | | | | | | | | . ⇒A×B | | | i . | | | j | | 3 − 2 k | | −2i | + k . | | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | . An object is in Translational Equilibrium if the net force acting on it equals zero, which means the . | . ∑!= = !⇒!= . object is not accelerating: F 0 ma a 0 . An object is in Rotational Equilibrium if the net torque acting on it equals zero, which means the . | . ∑! ! ! . object is not angularly accelerating: τ = 0 = Iα ⇒α = 0 (must identify axis of rotation) . This means the object is either not rotating or has a constant angular velocity. . | If an object is in translational equilibrium and in rotational equilibrium about one axis of rotation, then the object is in rotational equilibrium about any axis of rotation. . | L is Angular Momentum and it is a vector!! . | . ! | ! | !! | ! | | ! | ! | ! | | | | | . | | | | | dp . | | dL | | | | | . o   ∑F . | = ma ⇒ ∑τ = Iα | &amp; ∑F | = | | ⇒∑τ = | | | | | | | . | | | | dt . | | dt . | | | | | | . | | | | | | | | | | | | . • For a particle or any object which is not rotating: | | ! | ! | ! | | | | | | | | . | | | | | | | | | | | | . o Just like torque, we have a cross product equation for angular momentum: L . | = r | × p | | | | | | | | | | . r is the position vector from the axis of rotation to the location of the center of mass of the moving object. . | And a magnitude equation for angular momentum: L = rmv sinθ . | . With this equation, need to use Right Hand Rule to find direction. . | . Yes, a particle or a rigid object which is not rotating can have an angular momentum! . | • . | ! . | ! | | | | | | | | | | | | | | | | | | | | . | For a rigid object with shape: L . | = Iω | | | | | | | | | | | | | | | | | | | | . | | ! | ! | 2 | rad | | | kg ⋅ m2 ⋅ rad | | | kg ⋅ m2 | | | | | | | | | | | . | o Units for angular momentum: L . | = Iω ⇒ (kg ⋅ m | | ) | | | | | | | = . | | | | | = | | | | | | . | | | | | | | | | | | | | s . | | | | | s . | | | | . | | | | | | | s | | | | | | | | | | | | | | | . | | | ! | | | | | ! | | | | ! . | | | ! | | | | | | | . | | | | | | | dp | | | | | | | | | | | | | | | . • . | Derivation of conservation of linear momentum: ∑Fexternal = . | | | | | | = 0 | ⇒ ∑pi . | = ∑pf . | | | | | | | | | | | | | . | | | dt . | | | | | | | | | | | | | | | | | | | . | | | | | | | | ! | | | | ! | | | | ! . | | | | | | . | | | ! | | | | | | | | | | | | | | | | | | | . | | | | | | | | | dL | | | | | | | | | | | | | . • . | Derivation of conservation of angular momentum: ∑τ external . | = . | | | | | = 0 ⇒ ∑Li . | = ∑Lf . | | | | | | | | | | | | | | . | | | | dt | | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | . 0201 Lecture Notes - AP Physics C- Rotational Dynamics Review - 2 of 2 (Mechanics).docx | | | | | | | | | page 1 of 2 . | | | | | | | | | | | | | . Note the similarities between the two, please. . Remember net torque requires the axis of rotation to be identified, which means the axis of rotation needs to be identified for conservation of angular momentum . | | Conservation of Angular Momentum Example: A piece of gum with mass, m, and velocity, v, is spat at a solid cylinder of mass, M, radius, R, and moment of inertia 12 MR2 . The cylinder is on a horizontal axis through its center of mass and is initially at rest. The line of action of the gum is located horizontally a height, y, above the axis of the cylinder. If the gum sticks to the cylinder, what is the final angular velocity of the gum/cylinder system? The Drawing!! . | . o | Gum knowns: m = mg ,v = vgi . | Cylinder knowns: M = mc,ωic = 0,R,Ic | = | 1 | mc R . | 2 | | | | | | | | | | | | . | | | | 2 | | | | | | | | | | | | | | . o | Solving for ωf . | = ? (will be the same for both gum and cylinder) . | | | | | | | | | | | | | | | | . | | | | | | | | | ! | ! | | | | | | | | . | | | | | | | | | | dL | | | | | | | | . o | Know angular momentum is conserved because: ∑τ external  = . | | =0 | | | | | | | | | | | | | | | . | | dt . | | | | | | | | | | | | | | | | . | ! . | ! | ! . | ! | ! | ! | | | | | | | | | | | | . | | | | | | | = rgf mgvgf | sinθgf | + Icωf | | | | | | | | | . o | ∑Li  = ∑Lf . | ⇒ Lgi . | + Lci | = Lgf | + Lcf ⇒ rgi mgvgi sinθgi + 0 | | | | | | | | | | | | | . | | O | | y . | | | | | | | | | | | | | | . o | sinθgi = . | | = | | ⇒ y = rgi sinθgi ⇒ ymgvgi = rgf mgvgf sinθgf + Icωf . | | | | | | | | | | | | | . | | H . | | r . | | | | | | | | | | | | | | . | | | | | gi . | | | | | | | | | | | | | . vgf  = vt = Rωf ⇒ ymgvgi = Rmg Rωf sin90 + 12 mc R2ωf . | | | | | m | | | | | | ym v . | gi | | | | | . o | ⇒ ymgvgi . | = R2ωf mg . | + | c | | ⇒ . | ωf . | = | | g . | | | | | | . | | | | 2 | | | | | | | | m | | | | . | | | | | | | | 2 | | | | | | | | . | | | | | | | | | R | mg + . | | c | | | | . | | | | | | | | | | | 2 | | | | | . | | | | | | | | | | | | | | | | . FYI: Sawdog, one of my Quality Control Team members, pointed out that, after colliding with the cylinder, the gum is moving in a circle, so it’s angular momentum can be described using Igωf . More specifically: . ! = ω=( 2)ω = 2ω . Lgf Ig f mg rg f mg R f It’s a slightly different solution that results in the same answer. . . 0201 Lecture Notes - AP Physics C- Rotational Dynamics Review - 2 of 2 (Mechanics).docx page 2 of 2 . . AP Physics C: Rotational vs. Linear Review (Mechanics) . https://www.flippingphysics.com/apc-rotational-vs-linear-review.html . . Name: Linear: Rotational: . . Displacement . . Velocity . . Acceleration . . Uniformly Accelerated Motion . (UAM) . or . Uniformly Angularly Accelerated Motion (UαM) . . Mass . . Kinetic Energy . . Newton’s Second Law . . Force / Torque . . Power . . Momentum . . | | ! . | | | | | | | | | . | Δx = x f − x i | ! | | | | | | | | | . ! . | | ! | ! | | | | | | | | . | = | | Δx | | = | | dx | | | | . vavg | | | | | &amp; v inst | | | | | | . | | | Δt . | | | | | dt | | | . ! | | ! | ! | | ! | | | | | | . | = | | Δv . | | = | dv | | | | | . aavg . | | | | | &amp; ainst | | | | | | . | | | Δt . | | | | | dt | | | . | | | | | | | | | | | . . v f  = v i + at . x f  = x i + v it + 12 at 2 . v f 2 = v i2 + 2a(x f − x i ) . x − x = 1 (v + v )t f i 2 f i . . Mass . . KEtranslational = 12 mv 2 . . ! | | ! . | | ! | | ! | | . | | | | | | dp | | . ∑F | = ma &amp; ∑F | = | | | | | | . | | | dt | | | | | . | | | | | | | | . | | Force | | | | | | . | | | dW | | ! | ! | | . Ptranslational . | = | | = F i v | | | | | . | | dt | | | | | | . | | | | | | | | . . p! = mv! . . | | | | | | | ! | | | −θi | | | | | | | | . | | | Δθ = θf | | | | ! | | | | | | | | | | | . ! . | | | | | | | ! . | | | ! | | | | | | | | . | | | | | | Δθ | | | | | | | | dθ | | | | . ωavg = . | | | &amp; | ωinst | = | | | | | | | | | | | | | . | | Δt . | | | | | dt | | | | | | | | | | | . ! . | | | | | | | ! | | | ! | | | | | ! | | | . | | | | Δω | | | | | | | | dω | | | | | | . αavg | = . | | | | | | &amp; | αinst | = | | | | | | | | | . | | | | | Δt . | | | | | dt | | | | | | | | . | | | | | | | | | | | | | | | | | | . ωf . | = ωi + αt . | | | | | | | | | | | | | | | | | . θ . | | = θ . | | + ω | t + | 1 | αt 2 | | | | | | | | | | | . | f . | | i | | | | | | | | | | | | | | | . | | | | | | | | i . | | 2 . | | | | | | | | . . ωf = ωi + 2α (θf −θi ) . θ −θ = 1 (ω + ω )t f i 2 f i . . Iparticles = ∑i mi ri2 . . Iobject with shape = ∫ r 2 dm . . KErotational = 12 Iω2 . . ! | ! | | | | | ! | | ! | | . | | | | | | | | dL | | . ∑τ =Iα&amp; | ∑τ = . | | | | | | | | | . | | dt | | | | | | | | . | | | | | | | | | | . ! | | ! | | ! . | | | | | | . τ = r . | × F . | | | | | | | | | . | | dW | | ! ! | | | | | | . Protational | = | | | | | = τ iω | | | | . | | dt . | | | | | | | | . ! | | | ! | | | | ! | | | . Lparticle = r . | × p . | | | | | | | | | . . ! ! . Lobject with shape = Iω . . Thank you to Aarti Sangwan for pointing out that I didn’t include a rotational form of work in the video. . . Name: Linear: Rotational: . . Work (constant force) . . Work (non-constant force) . . Net Work-Kinetic Energy . Theorem . . ! | ! | = F Δr cosθ | | | ! . | ! . | | | | | | | | | | . W = F . | ⋅ Δr | | | | W =τ ⋅Δθ . | | | | | | | | | | | . | | x . | | | | | | | | θ . | | | | | | . W = ∫x if Fx . | dx | | | | | W = ∫θif . | τ dθ . | | | | | | | | | . W =ΔKE= | 1 | mv 2 . | − . | 1 | mv 2 . | W =ΔKE= . | 1 | Iω 2 . | − . | 1 | Iω 2 . | | | | | . | | | | | | | | | | | | | | | | . net | | 2 | | f . | | 2 | | i . | net . | 2 . | f . | | 2 | i . | | . | | | | | | | | | | | | | | | | . . A little bonus: Look what happens when we combine a couple of the above formulas: . | = τ! . | ! | 1 | | | 1 | | | | | | | | . W . | | ⋅Δθ = IαΔθ = | | Iω . | 2 − . | | Iω 2 . | ⇒2αΔθ =ω . | 2−ω2 . | ⇒ ω 2 . | = ω 2 . | + 2αΔθ (UαM!) . | | . | | | | | | | | | | | | | | . net . | net . | | 2 | f . | | 2 | i . | f . | i . | f . | i . | | | . | | | | | | | | | | | | | | . 0202 Lecture Notes - AP Physics C- Rotational vs. Linear Review (Mechanics).docx | | | page 1 of 1 . | | | | | | | | | | | . . AP Physics C: Universal Gravitation Review (Mechanics) . https://www.flippingphysics.com/apc-universal-gravitation-review.html . The Force of Gravity or Weight of an object: Fg = mg . | . A subscript is missing: Fg = mog where “o” stands for “object”. . | o All forces require two objects. This equation is the force of gravitational attraction which exists between the object and a planet. . § For us, the planet usually is the Earth. gEarth = 9.81 sm2 . • Any two objects which have mass have a force of gravitational attraction between them. This force is determined using Newton’s Universal Law of Gravitation. (The Big G Equation) . o Fg = | Gm1m2 | : G is the Universal Gravitational Constant. G = 6.67 ×10 . | −11 N ⋅ m2 | | | . | r2 | | | kg2 . | | . Requires two objects: mass 1 and mass 2. . | r is not the radius by definition. r is the distance between the centers of mass of the two objects. Yes, sometimes r is the radius. . | This equation is the magnitude of the force of gravitational attraction. The force is always directed toward the other object. . | . Thank you to one of my Quality Control team members, Frank Geshwind, for pointing out . | ! | = − . | Gm1m2 | ˆ . | | . that I should have talked about the vector form of this equation: Fg | | r2 | r12 . | | . § Note: rˆ12 is the unit vector from object 1 to object 2. | | | | | . | | ! . | = − . | Gm1m2 | ! . | | . § Some textbooks even use this equation: Fg | | r3 | r12 . | | | | . | ! | | | | | | . • . | Note the subtle change here. r12 | is no longer the unit vector and . | | | | | . therefore the cube of r needs to be in the denominator. J . • Setting the two equations for the Force of Gravity acting on an object on the surface of the Earth equal to one another yields this: . o | Fg . | = Fg . | ⇒ mog = . | Gmo mE | ⇒ gEarth = . | | GmE . | | | . | | | | 2 | | (REarth | + Altitude) . | 2 | | . | | | | r | | | | | | . | | | | | | | | | | . As long as REarth ≫ ΔAltitude the gEarth ≈ constant . . | . In other words, close to the surface of the planet, the acceleration due to gravity can be considered to be constant. We live in a constant gravitational field. . | The gravitational potential energy is then constant: Ug = mgh . | 0203 Lecture Notes - AP Physics C- Universal Gravitation Review (Mechanics).docx page 1 of 3 . When viewed from a frame of reference which is not on the surface of the planet, the acceleration due to gravity is not constant and we need a different equation: . | . o Universal Gravitational Potential Energy: Ug = − Gm1m2 . . r . This equation assumes a zero line which is infinitely far away. ( r ≈ ∞ ) . | This means Universal Gravitational Potential Energy can never be positive. . | This equation requires two objects. . | . § Note: This equation is not Fg = | Gm1m2 | r is not squared. . | | . | r2 | | | . The gravitational potential energy which exists between an object and the Earth in terms of the objects distance, r, from the center of the Earth looks like this: . | . . Assumes constant density Earth. (Which is not true, however, we often assume it is.) o Be aware the graph as shown above left has an incorrect part: . This cannot be correct because this implies an object would experience a change in gravitational potential energy of zero. . ΔUg = Uf − Ui = 0 − 0 = 0 (This makes no sense.) . | . | This implies it takes zero energy to move an object from the center of a planet to infinitely far from the planet. . WFa = ΔME = ΔUg = 0 (Again, this makes no sense.) . | . | This would mean the planet has a binding energy of zero; still makes no sense. . | I will be releasing a video with the correct solution soon. . | . | The Gravitational Potential Energy which exists between the two objects when the object . | is on the surface of the Earth is: Ug | = − . | Gmo mE | | . | | RE | | . | | | | . • What is the minimum amount of work necessary to completely remove an object from a planet if the object is resting on the surface of the planet? This is called the Binding Energy. Assume the object is moved infinitely far away, has zero velocity when it gets there, and there is no friction. . ΔEsystem = ∑T ⇒ ΔME + ΔEinternal = WFa | | | | | | | | | | | | | | . | | | | | | Gm m | | Gm m | p | | | | | . ⇒ WF | = MEf . | − MEi + 0 = 0 − Ugi . | = 0 − . | | − | 1 . | 2 | | = | o . | | (Binding Energy) . | | . | | | | | | r . | | | | Rp . | | | | . a . | | | | | | | | | | | | | | . | | | | | | | | | | | | | | . What is the minimum velocity to launch an object off the Earth and have it never return? This is called Escape Velocity. Assume no atmosphere and no Earth rotation. Note: Mechanical Energy is conserved: . | . . ME | = ME . | | ⇒U . | | + KE . | =0⇒− . | Gmo mE | + | 1 | m v . | 2=0⇒ | 1 | v 2 . | = | GmE | ⇒ v . | | = | 2GmE | | | . | | | | | | | | | | | | | | | | | | | | | | . i . | | f . | | gi | i . | | R . | E | 2 o i . | | 2 i | | R . | E | escape | | R . | E | | | | . | | | | | | | | | | | | | | | | | | | | | | . 0203 Lecture Notes - AP Physics C- Universal Gravitation Review (Mechanics).docx page 2 of 3 . What is the total mechanical energy of an object in circular orbit? . | . ME | | = U . | | +KE=− . | Gmo mplanet | + | 1 | m v | 2 | | . | total | | g . | | | | | | o | | . | | | | | r | | 2 | o . | | | . | | | | | | | | | | | . The only force acting on the object moving in circular orbit is the force of gravity which acts inward. So we can sum the forces on the object in the in direction: . ∑Fin = Fg = mac ⇒ | Gmo mp | = mo . | v . | 2 | ⇒ | Gmo mp | | = | 1 | 2 | = KEo . | | | | | | | | | | | | | | | | | . | | | | | | o . | | | | | | | | | movo | | | | | | | | | | | | | . | | r . | 2 | | | r . | | | 2r . | | | | 2 | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | . MEtotal = − | Gmo mp | + | | Gmo mp | = | Gmo mp | −1+ | 1 | = | Gmo mp | | − . | 1 | = − . | Gmo mp | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | | | | | | | | | | | | . | r | | | 2r | | | r . | | | | | 2 | | | | | r | | | | | | 2r | | | | | . | | | | | | | | | | | | | | | | | | | | | 2 | | | | | | | . Kepler’s 3 laws. I find having a basic understanding of the his first two laws is adequate, however, you need to know how to derive Kepler’s 3rd law. . | Kepler’s 1st Law is that orbits are elliptical and defined as such: . | . . Two foci at F1 and F2. . Each focus is located a distance c from the center of the ellipse. o Semimajor axis of length a. (Major axis of length 2a) . | | o Semiminor axis of length b. (Minor axis of length 2b) o r1 + r2 = 2a . o a2 = b2 + c2 . o Eccentricity of an ellipse is defined as c/a. For a circle c = 0 therefore eccentricity = 0. o The eccentricity of the Earth’s orbit is 0.017, which means its orbit is nearly circular. . Kepler’s 2nd Law states that a line between the sun and the planet sweeps out an equal area over an equal time interval. . The result of this is that the closer an object is to the planet during an orbit, the faster its orbital speed will be. . | | . Let’s derive Kepler’s 3rd law: We assume circular orbit. The only force acting on the orbital object is the force of gravity acting inward. Sum the forces in the in direction: . | . ∑ Fin = Fg = mac ⇒ | Gmomp | | 2 | | Gmp | | 2 | Δθ 2 | 2π | 2 | 4π 2 . | 2 | | 4π 2 | 3 | | | | | | | | | | | . | | | = mo rω . | | ⇒ . | | | = ω . | | = | | | = | | | = | | | ⇒ T . | | = | | r | | | . | r . | 2 | | | | r | 3 | | | | | | | | | | T . | 2 | | | | | | | | . | | | | | | | | | | | Δt | | T | | | | | | Gmp | | | | | | | . 0203 Lecture Notes - AP Physics C- Universal Gravitation Review (Mechanics).docx page 3 of 3 . . AP Physics C: Simple Harmonic Motion Review (Mechanics) . https://www.flippingphysics.com/apc-simple-harmonic-motion-review.html . An object is in Simple Harmonic Motion if the acceleration of the object is proportional to the object’s displacement from an equilibrium position and that acceleration is directed toward the equilibrium position. a ∝ Δx . | For example: A horizontal mass-spring system on a frictionless surface has the following free body diagram: . | . . ∑Fx = −Fs = max ⇒ −kx = max ⇒ ax = − mk x . | . Amplitude, A, is defined as the maximum distance from equilibrium position. Therefore: . amax = mk A . | . | . o | Note: a = . | dv | &amp; v = . | dx . | ⇒ a = . | d dx | = | d2 x | | | | | | | | . | | | | | | | | | | | | | | | | . | | dt . | | dt . | | | | | | | dt . | 2 | | | | . | | | | | | | | dt | dt | | | | | | | . | | | d2 x | = − . | | k . | | | | | | | | | | . o | Therefore: . | | | | | x . | | | | | | | | | | . | | | dt2 | | m . | | | | | | | | | | | . o Let mk = ω2 where ω is called the angular frequency o Therefore: d2 x = −ω2 x . . dt2 . This is the condition for simple harmonic motion. . | This equation is not on the AP equation sheet. Memorize It!! . | . . o Note: ω = | k . | = | Δθ . | = | 2π | ⇒T =2π . | m . | (The period of a mass-spring system) . | | . | m . | | Δt . | | T | | k . | | | . . o Period of a pendulum: T = 2π | L . | (know how to derive) . | | . | | | | . | g . | | | . T = 1f &amp; ω = 2Tπ = 2π f ⇒ω = 2π f . Frequency, f, is the number of cycles an object goes through per second. . | Angular frequency and frequency are related, ω = 2π f , however, they are not the same. . | . | . 0204 Lecture Notes - AP Physics C- Simple Harmonic Motion Review (Mechanics).docx page 1 of 3 . One equation that satisfies the condition for Simple Harmonic Motion is: x (t) = Acos(ωt + φ ) . | . This equation is on the AP physics equation sheet, however, the equations for velocity and acceleration in simple harmonic motion are not. . | Have to use angles in radians in this equation. . | φ or “phi” is the “phase constant” or the “phase shift” of the wave. For example: . y = cos θ + π is “phase shifted” to the . | . | 2 . . π . left from y = cosθ by 2 radians. . v = dxdt = dtd (A cos(ωt + φ)) = A(−sin (ωt + φ))(ω ) . | . . | | d . | ( | | ) | | | d . | | | | . o | ⇒ v (t ) = A . | | | cos(ωt + φ) | | = A | − sin (ωt + φ) | | | (ωt + φ) | | . | | dt . | | | | | | | | | | . | | | | | | ( | ) | dt . | | | | . ⇒ v (t ) = −Aω sin (ωt + φ) . &amp; vmax = Aω . | | a = dvdt = dtd (− Aω sin (ωt + φ )) = − Aω dtd (sin (ωt + φ )) = − Aω cos(ωt + φ ) dtd (ωt + φ ) . ⇒ a = −Aω (cos(ωt + φ))(ω ) ⇒ a(t ) = −Aω 2 cos(ωt + φ) . | | . . &amp; amax = Aω2 . | ⇒ a(t) = −ω 2 (Acos(ωt + φ)) = −ω2 x (t) ⇒ d2 x = −ω2 x dt2 . | . 0204 Lecture Notes - AP Physics C- Simple Harmonic Motion Review (Mechanics).docx page 2 of 3 . . Simple Harmonic Motion is NOT Uniformly Accelerated Motion . | Total mechanical energy in Simple Harmonic Motion: . | . MEtotal = 12 kA2 = 12 m(vmax )2 . | 0204 Lecture Notes - AP Physics C- Simple Harmonic Motion Review (Mechanics).docx page 3 of 3 . . AP Physics C: Equations to Memorize (Mechanics) . https://www.flippingphysics.com/apc-equations-to-memorize.html . While I am not a fan of memorization and do my best to avoid having my students memorize, there are a few items which are not on the equation sheet which I do suggest you memorize. . Δx = 12 (v f  + v i )Δt (The fourth Uniformly Accelerated Motion equation) . | The Force of Gravity or Weight of an object: Fg = mg . | Fg⊥ = mg cosθ &amp; Fg! = mgsinθ (The components of the force of gravity parallel and . | . perpendicular on an incline where θ is the incline angle) . General range for coefficients of friction: 0 – 2 . | ΔEsystem = ∑T (General equation relating the change in energy of the system to the net energy transferred into or out of the system.) . | ∑W = ΔKE (always true) . | Wfriction = ΔME (only true when there is no energy added to or removed from the system via a force.) . | MEi = MEf (only true when there is no energy added to or removed from the system via a force and there is no work done by a nonconservative force.) . | . • | F . | | = − . | dU | (The equation which relates a conservative force and the potential energy . | | . | | x | | dx . | | | . | | | | | | | . | | | | | | | . associated with that force.) . • That every derivative is an integral and every integral is a derivative. For Example: . | dU | x f . | Uf . | | . o Fx = − | | ⇒ Fx dx = −dU ⇒ ∫ Fx . | dx = − ∫ dU ⇒ W = −ΔU . | | . | dx . | | | | . | | x i . | Ui . | | . Book Example: WFg  = Fg Δr cosθ = (mg)Δhcos(180°) = −mgΔh ⇒ WFg  = −ΔUg . | . | ! . | | | ! | | | | | | | | | . • | ∑pi . | | =∑pf | (Conservation of Momentum. It may seem obvious, | | | | | | | | | . | however, you need to remember when it is valid.) . | | | | | | | | | | | | . | | | | ! | | ! | ! | ! | | | | | . | | | | | | | dp | | | | | | . | o . | | ∑Fexternal = . | | | | = 0 ⇒ ∑pi | =∑pf | | | | | . | | | | | dt | | | | | | | | . | ! . | | | ! | | | | | | | | | . • | ∑Li . | = ∑Lf | (Conservation of Angular Momentum. Again, it may | | | | | | | | | | . | seem obvious, however, you need to remember when it is valid.) . | | | | | | | | | | | | . | | | | ! | | ! | ! | ! | | | | | . | | | | | | | dL | | | | | | . | o . | | ∑τ external = . | | | | = 0 ⇒ ∑Li | = ∑Lf | | | | | . | | | | | dt | | | | | | | | . | | | | | | | | | | | | | . • | rcm = . | 1 . | | ∫ r dm (The center of mass of a rigid object with shape) | | | | | | | | | . | | | mtotal . | | | | | | | | | | . | | | | | | | | | | | | | . . ρ = m∀ &amp; λ = mL (Volumetric Mass Density and Linear Mass Density) . | . 0205 Lecture Notes - AP Physics C- Equations to Memorize (Mechanics).docx page 1 of 3 . s = rΔθ &amp; at = rα (arc length and tangential acceleration) . Although vt = rω is on the equation sheet, so it is easy to get to the other two. . | | . vcm = Rω &amp; acm = Rα (The velocity and acceleration of the center of mass of a rigid object . | . which is rolling without slipping. Easy to remember from the previous equations.) . 1 revolution = 360° = 2π radians . | . • ω 2 = ω 2 + 2αΔθ; Δθ = 1 (ω + ω )Δt (Uniformly Angularly Accelerated Motion equations) f i 2 i f . • | d2 x | = −ω2 x . | (The condition for simple harmonic motion) . | | . | dt2 | | | | . | | | | | . vmax = Aω (The maximum velocity during simple harmonic motion) . | amax = Aω2 (the maximum acceleration during simple harmonic motion) . | . There are equations which many of you will want to memorize, however, I strongly discourage. . ! | ! | ! | | 1 | | 2 | | | . • FR | = −bv | &amp; FR | = | | Dρ Av . | | (Resistive force equations) . | | . | | | | 2 | | | | | . | | | | | | | | | . Neither of these equations are on the equation sheet. Don’t memorize these equations. . | | ! | = | 1 | Dρ Av2 . | | | | . § The problem will specify to use | F | | | | and give you that equation or tell | | | . | | | | | | | | . | R . | 2 | | ! | | | | . | | | | | ! | | | . | | | | | | | | . you the drag force is “proportional to” the velocity, which means FR | = −bv . | | | | | | | . • 746 watts = 1 hp (will be provided if you need it) . • Do not memorize: G = 6.67 ×10−11 N ⋅ m2 . kg2 . Instead, be familiar with the “Table of Information” and the page of general math formulas on the AP Physics equation sheet. . | Do not memorize the following equations; instead know how to derive them. This will be of much more use to you during the AP exam because they want you to understand where these equations come from and therefore will generally ask you a question that relates to their derivations. I did all of these derivations during the review. . | . o . | vcm = . | ∑mivi | &amp; acm . | = | | ∑miai | (velocity and acceleration of the center of mass of a . | | | | | | | | | | . | | ∑mi | | | | ∑mi . | | | | | | | | | | | . | system of particles. Simply take the derivative with respect to time once or twice of the . | | | | | | | | | | | | | | | | . | position of the center of mass of a system of particles to get these equations.) . | | | | | | | | | | | | | | | | . o . | Terminal velocity: vterminal . | = . | | | 2mg | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | . | | | | | Dρ A . | | | | | | | | | | | | . o . | Binding Energy: WFa = . | | Gmo mp | | | | | | | | | | | | | | . | | | | | Rp . | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | . o Escape Velocity: vescape = . | 2GmE | | | | | | | | | | | | | | | | . | | RE . | | | | | | | | | | | | | | | . | | | | | | | | | | | | | | | | | . 0205 Lecture Notes - AP Physics C- Equations to Memorize (Mechanics).docx | page 2 of 3 . | | | | | | | | | | | | | | | | . . o Total Mechanical Energy of Orbital Object: MEtotal | = − . | Gmo mp | | | | | | | . | | 2r | | | | | | | . | | | | | | | | | . | 2 | | 4π 2 | 3 | | | | | . o Kepler’s Third Law: T | | = | | r | | | | | . | | | | | | | | | . | | Gmp | | | | | | | . Velocity in simple harmonic motion: v (t ) = − Aω sin (ωt + φ ) . | Acceleration in simple harmonic motion: a(t) = − Aω2 cos(ωt + φ ) o Moments of Inertia of … . Uniform Hoop or thin cylindrical shell about its cylindrical axis: Icm = mR2 . | Uniform rigid rod about its center of mass: Icm = 121 mL2 . | Uniform Solid cylinder or disk about its cylindrical axis: Icm = 12 mR2 . Okay, I didn’t do this one during the review. . | . | Use the parallel axis theorem to find the moment of inertia of any of these about any other axis. . | A quick note about moments of inertia and the AP Exam. If you need the equation for a Moment of Inertia to solve a problem, it will be provided. And, while you do not need to memorize the equations for moments of inertia of various objects, you do need to be able to determine relative relationships between various moments of inertia of objects and those are just based on the basic equation for moment of inertia: I = ∑i mi ri2 . | . | . 0205 Lecture Notes - AP Physics C- Equations to Memorize (Mechanics).docx page 3 of 3 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/2022/08/23/AP-Physics-Notes.html",
            "relUrl": "/2022/08/23/AP-Physics-Notes.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "First Markdown Post",
            "content": "Markdown is a lightweight markup language for creating formatted text using a plain-text editor! . Here are a few things that you can do with Markdown: . You can style text using Markdown! . You can also add numbered lists! . My top 3 programming languages: . Python | Markdown | HTML Add images! . This is the logo for Markdown! . Add Youtube embeds! . youtube: https://youtu.be/watch?v=dQw4w9WgXcQ . Add code embeds! . print(&quot;Prime numbers:&quot;,end=&#39; &#39;) for n in range(1,100): for i in range(2,n): if(n%i==0): break else: print(n,end=&#39; &#39;) . This is the code that I used in my Jupyter notebook to print the prime numbers ranging from 1 to 100! . Add HTML Fragments! . | About Me Click this! . .",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2022/08/21/markdown-(3).html",
            "relUrl": "/markdown/2022/08/21/markdown-(3).html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "First Jupyter Notebook",
            "content": "Method . I started by using a for loop that goes through the numbers 1 to 100. After that, I used a nested for loop to go through the numbers from 2 to n to see if n is divisible by any numbers less than it (except for 1, which will always be a factor of n). If n is divisible by any of these numbers, then the nested for loop stops and goes to the next number (n+1); otherwise, the value of n is printed in the sequence. The output of this code is shown in the next line. . print(&quot;Prime numbers:&quot;,end=&#39; &#39;) for n in range(1,100): for i in range(2,n): if(n%i==0): break else: print(n,end=&#39; &#39;) . . Prime numbers: 1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/2022/08/21/1st-Notebook.html",
            "relUrl": "/jupyter/2022/08/21/1st-Notebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "APWH Game Notebook",
            "content": "Method . N/A . import random import time score=0 answers=[&quot;beijing&quot;,&quot;india&quot;,&quot;christianity&quot;,&quot;brahmin&quot;, &quot;mayan&quot;] statements=[&quot;Capital of China &quot;,&quot;Country where Hinduism was founded &quot;,&quot;Religion founded by Jesus &quot;,&quot;Upper caste of Hindus &quot;,&quot;Civilization of Central America &quot;] def question(statement,answer): time.sleep(1) msg=input(statement) if(msg==answer): print(&quot;Correct!&quot;) return 1 else: print(&quot;Incorrect. The correct answer is&quot;,answer) return 0 print(&quot;Welcome to APWH Practice Game! Please type all answers in lowercase and singular&quot;) for i in range(len(answers)): score+=question(statements[i],answers[i]) print(&quot;You got&quot;,score,&quot;out of&quot;,len(answers),&quot;questions correct&quot;) . Welcome to APWH Practice Game! Please type all answers in lowercase and singular .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/2022/08/21/1st-HngmanNotebook.html",
            "relUrl": "/jupyter/2022/08/21/1st-HngmanNotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Hangman Jupyter Notebook",
            "content": "Method . N/A . import random import time # Initial Steps to invite in the game: print(&quot; nWelcome to Hangman by Raunak Mondal n&quot;) name = input(&quot;Enter your name: &quot;) print(&quot;Hello &quot; + name + &quot;! Best of Luck!&quot;) time.sleep(2) print(&quot;The game is about to start! n Let&#39;s play Hangman!&quot;) time.sleep(3) # The parameters we require to execute the game: def main(): global count global display global word global already_guessed global length global play_game words_to_guess = [&quot;january&quot;,&quot;border&quot;,&quot;image&quot;,&quot;film&quot;,&quot;promise&quot;,&quot;kids&quot;,&quot;lungs&quot;,&quot;doll&quot;,&quot;rhyme&quot;,&quot;damage&quot; ,&quot;plants&quot;] word = random.choice(words_to_guess) length = len(word) count = 0 display = &#39;_&#39; * length already_guessed = [] play_game = &quot;&quot; # A loop to re-execute the game when the first round ends: def play_loop(): global play_game play_game = input(&quot;Do You want to play again? y = yes, n = no n&quot;) while play_game not in [&quot;y&quot;, &quot;n&quot;,&quot;Y&quot;,&quot;N&quot;]: play_game = input(&quot;Do You want to play again? y = yes, n = no n&quot;) if play_game == &quot;y&quot;: main() elif play_game == &quot;n&quot;: print(&quot;Thanks For Playing! We expect you back again!&quot;) exit() # Initializing all the conditions required for the game: def hangman(): global count global display global word global already_guessed global play_game limit = 5 guess = input(&quot;This is the Hangman Word: &quot; + display + &quot; Enter your guess: n&quot;) guess = guess.strip() if len(guess.strip()) == 0 or len(guess.strip()) &gt;= 2 or guess &lt;= &quot;9&quot;: print(&quot;Invalid Input, Try a letter n&quot;) hangman() elif guess in word: already_guessed.extend([guess]) index = word.find(guess) word = word[:index] + &quot;_&quot; + word[index + 1:] display = display[:index] + guess + display[index + 1:] print(display + &quot; n&quot;) elif guess in already_guessed: print(&quot;Try another letter. n&quot;) else: count += 1 if count == 1: time.sleep(1) print(&quot; _____ n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot;__|__ n&quot;) print(&quot;Wrong guess. &quot; + str(limit - count) + &quot; guesses remaining n&quot;) elif count == 2: time.sleep(1) print(&quot; _____ n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot;__|__ n&quot;) print(&quot;Wrong guess. &quot; + str(limit - count) + &quot; guesses remaining n&quot;) elif count == 3: time.sleep(1) print(&quot; _____ n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | n&quot; &quot; | n&quot; &quot; | n&quot; &quot;__|__ n&quot;) print(&quot;Wrong guess. &quot; + str(limit - count) + &quot; guesses remaining n&quot;) elif count == 4: time.sleep(1) print(&quot; _____ n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | O n&quot; &quot; | n&quot; &quot; | n&quot; &quot;__|__ n&quot;) print(&quot;Wrong guess. &quot; + str(limit - count) + &quot; last guess remaining n&quot;) elif count == 5: time.sleep(1) print(&quot; _____ n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | | n&quot; &quot; | O n&quot; &quot; | /| n&quot; &quot; | / n&quot; &quot;__|__ n&quot;) print(&quot;Wrong guess. You are hanged!!! n&quot;) print(&quot;The word was:&quot;,already_guessed,word) play_loop() if word == &#39;_&#39; * length: print(&quot;Congrats! You have guessed the word correctly!&quot;) play_loop() elif count != limit: hangman() main() hangman() . . Welcome to Hangman by Raunak Mondal .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/2022/08/21/1st-HangmanNotebook.html",
            "relUrl": "/jupyter/2022/08/21/1st-HangmanNotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://raunak2007.github.io/csp-fast-pages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post56": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://raunak2007.github.io/csp-fast-pages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Peer Grades",
          "content": "Grades as of now: . 1-2 Hacks: 1/1, completed everything accurately and did extra binary hacks | 3-4 Hacks: 0.9/1, Completed all hacks, but didn’t explain his answers for his own problems, which was a part of video 2 hacks | 5-7 Hacks: 0.9/1 | 8, 10 Hacks: 0.9/1 | 9, 11 Hacks: 1/1 | 12-13 Hacks: 1/1 | 14-15 Hacks: 1/1 | 17-18 Hacks: /1 | .",
          "url": "https://raunak2007.github.io/csp-fast-pages/2022-12-02-grades.html",
          "relUrl": "/2022-12-02-grades.html",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hi! I’m Raunak Mondal, and I’m a sophomore at Del Norte High School who loves applying math, computer science, artificial intelligence, and creative problem-solving to real-world problems. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats (including Markdown). &#8617; . |",
          "url": "https://raunak2007.github.io/csp-fast-pages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Frontend",
          "content": "| World Time API | Lists, Dictionaries, and Loops | APWH Game Notebook | Hangman Jupyter Notebook | App Ideas | .",
          "url": "https://raunak2007.github.io/csp-fast-pages/_pages/frontend.html",
          "relUrl": "/_pages/frontend.html",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "Notes for CSP",
          "content": "Notes for Python: . def symbolizes a new function | if, elif and, else can be used to do something after a given condition occurs | strings have to be in quotation marks | .",
          "url": "https://raunak2007.github.io/csp-fast-pages/_pages/notes.html",
          "relUrl": "/_pages/notes.html",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page10": {
          "title": "My CSP Vocab",
          "content": "syntax error: A mistake in typed code that violates the rules of the programming language. Typically, code with syntax errors will not run. | logic error: A mistake in an algorithm or program that causes it to behave unexpectedly or return the incorrect value. | run-time error: A mistake in a program that happens only when the program is actually run, such as a program attempting to access memory that does not exist. | overflow error: Error that results when the number of bits is not enough to represent the number (like a car’s odometer “rolling over”). | .",
          "url": "https://raunak2007.github.io/csp-fast-pages/_pages/vocab.html",
          "relUrl": "/_pages/vocab.html",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://raunak2007.github.io/csp-fast-pages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}